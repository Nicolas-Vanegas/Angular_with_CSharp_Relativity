<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Relativity.Services.Interfaces</name>
    </assembly>
    <members>
        <member name="T:Relativity.Services.Interfaces.Agent.AgentConstants">
            <summary>
            Provides routing information about URLs used by the Agent Manager service.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Agent.AgentConstants.MODULE_PREFIX">
            <summary>
            The prefix used for module called during service requests.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Agent.AgentConstants.SERVICE_MODULE_NAME">
            <summary>
            The name of the module called during service requests.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Agent.AgentConstants.SERVICE_NAME">
            <summary>
            The name of the service.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Agent.AgentConstants.SERVICE_ROUTE">
            <summary>
            The name of a route in the URL used in a request to the service.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Agent.AgentConstants.BASE_SERVICE_ROUTE">
            <summary>
            The base URI path for the service.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Agent.AgentConstants.AGENT_ID_STRING">
            <summary>
            The unique identifier for an agent used in a request.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Agent.IAgentManager">
            <summary>
            Exposes methods for creating, reading, updating, and deleting agents, as well as various helper methods. 
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.Agent.IAgentManager.CreateAsync(System.Int32,Relativity.Services.Interfaces.Agent.Models.AgentRequest)">
            <summary>
            Adds a single agent to Relativity.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for agents.</param>
            <param name="agentRequest">A request object containing the data used to create the agent.</param>
            <returns>The Artifact ID of the new agent.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Agent.IAgentManager.CreateAsync(System.Int32,Relativity.Services.Interfaces.Agent.Models.AgentRequest,System.Int32)">
            <summary>
            Adds multiple copies of an agent to Relativity.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for agents.</param>
            <param name="agentRequest">A request object containing the data used to create the agents.</param>
            <param name="count">The number of agents to create.</param>
            <returns>A list of Artifact IDs for the new agents.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Agent.IAgentManager.ReadAsync(System.Int32,System.Int32)">
            <summary>
            Retrieves basic metadata for an agent, including its name, type, interval, and other properties.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for agents.</param>
            <param name="agentID">The Artifact ID of the agent.</param>
            <returns>An object containing data about the requested agent.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Agent.IAgentManager.ReadAsync(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves extended metadata for an agent, including information about additional actions available.
            </summary>
            <remarks>The extended metadata includes a list of Action objects, which contain the name and URL of a RESTful operation, userâ€™s permissions to perform it, and other properties. 
            For example, a user may not have permissions to delete or update an agent if they only have read permissions.</remarks>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for agents.</param>
            <param name="agentID">The Artifact ID of the agent.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended agent metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user of this agent.</param>
            <returns>An object containing data about the requested agent.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Agent.IAgentManager.UpdateAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Agent.Models.AgentRequest)">
            <summary>
            Modifies the properties of an agent.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for agents.</param>
            <param name="agentID">The Artifact ID of the agent type.</param>
            <param name="agentRequest">The data about the agent being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Agent.IAgentManager.UpdateAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Agent.Models.AgentRequest,System.DateTime)">
            <summary>
            Restricts updates to the properties of the agent to the date that it was last modified
            </summary>
            <remarks>You can restrict the update of an agent to the date that it was last modified by passing a DateTime object to this method. 
            The value for the DateTime object must match the LastModifiedOn date for the agent stored in Relativity. Otherwise, you receive an error, indicating that the object has been modified. </remarks>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for agents.</param>
            <param name="agentID">The Artifact ID of the agent.</param>
            <param name="agentRequest">A request object containing data for the update operation.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the agent.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Agent.IAgentManager.DeleteAsync(System.Int32,System.Int32)">
            <summary>
            Removes an agent after it finishes executing.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for agents.</param>
            <param name="agentID">The Artifact ID of the agent to delete.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Agent.IAgentManager.DeleteAsync(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Removes an agent conditionally waiting for it to finish executing. 
            </summary>
            <remarks>When you forcefully delete an agent, the system doesn't wait for it to finish executing. In general, use a force delete when an agent has become unresponsive.</remarks>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for agents.</param>
            <param name="agentID">The Artifact ID of the agent to delete.</param>
            <param name="force">A Boolean value inditicating to immediatly remove the agent.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Agent.IAgentManager.ValidateCreateInstanceLimitAsync(System.Int32,Relativity.Services.Interfaces.Agent.Models.AgentRequest,System.Int32)">
            <summary>
            Indicates whether adding a new agent exceeds the limits for the agent type in a Relativity environment or server.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for agents.</param>
            <param name="agentRequest">A request object containing the data to be used for creating the agent.</param>
            <param name="count">The number of agents to create.</param>
            <returns>A list of enums representing the maximum limit on the number of this agent type in a Relativity environment or server, which would be violated by creating agents.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Agent.IAgentManager.ValidateUpdateInstanceLimitAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Agent.Models.AgentRequest)">
            <summary>
            Indicates whether modifying an agent violates the minimum or maximum limit for the agent type in a Relativity environment, resource pool, or server.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for agents.</param>
            <param name="agentID">The Artifact ID of the agent to update.</param>
            <param name="agentRequest">A request object containing the data to be used for updating the agent.</param>
            <returns>A list of enums representing the minimum or maximum limit on the number of this agent type in a Relativity environment,
             resource pool, or server that would be violated by modifying the agent.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Agent.IAgentManager.ValidateDeleteInstanceLimitAsync(System.Int32,System.Int32)">
            <summary>
            Indicates whether deleting an agent violates the lower limit for an agent type in a Relativity environment, resource pool, or server.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for agents.</param>
            <param name="agentID">The Artifact ID of the agent to delete.</param>
            <returns>A list of enums representing the minimum limit on the number of this agent type in a Relativity environment, 
            resource pool, or server that would be violated by deleting an agent.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Agent.IAgentManager.GetAgentServersAsync(System.Int32)">
            <summary>
            Retrieves a list of all agent servers in a Relativity environment.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for agents.</param>
            <returns>A list of objects containing information about the agent servers.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Agent.IAgentManager.GetAvailableAgentServersAsync(System.Int32,System.Int32)">
            <summary>
            Uses the Artifact ID of a specific agent type to retrieve a list of compatible agent servers.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for agents.</param>
            <param name="agentTypeID">The Artifact ID of the agent type.</param>
            <returns>A list of objects containing information about the agent servers.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Agent.IAgentManager.GetAvailableAgentServersAsync(System.Int32,System.Guid)">
            <summary>
            Uses the GUID of a specific agent type to retrieve a list of compatible agent servers.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for agents.</param>
            <param name="agentTypeGuid">The GUID of the agent type.</param>
            <returns>A list of objects containing information about the agent servers.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Agent.IAgentManager.GetAgentTypesAsync(System.Int32)">
            <summary>
            Retrieves a list of agent types.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for agents.</param>
            <returns>A list of objects containing information about the agent types.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.Agent.IAgentModule">
            <summary>
            Agent Module Interface.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Agent.Models.AgentEventLevel">
            <summary>
            Indicates the minimum level of detail of agent messages are logged to the Event Viewer.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Agent.Models.AgentEventLevel.Error">
            <summary>
            Indicates that events causing critical system failures or disabling the agent are logged.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Agent.Models.AgentEventLevel.Warning">
            <summary>
            Indicates that events disrupting agent activities are logged.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Agent.Models.AgentEventLevel.Informational">
            <summary>
            Indicates that life cycle events for the agent are logged.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Agent.Models.AgentInstanceLimit">
            <summary>
            Indicates when a minimum or maximum limit for agents allowed in an Relativity environment, server, or resource pool has been violated.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Agent.Models.AgentInstanceLimit.MinPerEnvironment">
            <summary>
            Indicates that the recommended minimum number of agent instances for the Relativity environment is violated.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Agent.Models.AgentInstanceLimit.MaxPerEnvironment">
            <summary>
            Indicates that the maxmimum number of agent instances for the Relativity environment is violated.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Agent.Models.AgentInstanceLimit.MinPerResourcePool">
            <summary>
            Indicates that the minimum recommended number of agent instances for the resource pool is violated.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Agent.Models.AgentInstanceLimit.MinPerServer">
            <summary>
            Indicates that the minimum recommended number of agent instances for the server is violated.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Agent.Models.AgentInstanceLimit.MaxPerServer">
            <summary>
            Indicates that the maximum number of agent instances for the server is violated.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Agent.Models.AgentInstanceLimit.LastPerEnvironment">
            <summary>
            Indicates that that last instance of an agent type in the environment being disabled or deleted.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Agent.Models.AgentInstanceLimitResult">
            <summary>
            Represents information about how the limit on the maximum or minimum number of an agent type has been violated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentInstanceLimitResult.Limit">
            <summary>
            Gets an enum representing which minimum or maximum limit for agent type has been violated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentInstanceLimitResult.ResourcePool">
            <summary>
            Gets the identifier for a resource pool where the recommended limits on the number of agents has been violated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentInstanceLimitResult.AgentServer">
            <summary>
            Gets the identifier for an agent server where the recommended limits on the number of agents has been violated.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Agent.Models.AgentRequest">
            <summary>
            Represents a DTO used as a request for creating or updating an agent.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentRequest.AgentType">
            <summary>
            Gets or sets the identifier for the agent type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentRequest.AgentServer">
            <summary>
            Gets or sets the identifier for the server hosting the agent.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentRequest.Enabled">
            <summary>
            Gets or sets a Boolean value indicating whether the agent is running.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentRequest.Interval">
            <summary>
            Gets or sets the number of seconds the agent manager will wait between each agent execution.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentRequest.LoggingLevel">
            <summary>
            Gets or sets a value indicating the message type that the system logs in the Event Viewer.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the agent.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentRequest.Notes">
            <summary>
            Gets or sets an optional description or other information about the agent.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.Agent.Models.AgentRequest.#ctor">
            <summary>
            Initializes an instance of the AgentRequest class with all properties set to null.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.Agent.Models.AgentRequest.#ctor(Relativity.Services.Interfaces.Agent.Models.AgentResponse)">
            <summary>
            Initializes an instance of the AgentRequest class with a response object, which is useful for chaining commands. 
            </summary>
            <param name="agentResponse">Agent response to convert to a request.</param>
        </member>
        <member name="T:Relativity.Services.Interfaces.Agent.Models.AgentResponse">
            <summary>
            Represents the results of a read operation on an agent.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentResponse.AgentType">
            <summary>
            Gets the identifier for the agent type for a user with sufficient permissions.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentResponse.AgentServer">
            <summary>
            Gets the identifier for the server hosting the agent for a user with sufficient permissions.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentResponse.Enabled">
            <summary>
            Gets a Boolean value indicating whether the agent is running.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentResponse.Interval">
            <summary>
            Gets the number of seconds that the agent should wait before checking the database for available jobs.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentResponse.LastUpdate">
            <summary>
            Gets the date and time immediately before the most recent call to the execution method on the agent.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentResponse.LoggingLevel">
            <summary>
            Gets a value indicating the message type that the system logs in the Event Viewer.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentResponse.Message">
            <summary>
            Gets the most recent message that the agent logged to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentResponse.DetailMessage">
            <summary>
            Gets a comprehensive version of the message that the agent logged to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentResponse.MessageTime">
            <summary>
            Gets the date and time when the agent last updated the Message property.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentResponse.EventLevel">
            <summary>
            Gets the event type of the last message that the agent logged to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentResponse.CreatedOn">
            <summary>
            Gets the date and time when the agent was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentResponse.CreatedBy">
            <summary>
            Gets the Artifact ID and name of the user who created the agent.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentResponse.LastModifiedBy">
            <summary>
            Gets the Artifact ID and name of the user who recently updated the agent.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentResponse.LastModifiedOn">
            <summary>
            Gets the date and time when the agent was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentResponse.Keywords">
            <summary>
            Gets optional words or phrases used to describe the agent.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentResponse.Notes">
            <summary>
            Gets optional words or phrase used to describe the agent.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentResponse.Meta">
            <summary>
            Gets a list of unsupported and read-only properties on the current Agent object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentResponse.Actions">
            <summary>
            Gets a list of RESTful operations that a user has permissions to perform on the agent.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Agent.Models.AgentServerResponse">
            <summary>
            Represents information about an agent server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentServerResponse.Type">
            <summary>
            Gets the type of the agent server. Possible values are Agent and WebBackgroundProcessing
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentServerResponse.ProcessorCores">
            <summary>
            Gets the number of cores the server has.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentServerResponse.NumberOfAgents">
            <summary>
            Gets the total number of agents currently on the server.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Agent.Models.AgentTypeResponse">
            <summary>
            Represents information about an agent type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentTypeResponse.AgentTypeGuid">
            <summary>
            Gets the agent type guid associated with this agent type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentTypeResponse.ApplicationName">
            <summary>
            Gets the name of the application associated with this agent type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentTypeResponse.CompanyName">
            <summary>
            Gets the name of the company that that implemented or provided the agent.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentTypeResponse.DefaultInterval">
            <summary>
            Gets the number of seconds that the agent should wait before checking the database for available jobs.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Agent.Models.AgentTypeResponse.DefaultLoggingLevel">
            <summary>
            Gets integer value indicating the message type that the system logs in the Event Viewer.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Choice.ChoiceConstants">
            <summary>
            Provides routing information about URLs used by the Choice Manager Service.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Choice.ChoiceConstants.MODULE_PREFIX">
            <summary>
            The prefix used for module called during service requests.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Choice.ChoiceConstants.CHOICE_ROUTE">
            <summary>
            The route base for choice action.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Choice.IChoiceModule">
            <summary>
            Client Module Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Choice.IChoiceManager">
            <summary>
            Exposes methods for creating, reading, updating, and deleting choices, as well as various helper methods. 
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.Choice.IChoiceManager.CreateAsync(System.Int32,Relativity.Services.Interfaces.Choice.Models.ChoiceRequest)">
            <summary>
            Adds a choice to Relativity.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the choice should be created. Use -1 to indicate the admin workspace.</param>
            <param name="choiceRequest">A request object containing the data used to create the choice.</param>
            <returns>The ArtifactID of the new choice created.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Choice.IChoiceManager.CreateAsync(System.Int32,Relativity.Services.Interfaces.Choice.Models.MassCreateChoiceRequest)">
            <summary>
            Adds a list of choices to Relativity throught a bulk operation using choices names and a default information object.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the choices should be created. Use -1 to indicate the admin workspace.</param>
            <param name="massCreateChoiceRequest">A request object that contains the choices' hierarchy and default data used for them creation.</param>
            <returns>A summary with the result of mass operation.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Choice.IChoiceManager.ReadAsync(System.Int32,System.Int32)">
            <summary>
            Retrieves basic metadata for a choice, including its name, field, and other properties.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the choice should be read. Use -1 to indicate the admin workspace.</param>
            <param name="choiceID">The ArtifactID of the choice being read.</param>
            <returns>And object containing data about the choice requested.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Choice.IChoiceManager.ReadAsync(System.Int32,System.Guid)">
            <summary>
            Retrieves basic metadata for a choice, including its name, field, and other properties.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the choice should be read. Use -1 to indicate the admin workspace.</param>
            <param name="choiceGuid">The ArtifactGuid of the choice being read.</param>
            <returns>And object containing data about the choice requested.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Choice.IChoiceManager.ReadAsync(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves basic metadata for a choice, including its name, field, and other properties.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the choice should be read. Use -1 to indicate the admin workspace.</param>
            <param name="choiceID">The ArtifactID of the choice being read.</param>
            <param name="includeMetadata">Whether or not to include additional metadata about the choice in the returned payload.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user of this choice.</param>
            <returns>And object containing data about the choice requested.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Choice.IChoiceManager.ReadAsync(System.Int32,System.Guid,System.Boolean,System.Boolean)">
            <summary>
            Retrieves basic metadata for a choice, including its name, field, and other properties.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the choice should be read. Use -1 to indicate the admin workspace.</param>
            <param name="choiceGuid">The ArtifactGuid of the choice being read.</param>
            <param name="includeMetadata">Whether or not to include additional metadata about the choice in the returned payload.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user of this choice.</param>
            <returns>And object containing data about the choice requested.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Choice.IChoiceManager.UpdateAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Choice.Models.ChoiceRequest)">
            <summary>
            Updates data of an existing choice
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the choice should be updated. Use -1 to indicate the admin workspace.</param>
            <param name="choiceID">The ArtifactID of the choice being updated.</param>
            <param name="choiceRequest">The data about the choice being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Choice.IChoiceManager.UpdateAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Choice.Models.ChoiceRequest,System.String)">
            <summary>
            Updates the information of a list of choices throught a bulk operation.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the choice should be updated. Use -1 to indicate the admin workspace.</param>
            <param name="choiceID">The ArtifactID of the choice being updated.</param>
            <param name="choiceRequest">The data about the choice being updated.</param>
            <param name="objectVersionToken">The version token of the choice being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Choice.IChoiceManager.UpdateAsync(System.Int32,System.Guid,Relativity.Services.Interfaces.Choice.Models.ChoiceRequest)">
            <summary>
            Updates the information of a list of choices throught a bulk operation.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the choice should be updated. Use -1 to indicate the admin workspace.</param>
            <param name="choiceGuid">The ArtifactGuid of the choice being updated.</param>
            <param name="choiceRequest">The data about the choice being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Choice.IChoiceManager.UpdateAsync(System.Int32,System.Guid,Relativity.Services.Interfaces.Choice.Models.ChoiceRequest,System.String)">
            <summary>
            Restricts updates to the properties of the choice to the date that it was last modified
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the choice should be updated. Use -1 to indicate the admin workspace.</param>
            <param name="choiceGuid">The ArtifactGuid of the choice being updated.</param>
            <param name="choiceRequest">The data about the choice being updated.</param>
            <param name="objectVersionToken">The version token of the choice being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Choice.IChoiceManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.Choice.Models.MassUpdateChoiceRequest[])">
            <summary>
            Performs a mass update for a list of choices.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the choices should be updated. Use -1 to indicate the admin workspace.</param>
            <param name="massUpdateChoices">An array of objects containing the choice's data used to perform the mass update.</param>
            <returns>A summary with the result of mass operation.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Choice.IChoiceManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.Choice.Models.MassUpdateChoiceRequest[],System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Performs a mass update for a list of choices.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the choices should be updated. Use -1 to indicate the admin workspace.</param>
            <param name="massUpdateChoices">An array of objects containing the choice's data used to perform the mass update.</param>
            <param name="cancel">Used to request the cancellation of the update mass operation.</param>
            <param name="progress">Contains a callback that reports mass operation execution progress.</param>
            <returns>A summary with the result of mass operation.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Choice.IChoiceManager.DeleteAsync(System.Int32,System.Int32)">
            <summary>
            Delete a choice. If the choice has children choices an error is thrown
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the choice should be deleted. Use -1 to indicate the admin workspace.</param>
            <param name="choiceID">The ArtifactID of the choice being deleted.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Choice.IChoiceManager.DeleteAsync(System.Int32,System.Guid)">
            <summary>
            Delete a choice. If the choice has children choices an error is thrown
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the choice should be deleted. Use -1 to indicate the admin workspace.</param>
            <param name="choiceGuid">The ArtifactGuid of the choice being deleted.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Choice.IChoiceManager.DeleteAsync(System.Int32,Relativity.Services.Interfaces.Choice.Models.MassDeleteChoiceRequest)">
            <summary>
            Performs a mass delete operation for a list of choice identifiers.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the choices should be updated. Use -1 to indicate the admin workspace.</param>
            <param name="massDeleteRequest">A request that have the specified choice identifiers to be deleted.</param>
            <returns>A summary with the result of mass delete operation.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Choice.IChoiceManager.GetAvailableParentsListAsync(System.Int32,Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier)">
            <summary>
            Retrieve the list of available parent choices in a field.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the parent choices should be retrieved. Use -1 to indicate the admin workspace.</param>
            <param name="fieldIdentifier">The ObjectIdentifier of the field for retrieving the parent choices.</param>
            <returns>All parent choices available in a field.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Choice.IChoiceManager.GetAvailableParentsListAsync(System.Int32,System.Int32)">
            <summary>
            Retrieve the list of available parent choices for a choice
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the parent choices should be retrieved. Use -1 to indicate the admin workspace.</param>
            <param name="choiceID">The ArtifactID of the choice for retrieving the parent choices.</param>
            <returns>All parent choices available for a choice.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Choice.IChoiceManager.GetAvailableParentsListAsync(System.Int32,System.Guid)">
            <summary>
            Retrieve the list of available parent choices for a choice.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the parent choices should be retrieved. Use -1 to indicate the admin workspace.</param>
            <param name="choiceGuid">The ArtifactGuid of the choice for retrieving the parent choices.</param>
            <returns>All parent choices available for a choice.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Choice.IChoiceManager.GetColorsListAsync(System.Int32)">
            <summary>
            Retrieve the list of available colors.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the colors should be retrieved. Use -1 to indicate the admin workspace.</param>
            <returns>All the colors available in a workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Choice.IChoiceManager.SortAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Choice.Models.ChoiceReorderTypeEnum)">
            <summary>
            Sorts alphabetically by Name all choices associated with a field.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the choice should be modified. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The ArtifactID of the field which to be applied the choices sort operation.</param>
            <param name="sortType">The type of sortting action to be performed over all choices.</param>
            <returns>A summary with the result of sort operation.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Choice.IChoiceManager.MoveAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier[],Relativity.Services.Interfaces.Choice.Models.ChoiceMoveTypeEnum)">
            <summary>
            Updates the order of a set of choices to locate them in the beginning or the end of the choices in a field.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the choice should be modified. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">ArtifactID of the field related to the choices being edited.</param>
            <param name="choiceObjectIdentifiers">List of <see cref="T:Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier"/> of choices that will be located based on <paramref name="moveListTo"/> value.</param>
            <param name="moveListTo">The location expected of the choices.</param>
            <returns>A summary with the result of sort operation.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Choice.IChoiceManager.MoveAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier[],Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier)">
            <summary>
            Updates the order of a set of choices to locate them after an specific choice.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the choice should be modified. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">ArtifactID of the field related to the choices being edited.</param>
            <param name="choiceObjectIdentifiers">List of <see cref="T:Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier"/> of choices that will be located after the choice specifiec in <paramref name="choiceID"/>.</param>
            <param name="choiceID"><see cref="T:Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier"/> of the choice expected to be before of the choices sent in <paramref name="choiceObjectIdentifiers"/>.</param>
            <returns>A summary with the result of sort operation.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.Choice.Models.ChoiceMoveTypeEnum">
            <summary>
            Idenitfies the position in the whole lis of choices of a field where a subset of choices could be relocated
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Choice.Models.ChoiceMoveTypeEnum.Beginning">
            <summary>
            Represents action of move a list of choices at the beginning of the whole list of choices of a field.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Choice.Models.ChoiceMoveTypeEnum.End">
            <summary>
            Represents action of move a list of choices at the end of the whole list of choices of a field.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Choice.Models.ChoiceReorderTypeEnum">
            <summary>
            Idenitfies the type of sort applied to a list of choices.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Choice.Models.ChoiceReorderTypeEnum.Ascending">
            <summary>
            Represents action of reordering choices by ascending alphabetical order.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Choice.Models.ChoiceReorderTypeEnum.Descending">
            <summary>
            Represents action of reordering choices by descending alphabetical order.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Choice.Models.ChoiceRequest">
            <summary>
            Represents a DTO used as a request for creating or updating a choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.ChoiceRequest.Field">
            <summary>
            Gets or sets the field for the choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.ChoiceRequest.Name">
            <summary>
            Gets or sets the name for the choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.ChoiceRequest.Color">
            <summary>
            Gets or sets the color for the choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.ChoiceRequest.RelativityApplications">
            <summary>
            Gets or sets a list of identifiers of associated Relativity Applications for the choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.ChoiceRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.ChoiceRequest.Notes">
            <summary>
            Gets or sets an optional description or other information about the choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.ChoiceRequest.Parent">
            <summary>
            Gets or sets the parent for the choice. Not available for choice massive operations
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.ChoiceRequest.Order">
            <summary>
            Gets or sets the order for the choice. Not available for choice massive operations
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.ChoiceRequest.KeyboardShortcut">
            <summary>
            Gets or sets the keyboard shortcut for the choice. Not available for choice massive operations
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Choice.Models.ChoiceResponse">
            <summary>
            Represents the results of a read operation on a choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.ChoiceResponse.Field">
            <summary>
            Gets the field for the choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.ChoiceResponse.Order">
            <summary>
            Gets choice the order for the choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.ChoiceResponse.KeyboardShortcut">
            <summary>
            Gets choice the keyboard shortcut for the choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.ChoiceResponse.Color">
            <summary>
            Gets choice the color for the choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.ChoiceResponse.Parent">
            <summary>
            Gets the parent choice for the choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.ChoiceResponse.RelativityApplications">
            <summary>
            Gets choice a list of identifiers of associated Relativity Applications for the choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.ChoiceResponse.CreatedOn">
            <summary>
            Gets the date and time when the choice was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.ChoiceResponse.CreatedBy">
            <summary>
            Gets the Artifact ID and name of the user who created the choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.ChoiceResponse.LastModifiedBy">
            <summary>
            Gets the Artifact ID and name of the user who recently updated the choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.ChoiceResponse.LastModifiedOn">
            <summary>
            Gets the date and time when the choice was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.ChoiceResponse.Keywords">
            <summary>
            Gets optional words or phrase used to describe the choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.ChoiceResponse.Notes">
            <summary>
            Gets optional words or phrase used to describe the choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.ChoiceResponse.Meta">
            <summary>
            Gets the meta data associated with the Choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.ChoiceResponse.Actions">
            <summary>
            Gets a list of RESTful operations that a user has permissions to perform on the choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.ChoiceResponse.ObjectVersionToken">
            <summary>
            Gets or sets version token of an object.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Choice.Models.MassActionChoiceResponse">
            <summary>
            Represents the result summary of both massive delete or a massive update of choices.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.MassActionChoiceResponse.TotalChoices">
            <summary>
            Gets or sets the total count of choices updated or deleted by massive operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.MassActionChoiceResponse.Success">
            <summary>
            Sets a Boolean value to true when no errors occurred while processing choices for a massive operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.MassActionChoiceResponse.Message">
            <summary>
            Sets explanatory information for an error when one occurs.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Choice.Models.MassCreateChoiceModel">
            <summary>
            Represents data model for choice's information of a massive create operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.MassCreateChoiceModel.Field">
            <summary>
            Gets or sets the field for the choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.MassCreateChoiceModel.RelativityApplications">
            <summary>
            Gets or sets a list of identifiers of associated Relativity Applications for the choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.MassCreateChoiceModel.Keywords">
            <summary>
            Gets or sets any keywords associated with the choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.MassCreateChoiceModel.Notes">
            <summary>
            Gets or sets an optional description or other information about the choice.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Choice.Models.MassCreateChoiceRequest">
            <summary>
            Represents the request to create multiple choices at once.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.MassCreateChoiceRequest.Choices">
            <summary>
            Gets or sets choice's hierarchy to be created and contains the choice names
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.MassCreateChoiceRequest.ChoiceTemplateData">
            <summary>
            Gets or sets choice data that will be used to create every choice created on Mass Create Operation.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Choice.Models.MassCreateChoiceResponse">
            <summary>
            Represents the result summary of both massive create choices.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.MassCreateChoiceResponse.ChoicesCreated">
            <summary>
            Gets or sets list of created choices
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.MassCreateChoiceResponse.Success">
            <summary>
            Sets a Boolean value to true when no errors occurred while processing choices for a massive operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.MassCreateChoiceResponse.Message">
            <summary>
            Sets explanatory information for an error when one occurs.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Choice.Models.MassCreateChoiceStructure">
            <summary>
            Represents choice abstraction used to define hierarchy of choices to be created when a mass creation operation is performed.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.MassCreateChoiceStructure.Name">
            <summary>
            Gets or sets the choice name.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.MassCreateChoiceStructure.Children">
            <summary>
            Gets or sets a list of children choices.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Choice.Models.MassCreatedChoice">
            <summary>
            Represents data model for choice's information returned by massive create operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.MassCreatedChoice.ParentChoice">
            <summary>
            Gets or sets the parent Choice of the created choice.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Choice.Models.MassDeleteChoiceRequest">
            <summary>
            Represents a request to delete multiple choices.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.MassDeleteChoiceRequest.ChoiceIDs">
            <summary>
            Gets or sets a list of choice IDs to be deleted.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Choice.Models.MassUpdateChoiceRequest">
            <summary>
            Represents data model for choices massive update request.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.MassUpdateChoiceRequest.Field">
            <summary>
            Gets or sets the field for the choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.MassUpdateChoiceRequest.Name">
            <summary>
            Gets or sets the name for the choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.MassUpdateChoiceRequest.Color">
            <summary>
            Gets or sets the color for the choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.MassUpdateChoiceRequest.RelativityApplications">
            <summary>
            Gets or sets a list of identifiers of associated Relativity Applications for the choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.MassUpdateChoiceRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Choice.Models.MassUpdateChoiceRequest.Notes">
            <summary>
            Gets or sets an optional description or other information about the choice.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Client.IClientManager">
            <summary>
            Exposes the methods for retrieving information about Relativity clients.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.Client.IClientManager.CreateAsync(Relativity.Services.Interfaces.Client.Models.ClientRequest)">
            <summary>
            Adds a client to Relativity.
            </summary>
            <param name="clientRequest">A request object containing the data used to create the client.</param>
            <returns>An object containing data about the new client.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Client.IClientManager.ReadAsync(System.Int32)">
            <summary>
            Retrieves metadata for a client, including its name, status, and other properties.
            </summary>
            <param name="clientID">The Artifact ID of the client.</param>
            <returns>An object containing data about the requested client.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Client.IClientManager.ReadAsync(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves advanced metadata for a client, including its name, status, and other properties.
            </summary>
            <param name="clientID">The Artifact ID of the client.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended client metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the user for this client.</param>
            <returns>An object containing data about the requested client.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Client.IClientManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.Client.Models.ClientRequest)">
            <summary>
            Modifies the properties of a client.
            </summary>
            <param name="clientID">The Artifact ID of the client.</param>
            <param name="clientRequest">The data about the client being updated.</param>
            <returns>An object containing data about the updated client.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Client.IClientManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.Client.Models.ClientRequest,System.DateTime)">
            <summary>
            Modifies the properties of a client.
            </summary>
            <param name="clientID">The Artifact ID of the client.</param>
            <param name="clientRequest">The data about the client being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the client.</param>
            <returns>An object containing data about the updated client.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Client.IClientManager.DeleteAsync(System.Int32)">
            <summary>
            Deletes a client.
            </summary>
            <param name="clientID">The Artifact ID of the client to delete.</param> 
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Client.IClientManager.QueryGroupsAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Int32)">
            <sumary>
            Retrieves the list of groups associated with the specified client.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="clientID">The Artifact ID of the client.</param>
            <returns>Returns the results of the executed query that contains visible groups associated with the client.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Client.IClientManager.QueryGroupsAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Int32,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <sumary>
            Retrieves the list of groups associated with the specified client.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="clientID">The Artifact ID of the client.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query that contains visible groups associated with the client.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Client.IClientManager.QueryGroupsAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <sumary>
            Retrieves the list of groups associated with the specified client.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="clientID">The Artifact ID of the client.</param>
            <param name="cancel">A request to cancel the execution of a query for an object. </param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query that contains visible groups associated with the client.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Client.IClientManager.QueryMattersAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Int32)">
            <sumary>
            Retrieves the list of matters associated with the specified client.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="clientID">The Artifact ID of the client.</param>
            <returns>Returns the results of the executed query that contains visible matters associated with the client.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Client.IClientManager.QueryMattersAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Int32,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <sumary>
            Retrieves the list of matters associated with the specified client.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="clientID">The Artifact ID of the client.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query that contains visible matters associated with the client.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Client.IClientManager.QueryMattersAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <sumary>
            Retrieves the list of matters associated with the specified client.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="clientID">The Artifact ID of the client.</param>
            <param name="cancel">A request to cancel the execution of a query for an object. </param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query that contains visible matters associated with the client.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Client.IClientManager.QueryUsersAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Int32)">
            <sumary>
            Retrieves the list of users associated with the specified client.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="clientID">The Artifact ID of the client.</param>
            <returns>Returns the results of the executed query that contains visible users associated with the client.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Client.IClientManager.QueryUsersAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Int32,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <sumary>
            Retrieves the list of users associated with the specified client.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="clientID">The Artifact ID of the client.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query that contains visible users associated with the client.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Client.IClientManager.QueryUsersAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <sumary>
            Retrieves the list of users associated with the specified client.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="clientID">The Artifact ID of the client.</param>
            <param name="cancel">A request to cancel the execution of a query for an object. </param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query that contains visible users associated with the client.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Client.IClientManager.GetEligibleStatusesAsync">
            <summary>
            Gets all eligible statuses for the client.
            </summary>
            <returns>A list of eligible choices for a client's status.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Client.IClientManager.CreateClientDomainRequestKeyAsync(System.Int32)">
            <summary>
            Requests Client Domain request key for a client.
            </summary>
            <param name="clientID">Artifact ID of the client.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Client.IClientManager.SubmitClientDomainActivationKeyAsync(System.Int32,System.String)">
            <summary>
            Submits Client Domain activation key.
            </summary>
            <param name="clientID">Artifact ID of the client.</param>
            <param name="activationKey">Client Domain activation key.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Client.IClientManager.SubmitClientDomainActivationKeyAsync(System.Int32,System.String,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Submits Client Domain activation key.
            </summary>
            <param name="clientID">Artifact ID of the client.</param>
            <param name="activationKey">Client Domain activation key.</param>
            <param name="progress">A callback that reports the progress of the operation.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Client.IClientManager.SubmitClientDomainActivationKeyAsync(System.Int32,System.String,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Submits Client Domain activation key.
            </summary>
            <param name="clientID">Artifact ID of the client.</param>
            <param name="activationKey">Client Domain activation key.</param>
            <param name="cancel">A request to cancel the execution of activating client domain.</param>
            <param name="progress">A callback that reports the progress of the operation.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Client.IClientManager.ActivateClientDomainAsync(System.Int32)">
            <summary>
            Activates Client Domain client.
            </summary>
            <param name="clientID">Artifact ID of the client.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Client.IClientManager.ActivateClientDomainAsync(System.Int32,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Activates Client Domain client.
            </summary>
            <param name="clientID">Artifact ID of the client.</param>
            <param name="progress">A callback that reports the progress of the operation.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Client.IClientManager.ActivateClientDomainAsync(System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Activates Client Domain client.
            </summary>
            <param name="clientID">Artifact ID of the client.</param>
            <param name="cancel">A request to cancel the execution of activating client domain.</param>
            <param name="progress">A callback that reports the progress of the operation.</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.Client.IClientModule">
            <summary>
            Client Module Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Client.Models.ClientRequest">
            <summary>
            Represents a DTO used as a request for creating or updating a client.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Client.Models.ClientRequest.Name">
            <summary>
            Gets or sets the client's name.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Client.Models.ClientRequest.Number">
            <summary>
            Gets or sets the client's number.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Client.Models.ClientRequest.Status">
            <summary>
            Gets or sets the client's status.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Client.Models.ClientRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the client.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Client.Models.ClientRequest.Notes">
            <summary>
            Gets or sets an optional description or other information about the client.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.Client.Models.ClientRequest.#ctor">
            <summary>
            Initializes an instance of the ClientRequest class with all properties set to their default values.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.Client.Models.ClientRequest.#ctor(Relativity.Services.Interfaces.Client.Models.ClientResponse)">
            <summary>
            Initializes an instance of the ClientRequest class with a response object, which is useful for chaining commands.
            </summary>
            <param name="clientResponse">Client response to convert to a request.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.Client.Models.ClientRequest.op_Implicit(Relativity.Services.Interfaces.Client.Models.ClientResponse)~Relativity.Services.Interfaces.Client.Models.ClientRequest">
            <summary>
            Allows a ClientResponse to be implicitly converted to a ClientRequest.
            </summary>
            <param name="clientResponse"></param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.Client.Models.ClientResponse">
            <summary>
            Represents the results of a read operation on a client.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Client.Models.ClientResponse.Name">
            <summary>
            Gets or sets the client's name.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Client.Models.ClientResponse.Number">
            <summary>
            Gets or sets the client's number.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Client.Models.ClientResponse.Status">
            <summary>
            Gets or sets the client's status.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Client.Models.ClientResponse.IsClientDomain">
            <summary>
            Gets or sets the client's domain status.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Client.Models.ClientResponse.Keywords">
            <summary>
            Gets or sets any keywords associated with the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Client.Models.ClientResponse.Notes">
            <summary>
            Gets or sets an optional description or other information about the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Client.Models.ClientResponse.CreatedOn">
            <summary>
            Gets the date and time when the artifact was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Client.Models.ClientResponse.CreatedBy">
            <summary>
            Gets the Artifact ID and name of the user who created the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Client.Models.ClientResponse.LastModifiedBy">
            <summary>
            Gets the Artifact ID and name of the user who recently updated the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Client.Models.ClientResponse.LastModifiedOn">
            <summary>
            Gets the date and time when the artifact was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Client.Models.ClientResponse.Meta">
            <summary>
            Gets a list of unsupported and read-only properties on the current artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Client.Models.ClientResponse.Actions">
            <summary>
            Gets a list of RESTful operations that a user has permissions to perform on the artifact.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Document.IDocumentFileManager">
            <summary>
            Exposes the methods for working with files associated with documents
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.Document.IDocumentFileManager.DownloadNativeFileAsync(System.Int32,System.Int32)">
            <summary>
            Download a document's native file.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the document resides.</param>
            <param name="documentID">The ArtifactID of the document</param>
            <returns>A stream that contains the native file associated with the document</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Document.IDocumentFileManager.DownloadFileAsync(System.Int32,System.Guid)">
            <summary>
            Download a file associated with a document
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the document resides.</param>
            <param name="fileGuid">The GUID of the file to download</param>
            <returns>A stream that contains the file associated with the GUID</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Document.IDocumentFileManager.GetFileInfoAsync(System.Int32,System.Int32)">
            <summary>
            Gets a list of all the files associated with a document
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the document resides.</param>
            <param name="documentID">The ArtifactID of the document</param>
            <returns>A list of all the files associated with the document</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.Document.IDocumentModule">
            <summary>
            Document Module Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Document.Models.DocumentFile">
            <summary>
            A file associated with a Document
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Document.Models.DocumentFile.Guid">
            <summary>
            Unique universal identifier for the file 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Document.Models.DocumentFile.Filename">
            <summary>
            Name of the file
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Document.Models.DocumentFile.Identifier">
            <summary>
            Unique string identifier for the file
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Document.Models.DocumentFile.Order">
            <summary>
            Order of the file within the set of files of that type. This property will only have a non-zero value for OriginalImage and ProducedImage files
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Document.Models.DocumentFile.FileType">
            <summary>
            The type of the file
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Document.Models.DocumentFile.Size">
            <summary>
            The size of the file in bytes
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Document.Models.DocumentFile.Rotation">
            <summary>
            The orientation to display the file. This property is only set for OriginalImage and ProducedImage files
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Document.Models.DocumentFileRotation">
            <summary>
            The set of valid rotation values for a document file
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Document.Models.DocumentFileRotation.NotSet">
            <summary>
            Rotation not set.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Document.Models.DocumentFileRotation.ZeroDegrees">
            <summary>
            Rotation of 0 degress
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Document.Models.DocumentFileRotation.NinentyDegrees">
            <summary>
            Rotation of 90 degress
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Document.Models.DocumentFileRotation.OneHundredEightyDegrees">
            <summary>
            Rotation of 180 degress
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Document.Models.DocumentFileRotation.TwoHundredSeventyDegrees">
            <summary>
            Rotation of 270 degress
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Document.Models.DocumentFileType">
            <summary>
            The types of files that may be associated with documents.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Document.Models.DocumentFileType.Native">
            <summary>
            Native file
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Document.Models.DocumentFileType.OriginalImage">
            <summary>
            Original image file
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Document.Models.DocumentFileType.ProducedImage">
            <summary>
            Produced image file
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.EmailValidation.EmailValidationConstants.MODULE_PREFIX">
            <summary>
            Email Validation module name from the url path for Email Validation Kepler Services
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.EmailValidation.EmailValidationConstants.SERVICE_ROUTE">
            <summary>
            Email Validation route name from the url path for Email Validation Kepler Services
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.EmailValidation.IEmailValidationManager.VerifyEmails(System.String)">
            <summary>
            Given a semicolon separated email string, returns a EmailValidationResponseObject
            </summary>
            <param name="emailList"></param>
            <returns>An EmailValidationResponseObject that contains hash sets of valid and invalid emails</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.EventHandler.IEventHandlerManager">
            <summary>
            Exposes the methods for managing event handlers on object types.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.EventHandler.IEventHandlerManager.GetAttachedAsync(System.Int32,System.Int32)">
            <summary>
            Lists the attached event handlers on an object type.
            </summary>
            <param name="workspaceID">The workspace ArtifactID of the object type. Use -1 to indicate the admin workspace.</param>
            <param name="objectTypeID">ArtifactID of the object type.</param>
            <returns>List of event handlers attached to the object type.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.EventHandler.IEventHandlerManager.AttachAsync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Attaches an event handler to an object type.
            </summary>
            <param name="workspaceID">The workspace ArtifactID of the object type. Use -1 to indicate the admin workspace.</param>
            <param name="objectTypeID">ArtifactID of the object type.</param>
            <param name="eventHandlerID">ID of the event handler.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.EventHandler.IEventHandlerManager.DetachAsync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Detaches an event handler from an object type. The event handler cannot be removed if its apart of a locked application.
            </summary>
            <param name="workspaceID">The workspace ArtifactID of the object type. Use -1 to indicate the admin workspace.</param>
            <param name="objectTypeID">ArtifactID of the object type.</param>
            <param name="eventHandlerID">ID of the event handler.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.EventHandler.IEventHandlerManager.GetAvailableEventHandlersAsync(System.Int32,System.Int32)">
            <summary>
            Returns a list of event handlers availabe to attach to an object type.
            </summary>
            <param name="workspaceID">The workspace ArtifactID of the object type. Use -1 to indicate the admin workspace.</param>
            <param name="objectTypeID">ArtifactID of the object type.</param>3
        </member>
        <member name="T:Relativity.Services.Interfaces.EventHandler.IEventHandlerModule">
            <summary>
            Event Handler Module
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.EventHandler.Models.EventHandlerExecution">
            <summary>
             Specifies the execution of the event handler.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.EventHandler.Models.EventHandlerExecution.Console">
            <summary>
             Defines a console panel. Executes when elements on that console are clicked by a user.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.EventHandler.Models.EventHandlerExecution.ListPageInteraction">
            <summary>
             Executes on the Item List. Loads javascript that consumes the List Page API.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.EventHandler.Models.EventHandlerExecution.PageInteraction">
            <summary>
             Executes on the an object's view and edit pages. Loads custom javascript.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.EventHandler.Models.EventHandlerExecution.PostCopy">
            <summary>
             Executes after an object is copied.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.EventHandler.Models.EventHandlerExecution.PostSave">
            <summary>
             Executes after a user changes field values and clicks the Save button.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.EventHandler.Models.EventHandlerExecution.PreCascadeDelete">
            <summary>
             Executes before the delete process starts for an object that has dependant objects.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.EventHandler.Models.EventHandlerExecution.PreCopy">
            <summary>
             Executes before an object is copied.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.EventHandler.Models.EventHandlerExecution.PreDelete">
            <summary>
             Executes before an object is deleted.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.EventHandler.Models.EventHandlerExecution.PreLoad">
            <summary>
             Executes on the an object's view and edit pages.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.EventHandler.Models.EventHandlerExecution.PreMassDelete">
            <summary>
             Executes before the deletion of a large set of objects.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.EventHandler.Models.EventHandlerExecution.PreSave">
            <summary>
             Executes after a user changes field values and clicks the Save button.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.EventHandler.Models.EventHandlerExecution.Save">
            <summary>
             Replaces the standard save process set by Relativity. Execution is after pre save event handlers.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.EventHandler.Models.EventHandlerResponse">
            <summary>
            Represents an event handler used to execute logic and various workflow steps.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.EventHandler.Models.EventHandlerResponse.ID">
            <summary>
            Gets the reference ID of the event handler issued by Relativity.
            </summary>
            <remarks>The ID of an event handler is a reference ID to the admin event handler record. 
            During application install or upgrades this ID may change.</remarks>
        </member>
        <member name="P:Relativity.Services.Interfaces.EventHandler.Models.EventHandlerResponse.ArtifactID">
            <summary>
            Gets the artifact ID for the instance of the event handler attached to the object
            </summary>
            <remarks>The artifact ID of an event handler is a reference to the connection between
            an event handler and an object type.</remarks>
        </member>
        <member name="P:Relativity.Services.Interfaces.EventHandler.Models.EventHandlerResponse.Execution">
            <summary>
            Gets the execution type of the event handler.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.EventHandler.Models.EventHandlerResponse.Application">
            <summary>
            Gets the application which the assembly containing the
            event handler is associated with.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.EventHandler.Models.EventHandlerResponse.AssemblyName">
            <summary>
            Gets the name of the assemly the event handler is found.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.EventHandler.Models.EventHandlerResponse.ClassName">
            <summary>
            Gets the name of the class that defines the event handler.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.EventHandler.Models.EventHandlerResponse.CompanyName">
            <summary>
            Gets the company name of the event handler's development company.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.EventHandler.Models.EventHandlerResponse.Description">
            <summary>
            Gets the description of the event handler and its execution.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Field.FieldConstants">
            <summary>
            Provides routing information about URLs used by the Field Manager service.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.FieldConstants.MODULE_PREFIX">
            <summary>
            The prefix used for module called during service requests.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.FieldConstants.BASE_SERVICE_ROUTE">
            <summary>
            The base URI path for the service.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.ReadAsync(System.Int32,System.Int32)">
            <summary>
            Retrieves basic metadata for a field, including its name, associated object type, behavior, and other properties.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the object type should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the field.</param>
            <returns>An object containing data about the requested field.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.ReadAsync(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves extended metadata for a field, including information about additional actions available.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the object type should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the field.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended field metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user of this field.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.DeleteAsync(System.Int32,System.Int32)">
            <summary>
            Deletes a field.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the object type should be deleted. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the field.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.CreateDateFieldAsync(System.Int32,Relativity.Services.Interfaces.Field.Models.DateFieldRequest)">
            <summary>
            Adds a Date field to Relativity.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Date field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldRequest">The data about the Date field being created.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.UpdateDateFieldAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Field.Models.DateFieldRequest)">
            <summary>
            Modifies the properties of a Date field.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Date field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the Date field.</param>
            <param name="fieldRequest">The data about the Date field being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.UpdateDateFieldAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Field.Models.DateFieldRequest,System.DateTime)">
            <summary>
            Restricts updates to the properties of the Date field to the date that it was last modified.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Date field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the Date field.</param>
            <param name="fieldRequest">The data about the Date field being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the Date field.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.CreateFixedLengthFieldAsync(System.Int32,Relativity.Services.Interfaces.Field.Models.FixedLengthFieldRequest)">
            <summary>
            Adds a Fixed Length field to Relativity.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Fixed Length field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldRequest">The data about the Fixed Length field being created.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.UpdateFixedLengthFieldAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Field.Models.FixedLengthFieldRequest)">
            <summary>
            Modifies the properties of a Fixed Length field.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Fixed Length field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the Fixed Length field.</param>
            <param name="fieldRequest">The data about the Fixed Length field being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.UpdateFixedLengthFieldAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Field.Models.FixedLengthFieldRequest,System.DateTime)">
            <summary>
            Restricts updates to the properties of the Fixed Length field to the date that it was last modified.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Fixed Length field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the Fixed Length field.</param>
            <param name="fieldRequest">The data about the Fixed Length field being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the Fixed Length field.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.CreateUserFieldAsync(System.Int32,Relativity.Services.Interfaces.Field.Models.UserFieldRequest)">
            <summary>
            Adds a User field to Relativity.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the User field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldRequest">The data about the User field being created.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.UpdateUserFieldAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Field.Models.UserFieldRequest)">
            <summary>
            Modifies the properties of a User field.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the User field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the User field.</param>
            <param name="fieldRequest">The data about the User field being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.UpdateUserFieldAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Field.Models.UserFieldRequest,System.DateTime)">
            <summary>
            Restricts updates to the properties of the User field to the date that it was last modified.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the User field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the User field.</param>
            <param name="fieldRequest">The data about the User field being updated.</param>
            <param name="lastModifiedOn">The date and time User for comparison with the last modified date assigned to the User field.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.CreateYesNoFieldAsync(System.Int32,Relativity.Services.Interfaces.Field.Models.YesNoFieldRequest)">
            <summary>
            Adds a Yes/No field to Relativity.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Yes/No field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldRequest">The data about the Yes/No field being created.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.UpdateYesNoFieldAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Field.Models.YesNoFieldRequest)">
            <summary>
            Modifies the properties of a Yes/No field.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Yes/No field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the Yes/No field.</param>
            <param name="fieldRequest">The data about the Yes/No field being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.UpdateYesNoFieldAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Field.Models.YesNoFieldRequest,System.DateTime)">
            <summary>
            Restricts updates to the properties of the Yes/No field to the date that it was last modified.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Yes/No field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the Yes/No field.</param>
            <param name="fieldRequest">The data about the Yes/No field being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the Yes/No field.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.CreateLongTextFieldAsync(System.Int32,Relativity.Services.Interfaces.Field.Models.LongTextFieldRequest)">
            <summary>
            Adds a Long Text field to Relativity.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Long Text field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldRequest">The data about the Long Text field being created.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.UpdateLongTextFieldAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Field.Models.LongTextFieldRequest)">
            <summary>
            Modifies the properties of a Long Text field.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Long Text field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the Long Text field.</param>
            <param name="fieldRequest">The data about the Long Text field being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.UpdateLongTextFieldAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Field.Models.LongTextFieldRequest,System.DateTime)">
            <summary>
            Restricts updates to the properties of the Long Text field to the date that it was last modified.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Long Text field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the Long Text field.</param>
            <param name="fieldRequest">The data about the Long Text field being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the Long Text field.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.CreateFileFieldAsync(System.Int32,Relativity.Services.Interfaces.Field.Models.FileFieldRequest)">
            <summary>
            Adds a File field to Relativity.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the File field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldRequest">The data about the File field being created.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.UpdateFileFieldAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Field.Models.FileFieldRequest)">
            <summary>
            Modifies the properties of a File field.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the File field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the File field.</param>
            <param name="fieldRequest">The data about the File field being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.UpdateFileFieldAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Field.Models.FileFieldRequest,System.DateTime)">
            <summary>
            Restricts updates to the properties of the File field to the date that it was last modified.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the File field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the File field.</param>
            <param name="fieldRequest">The data about the File field being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the File field.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.CreateWholeNumberFieldAsync(System.Int32,Relativity.Services.Interfaces.Field.Models.WholeNumberFieldRequest)">
            <summary>
            Adds a Whole Number field to Relativity.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Whole Number field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldRequest">The data about the Whole Number field being created.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.UpdateWholeNumberFieldAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Field.Models.WholeNumberFieldRequest)">
            <summary>
            Modifies the properties of a Whole Number field.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Whole Number field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the Whole Number field.</param>
            <param name="fieldRequest">The data about the Whole Number field being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.UpdateWholeNumberFieldAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Field.Models.WholeNumberFieldRequest,System.DateTime)">
            <summary>
            Restricts updates to the properties of the Whole Number field to the date that it was last modified.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Whole Number field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the Whole Number field.</param>
            <param name="fieldRequest">The data about the Whole Number field being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the Whole Number field.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.CreateDecimalFieldAsync(System.Int32,Relativity.Services.Interfaces.Field.Models.DecimalFieldRequest)">
            <summary>
            Adds a Decimal field to Relativity.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Decimal field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldRequest">The data about the Decimal field being created.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.UpdateDecimalFieldAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Field.Models.DecimalFieldRequest)">
            <summary>
            Modifies the properties of a Decimal field.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Decimal field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the Decimal field.</param>
            <param name="fieldRequest">The data about the Decimal field being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.UpdateDecimalFieldAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Field.Models.DecimalFieldRequest,System.DateTime)">
            <summary>
            Restricts updates to the properties of the Decimal field to the date that it was last modified.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Decimal field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the Decimal field.</param>
            <param name="fieldRequest">The data about the Decimal field being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the Decimal field.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.CreateCurrencyFieldAsync(System.Int32,Relativity.Services.Interfaces.Field.Models.CurrencyFieldRequest)">
            <summary>
            Adds a Currency field to Relativity.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Currency field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldRequest">The data about the Currency field being created.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.UpdateCurrencyFieldAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Field.Models.CurrencyFieldRequest)">
            <summary>
            Modifies the properties of a Currency field.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Currency field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the Currency field.</param>
            <param name="fieldRequest">The data about the Currency field being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.UpdateCurrencyFieldAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Field.Models.CurrencyFieldRequest,System.DateTime)">
            <summary>
            Restricts updates to the properties of the Currency field to the date that it was last modified.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Currency field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the Currency field.</param>
            <param name="fieldRequest">The data about the Currency field being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the Currency field.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.CreateSingleChoiceFieldAsync(System.Int32,Relativity.Services.Interfaces.Field.Models.SingleChoiceFieldRequest)">
            <summary>
            Adds a Single Choice field to Relativity.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Single Choice field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldRequest">The data about the Single Choice field being created.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.UpdateSingleChoiceFieldAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Field.Models.SingleChoiceFieldRequest)">
            <summary>
            Modifies the properties of a Single Choice field.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Single Choice field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the Single Choice field.</param>
            <param name="fieldRequest">The data about the Single Choice field being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.UpdateSingleChoiceFieldAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Field.Models.SingleChoiceFieldRequest,System.DateTime)">
            <summary>
            Restricts updates to the properties of the Single Choice field to the date that it was last modified.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Single Choice field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the Single Choice field.</param>
            <param name="fieldRequest">The data about the Single Choice field being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the Single Choice field.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.CreateMultipleChoiceFieldAsync(System.Int32,Relativity.Services.Interfaces.Field.Models.MultipleChoiceFieldRequest)">
            <summary>
            Adds a Multiple Choice field to Relativity.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Multiple Choice field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldRequest">The data about the Multiple Choice field being created.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.UpdateMultipleChoiceFieldAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Field.Models.MultipleChoiceFieldRequest)">
            <summary>
            Modifies the properties of a Multiple Choice field.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Multiple Choice field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the Multiple Choice field.</param>
            <param name="fieldRequest">The data about the Multiple Choice field being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.UpdateMultipleChoiceFieldAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Field.Models.MultipleChoiceFieldRequest,System.DateTime)">
            <summary>
            Restricts updates to the properties of the Multiple Choice field to the date that it was last modified.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Multiple Choice field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the Multiple Choice field.</param>
            <param name="fieldRequest">The data about the Multiple Choice field being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the Multiple Choice field.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.CreateSingleObjectFieldAsync(System.Int32,Relativity.Services.Interfaces.Field.Models.SingleObjectFieldRequest)">
            <summary>
            Adds a Single Object field to Relativity.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Single Object field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldRequest">The data about the Single Object field being created.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.UpdateSingleObjectFieldAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Field.Models.SingleObjectFieldRequest)">
            <summary>
            Modifies the properties of a Single Object field.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Single Object field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the Single Object field.</param>
            <param name="fieldRequest">The data about the Single Object field being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.UpdateSingleObjectFieldAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Field.Models.SingleObjectFieldRequest,System.DateTime)">
            <summary>
            Restricts updates to the properties of the Single Object field to the date that it was last modified.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Single Object field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the Single Object field.</param>
            <param name="fieldRequest">The data about the Single Object field being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the Single Object field.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.CreateMultipleObjectFieldAsync(System.Int32,Relativity.Services.Interfaces.Field.Models.MultipleObjectFieldRequest)">
            <summary>
            Adds a Multiple Object field to Relativity.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Multiple Object field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldRequest">The data about the Multiple Object field being created.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.UpdateMultipleObjectFieldAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Field.Models.MultipleObjectFieldRequest)">
            <summary>
            Modifies the properties of a Multiple Object field.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Multiple Object field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the Multiple Object field.</param>
            <param name="fieldRequest">The data about the Multiple Object field being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.UpdateMultipleObjectFieldAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Field.Models.MultipleObjectFieldRequest,System.DateTime)">
            <summary>
            Restricts updates to the properties of the Multiple Object field to the date that it was last modified.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Multiple Object field should be created. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the Multiple Object field.</param>
            <param name="fieldRequest">The data about the Multiple Object field being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the Multiple Object field.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.GetAvailableObjectTypesAsync(System.Int32)">
            <summary>
            Gets a list of parent object types for field creation.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace to view all the available parent object types. Use -1 to indicate the admin workspace.</param>
            <returns>All parent object types available for field creation.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.GetAvailableSingleAssociativeObjectTypesAsync(System.Int32,Relativity.Services.Interfaces.Shared.Models.ObjectTypeIdentifier)">
            <summary>
            Gets a list of object types available for single association.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace to view all the available associative object types. Use -1 to indicate the admin workspace.</param>
            <param name="objectType">The identifier for the Object Type the single object field will be created on.</param>
            <returns>All object types available for single association.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.GetAvailableMultiAssociativeObjectTypesAsync(System.Int32,Relativity.Services.Interfaces.Shared.Models.ObjectTypeIdentifier)">
            <summary>
            Gets a list of object types available for multi association.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace to view all the available associative object types. Use -1 to indicate the admin workspace.</param>
            <param name="objectType">The identifier for the Object Type the multi object field will be created on.</param>
            <returns>All object types available for multiple association.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.GetAvailablePropagateToFieldsAsync(System.Int32)">
            <summary>
            Gets a list of fields available for propagation.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace to view all the available propagation fields. Use -1 to indicate the admin workspace.</param>
            <returns>All fields available for propagation.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.GetValidKeys(System.Int32)">
            <summary>
            Gets a list of possible keys for keyboard shortcuts.
            </summary>
            <returns>A list of valid strings for the key property in requests</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.GetAvailableObjectTypeViewsAsync(System.Int32,Relativity.Services.Interfaces.Shared.Models.ObjectTypeIdentifier)">
            <summary>
            Gets a list of object types available for an object type view.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace to view all the available object type views.</param>
            <param name="objectType">The identifier for the Object Type to get the views.</param>
            <returns>All available object type views for an Object Type.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.GetAvailableKeyboardShortcutsAsync(System.Int32)">
            <summary>
            Gets a list of keyboard shortcuts currently available.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace to view all the available keyboard shortcuts.</param>
            <returns>All keyboard shortcuts available for a document field type.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Field.IFieldManager.GetRelationalOrderAsync(System.Int32)">
            <summary>
            Gets the Order of Relational Fields currently available.
            </summary>
            <param name="workspaceID">The ArtifactID of the Workspace to get the Order of Relational Fields.</param>
            <returns>The Order of Relational Fields currently available.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.Field.IFieldModule">
            <summary>
            Field interface
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Field.Models.BaseFieldRequest">
            <summary>
            Base field request with properties across all field types.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.BaseFieldRequest.Name">
            <summary>
            Gets or sets the name for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.BaseFieldRequest.ObjectType">
            <summary>
            Gets or sets the identifier for the object type the field is associated with.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.BaseFieldRequest.Source">
            <summary>
            Gets or sets which processing field is mapped to the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.BaseFieldRequest.IsRequired">
            <summary>
            Gets or sets if the field is required.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.BaseFieldRequest.PropagateTo">
            <summary>
            Gets or sets whether coding values should be propagated to the specified fields.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.BaseFieldRequest.IsLinked">
            <summary>
            Gets or sets whether the field appears as a hyperlink within a list view.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.BaseFieldRequest.FilterType">
            <summary>
            Gets or sets the type of filter available for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.BaseFieldRequest.Width">
            <summary>
            Gets or sets the width (in pixels) of the column in the view.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.BaseFieldRequest.AllowGroupBy">
            <summary>
            Gets or sets if the field is available to the group by when using Pivot.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.BaseFieldRequest.AllowPivot">
            <summary>
            Gets or sets if the field is available to pivot on.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.BaseFieldRequest.AllowSortTally">
            <summary>
            Gets or sets sorting document lists based on the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.BaseFieldRequest.RelativityApplications">
            <summary>
            Gets or sets a list of identifiers of associated Relativity Applications for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.BaseFieldRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.BaseFieldRequest.Notes">
            <summary>
            Gets or sets an optional description or other information about the field.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Field.Models.CurrencyFieldRequest">
            <summary>
            Represents a DTO used as a request for creating or updating a Currency field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.CurrencyFieldRequest.CTRL">
            <summary>
            Gets or Sets whether the ctrl key is used in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.CurrencyFieldRequest.ALT">
            <summary>
            Gets or Sets whether the ctrl key is used in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.CurrencyFieldRequest.SHIFT">
            <summary>
            Gets or Sets whether the ctrl key is used in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.CurrencyFieldRequest.Key">
            <summary>
            The key used along with SHIFT, ALT, and/or CTRL keys in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.CurrencyFieldRequest.OpenToAssociations">
            <summary>
            Gets or sets whether an object field can display its information on an associated object field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.CurrencyFieldRequest.Wrapping">
            <summary>
            Gets or sets text wrapping for the field.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Field.Models.DateFieldRequest">
            <summary>
            Represents a DTO used as a request for creating or updating a Date field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.DateFieldRequest.CTRL">
            <summary>
            Gets or Sets whether the ctrl key is used in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.DateFieldRequest.ALT">
            <summary>
            Gets or Sets whether the ctrl key is used in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.DateFieldRequest.SHIFT">
            <summary>
            Gets or Sets whether the ctrl key is used in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.DateFieldRequest.Key">
            <summary>
            The key used along with SHIFT, ALT, and/or CTRL keys in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.DateFieldRequest.Formatting">
            <summary>
            Gets or sets how the field value will be formatted when displayed.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.DateFieldRequest.OpenToAssociations">
            <summary>
            Gets or sets whether an object field can display its information on an associated object field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.DateFieldRequest.Wrapping">
            <summary>
            Gets or sets text wrapping for the field.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Field.Models.DecimalFieldRequest">
            <summary>
            Represents a DTO used as a request for creating or updating a Decimal field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.DecimalFieldRequest.CTRL">
            <summary>
            Gets or Sets whether the ctrl key is used in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.DecimalFieldRequest.ALT">
            <summary>
            Gets or Sets whether the ctrl key is used in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.DecimalFieldRequest.SHIFT">
            <summary>
            Gets or Sets whether the ctrl key is used in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.DecimalFieldRequest.Key">
            <summary>
            The key used along with SHIFT, ALT, and/or CTRL keys in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.DecimalFieldRequest.Formatting">
            <summary>
            Gets or sets how the field value will be formatted when displayed.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.DecimalFieldRequest.OpenToAssociations">
            <summary>
            Gets or sets whether an object field can display its information on an associated object field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.DecimalFieldRequest.Wrapping">
            <summary>
            Gets or sets text wrapping for the field.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Field.Models.FieldResponse">
            <summary>
            Represents the results of a read operation on a field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.ObjectType">
            <summary>
            Gets the identifier for the object type associated with the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.Source">
            <summary>
            Gets or sets which processing field is mapped to the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.FieldType">
            <summary>
            Gets the type of the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.AssociativeObjectType">
            <summary>
            Gets the associated object to this field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.Length">
            <summary>
            Gets the max length of the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.IsRequired">
            <summary>
            Gets whether the field is required.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.IncludeInTextIndex">
            <summary>
            Gets whether the field values are added to the workspaceâ€™s SQL text index, making the field searchable via keyword search.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.HasUnicode">
            <summary>
            Gets or sets if the field has unicode.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.IsIdentifier">
            <summary>
            Gets whether the field is the workspaceâ€™s unique identifier.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.AvailableInViewer">
            <summary>
            Gets whether the field is displayed in the viewer.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.AvailableInFieldTree">
            <summary>
            Gets or sets whether to place the field and its choices in the Field Tree Browser.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.FieldTreeView">
            <summary>
            Gets or sets a view for Field Tree View.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.AllowHtml">
            <summary>
            Gets whether HTML code is allowed to execute within the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.Formatting">
            <summary>
            Gets or sets how the field value will be formatted when displayed.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.OpenToAssociations">
            <summary>
            Gets whether an object field can display its information on an associated object field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.OverlayBehavior">
            <summary>
            Gets or sets the field overlay behavior.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.EnableDataGrid">
            <summary>
            Gets if all data in this field should be imported to Data Grid.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.PropagateTo">
            <summary>
            Gets the specified fields that coding values should be propagated to.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.IsLinked">
            <summary>
            Gets whether the field appears as a hyperlink within a list view.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.FilterType">
            <summary>
            Gets or sets the type of filter available for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.PopupPickerView">
            <summary>
            Gets or sets the items available in the pop-up picker view.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.AllowSortTally">
            <summary>
            Gets or sets sorting document lists based on the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.Width">
            <summary>
            Gets or sets the width (in pixels) of the column in the view.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.Wrapping">
            <summary>
            Gets or sets text wrapping for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.AllowGroupBy">
            <summary>
            Gets or sets if the field is available to the group by when using Pivot.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.AllowPivot">
            <summary>
            Gets or sets if the field is available to pivot on.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.DisplayValueTrue">
            <summary>
            Gets the display text for the True value of the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.DisplayValueFalse">
            <summary>
            Gets the display text for the False value of the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.IsRelational">
            <summary>
            Gets or sets whether the field is relational.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.FriendlyName">
            <summary>
            Gets or sets a label for the relational field that users can easily understand.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.ImportBehavior">
            <summary>
            Gets or sets how blank values are handled when importing through the Relativity Desktop Client.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.PaneIcon">
            <summary>
            Gets or sets an icon for display in the Related Items pane of the core reviewer interface.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.Order">
            <summary>
            Gets or sets the pane icon order on the bottom of the Related Items pane.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.RelationalView">
            <summary>
            Gets or sets the view that appears in the Related Items pane.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.CTRL">
            <summary>
            Gets or Sets whether the ctrl key is used in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.ALT">
            <summary>
            Gets or Sets whether the ctrl key is used in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.SHIFT">
            <summary>
            Gets or Sets whether the ctrl key is used in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.Key">
            <summary>
            The key used along with SHIFT, ALT, and/or CTRL keys in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.RelativityApplications">
            <summary>
            Gets or sets a list of identifiers of associated Relativity Applications for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.AutoAddChoices">
            <summary>
            Gets whether the field should add all choices associated with the single or multiple choice field to an application. Returns false if the field is not a choice field type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.CreatedOn">
            <summary>
            Gets the date and time when the field was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.CreatedBy">
            <summary>
            Gets the Artifact ID and name of the user who created the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.LastModifiedBy">
            <summary>
            Gets the Artifact ID and name of the user who recently updated the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.LastModifiedOn">
            <summary>
            Gets the date and time when the field was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.Keywords">
            <summary>
            Gets optional words or phrase used to describe the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.Notes">
            <summary>
            Gets optional words or phrase used to describe the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.Meta">
            <summary>
            Gets a list of unsupported and read-only properties on the current field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldResponse.Actions">
            <summary>
            Gets a list of RESTful operations that a user has permissions to perform on the field.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Field.Models.FieldSource">
            <summary>
            Represents mapping to a processing field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldSource.SourceName">
            <summary>
            Identifier of the source field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FieldSource.FriendlyName">
            <summary>
            Friendly name of the source field.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Field.Models.FieldType">
            <summary>
            Enum for all the different field types.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.Models.FieldType.User">
            <summary>
            Indicates the User field type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.Models.FieldType.FixedLength">
            <summary>
            Indicates the Fixed Length field type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.Models.FieldType.LongText">
            <summary>
            Indicates the Long Text field type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.Models.FieldType.YesNo">
            <summary>
            Indicates the Yes/No field type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.Models.FieldType.Date">
            <summary>
            Indicates the Date field type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.Models.FieldType.File">
            <summary>
            Indicates the File field type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.Models.FieldType.WholeNumber">
            <summary>
            Indicates the Whole Number field type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.Models.FieldType.Decimal">
            <summary>
            Indicates the Decimal field type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.Models.FieldType.Currency">
            <summary>
            Indicates the Currency field type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.Models.FieldType.SingleChoice">
            <summary>
            Indicates the Single Choice field type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.Models.FieldType.MultipleChoice">
            <summary>
            Indicates the Multiple Choice field type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.Models.FieldType.SingleObject">
            <summary>
            Indicates the Single Object field type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.Models.FieldType.MultipleObject">
            <summary>
            Indicates the Multiple Object field type.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Field.Models.FileFieldRequest">
            <summary>
            Represents a DTO used as a request for creating or updating a File field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FileFieldRequest.Wrapping">
            <summary>
            Gets or sets text wrapping for the field.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Field.Models.FilterType">
            <summary>
            Denotes types of filters for list properties.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.Models.FilterType.None">
            <summary>
            No filter
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.Models.FilterType.List">
            <summary>
            List filter
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.Models.FilterType.TextBox">
            <summary>
            Text box filter
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.Models.FilterType.MultiList">
            <summary>
            Multi list filter
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.Models.FilterType.Boolean">
            <summary>
            True/false filter
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.Models.FilterType.CustomOnly">
            <summary>
            Custom filter
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.Models.FilterType.Popup">
            <summary>
            Popup picker filter
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.Models.FilterType.DatePicker">
            <summary>
            Date picker filter
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Field.Models.FixedLengthFieldRequest">
            <summary>
            Represents a DTO used as a request for creating or updating a Fixed Length field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FixedLengthFieldRequest.Length">
            <summary>
            Gets or sets the maximum length for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FixedLengthFieldRequest.IncludeInTextIndex">
            <summary>
            Gets or sets whether the field values are added to the workspaceâ€™s SQL text index, making the field searchable via keyword search.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FixedLengthFieldRequest.HasUnicode">
            <summary>
            Gets or sets if the field has unicode.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FixedLengthFieldRequest.AllowHtml">
            <summary>
            Gets or sets whether HTML code is allowed to execute within the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FixedLengthFieldRequest.OpenToAssociations">
            <summary>
            Gets or sets whether an object field can display its information on an associated object field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FixedLengthFieldRequest.IsRelational">
            <summary>
            Gets or sets whether the field is relational.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FixedLengthFieldRequest.FriendlyName">
            <summary>
            Gets or sets a label for the relational field that users can easily understand.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FixedLengthFieldRequest.ImportBehavior">
            <summary>
            Gets or sets how blank values are handled when importing through the Relativity Desktop Client.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FixedLengthFieldRequest.PaneIcon">
            <summary>
            Gets or sets an icon for display in the Related Items pane of the core reviewer interface.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FixedLengthFieldRequest.Order">
            <summary>
            Gets or sets the pane icon order on the bottom of the Related Items pane.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FixedLengthFieldRequest.RelationalView">
            <summary>
            Gets or sets the view that appears in the Related Items pane.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FixedLengthFieldRequest.CTRL">
            <summary>
            Gets or Sets whether the ctrl key is used in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FixedLengthFieldRequest.ALT">
            <summary>
            Gets or Sets whether the ctrl key is used in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FixedLengthFieldRequest.SHIFT">
            <summary>
            Gets or Sets whether the ctrl key is used in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FixedLengthFieldRequest.Key">
            <summary>
            The key used along with SHIFT, ALT, and/or CTRL keys in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.FixedLengthFieldRequest.Wrapping">
            <summary>
            Gets or sets text wrapping for the field.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Field.Models.Formatting">
            <summary>
            Enum to represent the display of a field.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.Models.Formatting.None">
            <summary>
            No formatting
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.Models.Formatting.Formatted">
            <summary>
            Denotes if a number is formatted with commas (whole number and decimal only).
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.Models.Formatting.Date">
            <summary>
            Formatted as a date
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.Models.Formatting.DateTime">
            <summary>
            Formatted as a date with time
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.Models.Formatting.Currency">
            <summary>
            Formatted as currency
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Field.Models.KeyboardShortcut">
            <summary>
            Represents information about a keyboard shortcut.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.KeyboardShortcut.Shortcut">
            <summary>
            Gets or sets the key combination used to execute the shortcut during document review.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.KeyboardShortcut.Action">
            <summary>
            Gets or sets the action that results from using the keyboard shortcut.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.KeyboardShortcut.ViewerMode">
            <summary>
            Gets or sets the viewer mode for which each shortcut is available. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.KeyboardShortcut.Category">
            <summary>
            Gets or sets the shortcut type.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Field.Models.LongTextFieldRequest">
            <summary>
            Represents a DTO used as a request for creating or updating a Long Text field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.LongTextFieldRequest.IncludeInTextIndex">
            <summary>
            Gets or sets whether the field values are added to the workspaceâ€™s SQL text index, making the field searchable via keyword search.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.LongTextFieldRequest.HasUnicode">
            <summary>
            Gets or sets if the field has unicode.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.LongTextFieldRequest.AvailableInViewer">
            <summary>
            Gets or sets whether the field is displayed in the viewer.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.LongTextFieldRequest.AllowHtml">
            <summary>
            Gets or sets whether HTML code is allowed to execute within the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.LongTextFieldRequest.CTRL">
            <summary>
            Gets or Sets whether the ctrl key is used in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.LongTextFieldRequest.ALT">
            <summary>
            Gets or Sets whether the ctrl key is used in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.LongTextFieldRequest.SHIFT">
            <summary>
            Gets or Sets whether the ctrl key is used in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.LongTextFieldRequest.Key">
            <summary>
            The key used along with SHIFT, ALT, and/or CTRL keys in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.LongTextFieldRequest.OpenToAssociations">
            <summary>
            Gets or sets whether an object field can display its information on an associated object field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.LongTextFieldRequest.EnableDataGrid">
            <summary>
            Gets or sets if all data in this field should be imported to Data Grid.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.LongTextFieldRequest.Wrapping">
            <summary>
            Gets or sets text wrapping for the field.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Field.Models.MultipleChoiceFieldRequest">
            <summary>
            Represents a DTO used as a request for creating or updating a Multiple Choice field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.MultipleChoiceFieldRequest.HasUnicode">
            <summary>
            Gets or sets if the field has unicode.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.MultipleChoiceFieldRequest.AvailableInFieldTree">
            <summary>
            Gets or sets whether to place the field and its choices in the Field Tree Browser.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.MultipleChoiceFieldRequest.OpenToAssociations">
            <summary>
            Gets or sets whether an object field can display its information on an associated object field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.MultipleChoiceFieldRequest.OverlayBehavior">
            <summary>
            Gets or sets the field overlay behavior.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.MultipleChoiceFieldRequest.AutoAddChoices">
            <summary>
            Gets or sets if the field should add all choices associated with the multiple choice field to an application.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.MultipleChoiceFieldRequest.Wrapping">
            <summary>
            Gets or sets text wrapping for the field.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Field.Models.MultipleObjectFieldRequest">
            <summary>
            Represents a DTO used as a request for creating or updating a Multiple Object field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.MultipleObjectFieldRequest.AssociativeObjectType">
            <summary>
            Gets or sets the associated object to this field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.MultipleObjectFieldRequest.AvailableInFieldTree">
            <summary>
            Gets or sets whether to place the field and its choices in the Field Tree Browser.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.MultipleObjectFieldRequest.FieldTreeView">
            <summary>
            Gets or sets a view for Field Tree View.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.MultipleObjectFieldRequest.OverlayBehavior">
            <summary>
            Gets or sets the field overlay behavior.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.MultipleObjectFieldRequest.PopupPickerView">
            <summary>
            Gets or sets the items available in the pop-up picker view.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Field.Models.OverlayBehavior">
            <summary>
            Defines how Relativity handles multiple choice or multiple object fields when importing a load file.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.Models.OverlayBehavior.ReplaceValues">
            <summary>
            Replace Values removes previous values and replaces them with the values in the load file.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Field.Models.OverlayBehavior.MergeValues">
            <summary>
            Merge Values merges previous values with load file values.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Field.Models.PaneIcon">
            <summary>
            Select and upload an icon for display in the Related Items pane of the core reviewer interface.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.PaneIcon.FileName">
            <summary>
            The image file name.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.PaneIcon.ImageBase64">
            <summary>
            The image file converted to a base64 format.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Field.Models.RelationalFieldOrder">
            <summary>
            Represents the Order of Relational Fields.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.RelationalFieldOrder.Name">
            <summary>
            Gets the Name of the Relational Field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.RelationalFieldOrder.Type">
            <summary>
            Gets the Type of Relational Field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.RelationalFieldOrder.Order">
            <summary>
            Gets the Order of the Relational Field.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Field.Models.SingleChoiceFieldRequest">
            <summary>
            Represents a DTO used as a request for creating or updating a Single Choice field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.SingleChoiceFieldRequest.HasUnicode">
            <summary>
            Gets or sets if the field has unicode.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.SingleChoiceFieldRequest.AvailableInFieldTree">
            <summary>
            Gets or sets whether to place the field and its choices in the Field Tree Browser.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.SingleChoiceFieldRequest.OpenToAssociations">
            <summary>
            Gets or sets whether an object field can display its information on an associated object field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.SingleChoiceFieldRequest.AutoAddChoices">
            <summary>
            Gets or sets if the field should add all choices associated with the single choice field to an application.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.SingleChoiceFieldRequest.Wrapping">
            <summary>
            Gets or sets text wrapping for the field.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Field.Models.SingleObjectFieldRequest">
            <summary>
            Represents a DTO used as a request for creating or updating a Single Object field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.SingleObjectFieldRequest.AssociativeObjectType">
            <summary>
            Gets or sets the associated object to this field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.SingleObjectFieldRequest.AvailableInFieldTree">
            <summary>
            Gets or sets whether to place the field and its choices in the Field Tree Browser.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.SingleObjectFieldRequest.FieldTreeView">
            <summary>
            Gets or sets a view for Field Tree View.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.SingleObjectFieldRequest.OpenToAssociations">
            <summary>
            Gets or sets whether an object field can display its information on an associated object field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.SingleObjectFieldRequest.PopupPickerView">
            <summary>
            Gets or sets the items available in the pop-up picker view.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.SingleObjectFieldRequest.Wrapping">
            <summary>
            Gets or sets text wrapping for the field.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Field.Models.UserFieldRequest">
            <summary>
            Represents a DTO used as a request for creating or updating a User field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.UserFieldRequest.CTRL">
            <summary>
            Gets or Sets whether the ctrl key is used in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.UserFieldRequest.ALT">
            <summary>
            Gets or Sets whether the ctrl key is used in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.UserFieldRequest.SHIFT">
            <summary>
            Gets or Sets whether the ctrl key is used in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.UserFieldRequest.Key">
            <summary>
            The key used along with SHIFT, ALT, and/or CTRL keys in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.UserFieldRequest.OpenToAssociations">
            <summary>
            Gets or sets whether an object field can display its information on an associated object field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.UserFieldRequest.Wrapping">
            <summary>
            Gets or sets text wrapping for the field.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Field.Models.WholeNumberFieldRequest">
            <summary>
            Represents a DTO used as a request for creating or updating a Whole Number field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.WholeNumberFieldRequest.CTRL">
            <summary>
            Gets or Sets whether the ctrl key is used in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.WholeNumberFieldRequest.ALT">
            <summary>
            Gets or Sets whether the ctrl key is used in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.WholeNumberFieldRequest.SHIFT">
            <summary>
            Gets or Sets whether the ctrl key is used in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.WholeNumberFieldRequest.Key">
            <summary>
            The key used along with SHIFT, ALT, and/or CTRL keys in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.WholeNumberFieldRequest.Formatting">
            <summary>
            Gets or sets how the field value will be formatted when displayed.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.WholeNumberFieldRequest.OpenToAssociations">
            <summary>
            Gets or sets whether an object field can display its information on an associated object field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.WholeNumberFieldRequest.Wrapping">
            <summary>
            Gets or sets text wrapping for the field.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Field.Models.YesNoFieldRequest">
            <summary>
            Represents a DTO used as a request for creating or updating a Yes/No field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.YesNoFieldRequest.OpenToAssociations">
            <summary>
            Gets or sets whether an object field can display its information on an associated object field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.YesNoFieldRequest.Wrapping">
            <summary>
            Gets or sets text wrapping for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.YesNoFieldRequest.DisplayValueTrue">
            <summary>
            Gets or sets the display text for the True value of the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.YesNoFieldRequest.DisplayValueFalse">
            <summary>
            Gets or sets the display text for the False value of the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.YesNoFieldRequest.CTRL">
            <summary>
            Gets or Sets whether the ctrl key is used in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.YesNoFieldRequest.ALT">
            <summary>
            Gets or Sets whether the ctrl key is used in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.YesNoFieldRequest.SHIFT">
            <summary>
            Gets or Sets whether the ctrl key is used in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Field.Models.YesNoFieldRequest.Key">
            <summary>
            The key used along with SHIFT, ALT, and/or CTRL keys in the keyboard shortcut for the field.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.File.FileConstants.MODULE_PREFIX">
            <summary>
            The File module name from the url path for File Kepler services
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.File.FileConstants.SERVICE_ROUTE">
            <summary>
            The File route name from the url path for File Kepler services
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.CreateAsync(Relativity.Services.Interfaces.Group.Models.GroupRequest)">
            <summary>
            Adds a user group to Relativity.
            </summary>
            <param name="groupRequest">A request object containing the data used to create the user group.</param>
            <returns>An object containing data about the new user group.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.ReadAsync(System.Int32)">
            <summary>
            Retrieves metadata for a user group, including its name, associated client, and other properties.
            </summary>
            <param name="groupID">The Artifact ID of the user group.</param>
            <returns>An object containing data about the requested user group.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.ReadAsync(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves advanced metadata for a user group, including its name, associated client, and other properties.
            </summary>
            <param name="groupID">The Artifact ID of the user group.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended group metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the user for this user group.</param>
            <returns>An object containing data about the requested user group.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.Group.Models.GroupRequest)">
            <summary>
            Modifies the properties of a user group.
            </summary>
            <param name="groupID">The Artifact ID of the user group.</param>
            <param name="groupRequest">The data about the user group being updated.</param>
            <returns>An object containing data about the updated user group.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.Group.Models.GroupRequest,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Modifies the properties of a user group and returns progress information.
            </summary>
            <param name="groupID">The Artifact ID of the user group.</param>
            <param name="groupRequest">The data about the user group being updated.</param>
            <param name="progress">A callback that reports the progress of the operation.</param>
            <returns>An object containing data about the updated user group.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.Group.Models.GroupRequest,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Modifies the properties of a user group, provides a token used for canceling the operation, and returns progress information.
            </summary>
            <param name="groupID">The Artifact ID of the user group.</param>
            <param name="groupRequest">The data about the user group being updated.</param>
            <param name="cancel">A request to cancel the execution of a file streaming.</param>
            <param name="progress">A callback that reports the progress of the operation.</param>
            <returns>An object containing data about the updated user group.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.Group.Models.GroupRequest,System.DateTime)">
            <summary>
            Modifies the properties of a user group.
            </summary>
            <param name="groupID">The Artifact ID of the user group.</param>
            <param name="groupRequest">The data about the user group being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the user.</param>
            <returns>An object containing data about the updated user group.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.Group.Models.GroupRequest,System.DateTime,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Modifies the properties of a user group and returns progress information.
            </summary>
            <param name="groupID">The Artifact ID of the user group.</param>
            <param name="groupRequest">The data about the user group being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the user.</param>
            <param name="progress">A callback that reports the progress of the operation.</param>
            <returns>An object containing data about the updated user group.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.Group.Models.GroupRequest,System.DateTime,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Modifies the properties of a user group, provides a token used for canceling the operation, and returns progress information.
            </summary>
            <param name="groupID">The Artifact ID of the user group.</param>
            <param name="groupRequest">The data about the user group being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the user.</param>
            <param name="cancel">A request to cancel the execution of a file streaming.</param>
            <param name="progress">A callback that reports the progress of the operation.</param>
            <returns>An object containing data about the updated user group.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.DeleteAsync(System.Int32)">
            <summary>
            Deletes a user group.
            </summary>
            <param name="groupID">The Artifact ID of the user group to delete.</param> 
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.DeleteAsync(System.Int32,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Deletes a user group and returns progress information.
            </summary>
            <param name="groupID">The Artifact ID of the user group to delete.</param>
            <param name="progress">A callback that reports the progress of the operation.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.DeleteAsync(System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Deletes a user group, provides a token used for canceling the operation, and returns progress information.
            </summary>
            <param name="groupID">The Artifact ID of the user group to delete.</param>
            <param name="cancel">A request to cancel the execution of a file streaming.</param>
            <param name="progress">A callback that reports the progress of the operation.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.QueryMembersAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Int32)">
            <summary>
            Retrieves the list of users in a given group.
            </summary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="groupID">The Artifact ID of the user group.</param>
            <returns>Returns the results of the executed query  that contains visible users in the group.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.QueryMembersAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Int32,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Retrieves the list of users in a given group.
            </summary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="groupID">The Artifact ID of the user group.</param>		
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query  that contains visible users in the group.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.QueryMembersAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Retrieves the list of users in a given group.
            </summary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="groupID">The Artifact ID of the user group.</param>
            <param name="cancel">A request to cancel the execution of a query for an object. </param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query  that contains visible users in the group.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.AddMembersAsync(System.Int32,System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier})">
            <summary>
            Adds a list of users to a given group.
            </summary>
            <param name="groupID">The Artifact ID of the user group.</param>
            <param name="users">The list of identifiers for users to add to the group.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.AddMembersAsync(System.Int32,System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier},System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Adds a list of users to a given group and returns progress information.
            </summary>
            <param name="groupID">The Artifact ID of the user group.</param>
            <param name="users">The list of identifiers for users to add to the group.</param>
            <param name="progress">A callback that reports the progress of the operation.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.AddMembersAsync(System.Int32,System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier},System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Adds a list of users to a given group, provides a token used for canceling the operation, and returns progress information.
            </summary>
            <param name="groupID">The Artifact ID of the user group.</param>
            <param name="users">The list of identifiers for users to add to the group.</param>
            <param name="cancel">A request to cancel the execution of a file streaming.</param>
            <param name="progress">A callback that reports the progress of the operation.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.AddMembersAsync(System.Int32,Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier)">
            <summary>
            Adds a user to a given group.
            </summary>
            <param name="groupID">The Artifact ID of the user group.</param>
            <param name="user">The identifier of the user to add to the group.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.RemoveMembersAsync(System.Int32,System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier})">
            <summary>
            Removes a list of users from a given group.
            </summary>
            <param name="groupID">The Artifact ID of the user group.</param>
            <param name="users">The list of identifiers for users to remove from the group.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.RemoveMembersAsync(System.Int32,System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier},System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Removes a list of users from a given group and returns progress information.
            </summary>
            <param name="groupID">The Artifact ID of the user group.</param>
            <param name="users">The list of identifiers for users to remove from the group.</param>
            <param name="progress">A callback that reports the progress of the operation.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.RemoveMembersAsync(System.Int32,System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier},System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Removes a list of users from a given group, provides a token used for canceling the operation, and returns progress information.
            </summary>
            <param name="groupID">The Artifact ID of the user group.</param>
            <param name="users">The list of identifiers for users to remove from the group.</param>
            <param name="cancel">A request to cancel the execution of a file streaming.</param>
            <param name="progress">A callback that reports the progress of the operation.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.RemoveMembersAsync(System.Int32,Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier)">
            <summary>
            Removes a list of users from a given group.
            </summary>
            <param name="groupID">The Artifact ID of the user group.</param>
            <param name="user">The identifier of the user to remove from the group.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.QueryGroupsByUserAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Int32)">
            <sumary>
            Retrieves the list of groups where a given user is a member.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="userID">The Artifact ID of the user.</param>
            <returns>Returns the results of the executed query that contains visible groups where the user is a member.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.QueryGroupsByUserAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Int32,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <sumary>
            Retrieves the list of groups where a given user is a member.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="userID">The Artifact ID of the user.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query that contains visible groups where the user is a member.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.QueryGroupsByUserAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <sumary>
            Retrieves the list of groups where a given user is a member.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="userID">The Artifact ID of the user.</param>
            <param name="cancel">A request to cancel the execution of a query for an object. </param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query that contains visible groups where the user is a member.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.GetMassActionsAsync">
            <summary>
            Retrieves a list of actions that are allowed for the mass operations.
            </summary>
            <returns>A list of actions that are allowed for the mass operations.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.MassAddUsersToGroupsAsync(System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier},System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier})">
            <sumary>
            Adds a list of users to multiple groups.
            </sumary>
            <param name="users">The list of identifiers for users to add to the list of user groups.</param>
            <param name="groups">The list of identifiers for groups where users are being added.</param>
            <returns>Returns the results of a mass operation as a list of <see cref="T:Relativity.Services.Interfaces.Shared.Models.MassOperationResult"/>.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.MassAddUsersToGroupsAsync(System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier},System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier},System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <sumary>
            Adds a list of users to multiple groups and returns progress information.
            </sumary>
            <param name="users">The list of identifiers for users to add to the list of user groups.</param>
            <param name="groups">The list of identifiers for groups where users are being added.</param>
            <param name="progress">A callback that reports the progress of the operation.</param>
            <returns>Returns the results of a mass operation as a list of <see cref="T:Relativity.Services.Interfaces.Shared.Models.MassOperationResult"/>.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.MassAddUsersToGroupsAsync(System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier},System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier},System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <sumary>
            Adds a list of users to multiple groups, provides a token used for canceling the operation, and returns progress information.
            </sumary>
            <param name="users">The list of identifiers for users to add to the list of user groups.</param>
            <param name="groups">The list of identifiers for groups where users are being added.</param>
            <param name="cancel">A request to cancel the execution of a file streaming.</param>
            <param name="progress">A callback that reports the progress of the operation.</param>
            <returns>Returns the results of a mass operation as a list of <see cref="T:Relativity.Services.Interfaces.Shared.Models.MassOperationResult"/>.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.MassRemoveUsersFromGroupsAsync(System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier},System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier})">
            <sumary>
            Removes a list of users from multiple groups.
            </sumary>
            <param name="users">The list of identifiers for users to remove from the list of user group.</param>
            <param name="groups">The list of identifiers for groups where users are being removed.</param>
            <returns>Returns the results of a mass operation as a list of <see cref="T:Relativity.Services.Interfaces.Shared.Models.MassOperationResult"/>.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.MassRemoveUsersFromGroupsAsync(System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier},System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier},System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <sumary>
            Removes a list of users from multiple groups and returns progress information.
            </sumary>
            <param name="users">The list of identifiers for users to remove from the list of user group.</param>
            <param name="groups">The list of identifiers for groups where users are being removed.</param>
            <param name="progress">A callback that reports the progress of the operation.</param>
            <returns>Returns the results of a mass operation as a list of <see cref="T:Relativity.Services.Interfaces.Shared.Models.MassOperationResult"/>.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.MassRemoveUsersFromGroupsAsync(System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier},System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier},System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <sumary>
            Removes a list of users from multiple groups, provides a token used for canceling the operation and returns progress information.
            </sumary>
            <param name="users">The list of identifiers for users to remove from the list of user group.</param>
            <param name="groups">The list of identifiers for groups where users are being removed.</param>
            <param name="cancel">A request to cancel the execution of a file streaming.</param>
            <param name="progress">A callback that reports the progress of the operation.</param>
            <returns>Returns the results of a mass operation as a list of <see cref="T:Relativity.Services.Interfaces.Shared.Models.MassOperationResult"/>.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.QueryEligibleClients(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32)">
            <summary>
            Query for Clients that are valid for the client property on group
            </summary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.QueryEligibleClients(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Query for Clients that are valid for the client property on group
            </summary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.QueryEligibleClients(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Query for Clients that are valid for the client property on group
            </summary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="cancel">A request to cancel the execution of a query for an object. </param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.QueryEligibleUsersToAdd(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Int32)">
            <summary>
            Query for Users that are eligible to be members of a group.
            </summary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="groupID">The Artifact ID of the user group.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.QueryEligibleUsersToAdd(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Int32,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Query for Users that are eligible to be members of a group.
            </summary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="groupID">The Artifact ID of the user group.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.QueryEligibleUsersToAdd(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Query for Users that are eligible to be members of a group.
            </summary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="groupID">The Artifact ID of the user group.</param>
            <param name="cancel">A request to cancel the execution of a query for an object. </param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.QueryEligibleGroupsToAddUsersToAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Collections.Generic.ICollection{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier})">
            <summary>
            Query for Groups that are eligible for adding at least one of specified users.
            </summary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="users">A list of User identifiers.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.QueryEligibleGroupsToAddUsersToAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Collections.Generic.ICollection{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier},System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Query for Groups that are eligible for adding at least one of specified users.
            </summary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="users">A list of User identifiers.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.IGroupManager.QueryEligibleGroupsToAddUsersToAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Collections.Generic.ICollection{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier},System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Query for Groups that are eligible for adding at least one of specified users.
            </summary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="users">A list of User identifiers.</param>
            <param name="cancel">A request to cancel the execution of a query for an object. </param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.Group.IGroupModule">
            <summary>
            Group interface
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Group.Models.GroupRequest">
            <summary>
            Represents a request for creating or updating a user group.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Group.Models.GroupRequest.Client">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> identifier for the client associated with the user group
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Group.Models.GroupRequest.Name">
            <summary>
            Gets or sets the name for the user group.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Group.Models.GroupRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the user group.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Group.Models.GroupRequest.Notes">
            <summary>
            Gets or sets optional words or phrase used to describe the user group.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.Models.GroupRequest.#ctor(Relativity.Services.Interfaces.Group.Models.GroupResponse)">
            <summary>
            Initializes an instance of the GroupRequest class with a response object, which is useful for chaining commands. 
            </summary>
            /// <param name="groupResponse">Group response to convert to a request.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.Models.GroupRequest.#ctor">
            <summary>
            Initializes an instance of the GroupRequest class with all properties defaulted.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.Group.Models.GroupRequest.op_Implicit(Relativity.Services.Interfaces.Group.Models.GroupResponse)~Relativity.Services.Interfaces.Group.Models.GroupRequest">
            <summary>
            Allows a GroupResponse to be implicitly converted to a GroupRequest
            </summary>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.Group.Models.GroupResponse">
            <summary>
             Represents the results of a read operation on a group.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Group.Models.GroupResponse.Client">
            <summary>
            Gets or sets the <see cref= "T:Relativity.Services.Interfaces.Shared.Securable`1" /> identifier for the client associated with the group
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Group.Models.GroupResponse.GroupType">
            <summary>
            Gets the type of the user group.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Group.Models.GroupResponse.Keywords">
            <summary>
            Gets any keywords associated with the user group.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Group.Models.GroupResponse.Notes">
            <summary>
            Gets optional words or phrase used to describe the group.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Group.Models.GroupResponse.CreatedOn">
            <summary>
            Gets the date and time when the group was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Group.Models.GroupResponse.CreatedBy">
            <summary>
            Gets the Artifact ID and name of the user who created the group.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Group.Models.GroupResponse.LastModifiedBy">
            <summary>
            Gets the Artifact ID and name of the user who recently updated the group.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Group.Models.GroupResponse.LastModifiedOn">
            <summary>
            Gets the date and time when the group was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Group.Models.GroupResponse.Meta">
            <summary>
            Gets a list of unsupported and read-only properties on the current group.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Group.Models.GroupResponse.Actions">
            <summary>
            Gets a list of RESTful operations that a user has permissions to perform on the group.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Group.Models.GroupType">
            <summary>
            Enum for all the different user group types
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Group.Models.GroupType.SystemAdmin">
            <summary>
            Relativity system admins have rights to see every item in a Relativity environment. They also have additional permissions that are unique to the system admin group. 
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Group.Models.GroupType.SystemGroup">
            <summary>
            A regular user group that does not have system admin permissions.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Group.Models.GroupType.Everyone">
            <summary>
            A unique group that all users are members of.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.InstanceSetting.IInstanceSettingManager">
            <summary>
            Exposes the methods for working with Instance Setting objects.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.InstanceSetting.IInstanceSettingManager.CreateAsync(System.Int32,Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingRequest)">
            <summary>
            Create a instance setting.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the instance setting should be created. Use -1 to indicate the admin workspace.</param>
            <param name="instanceSetting">The data about the instance settting being created.</param>
            <returns>ArtifactID of the created IntanceSettign.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.InstanceSetting.IInstanceSettingManager.ReadAsync(System.Int32,System.Int32)">
            <summary>
            Reads a instance setting.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where instance setting exists. Use -1 to indicate the admin workspace.</param>
            <param name="instanceSettingID">ArtifactID of the instance setting to read.</param>
            <returns>An object containing data about the requested instance setting.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.InstanceSetting.IInstanceSettingManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingRequest)">
            <summary>
            Updates a instance setting.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the instance setting exists. Use -1 to indicate the admin workspace.</param>
            <param name="instanceSetting">The data about the instance settting being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.InstanceSetting.IInstanceSettingManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingRequest,System.DateTime)">
            <summary>
            Updates a instance setting. The request will only succeed if the supplied LastModifiedOn date matches the LastModifiedOn date for the instance setting within the system.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the instance setting exists. Use -1 to indicate the admin workspace.</param>
            <param name="instanceSetting">The data about the instance settting being updated.</param>
            <param name="lastModifiedOn">Date to check against.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.InstanceSetting.IInstanceSettingManager.DeleteAsync(System.Int32,System.Int32)">
            <summary>
            Deletes a instance setting.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the instance setting exists. Use -1 to indicate the admin workspace.</param>
            <param name="instanceSettingID">ArtifactID of the instance setting to read.</param>
            <returns>An object that contains the result of the delete operation.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.InstanceSetting.IInstanceSettingModule">
            <summary>
            Instance Settings Module Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.InstanceSetting.InstanceSettingRouteConstants">
            <summary>
            Names used in the url paths for Instance Settings Kepler services
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.InstanceSetting.InstanceSettingRouteConstants.INSTANCE_SETTINGS_MODULE">
            <summary>
            The Instance Setting module name from the url path for Instance Setting Kepler services
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.InstanceSetting.InstanceSettingRouteConstants.INSTANCE_SETTINGS_ROUTE">
            <summary>
            The Instance Setting route name from the url path for Instance Setting Kepler services
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingRequest">
            <summary>
            Represents a request to create or update a Instance Setting in a Workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingRequest.ArtifactID">
            <summary>
            Gets or Sets artifact id of the Instance Setting.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingRequest.Name">
            <summary>
            Gets or Sets name of the Instance Setting.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingRequest.Section">
            <summary>
            Gets or Sets section of the Instance Setting.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingRequest.Machine">
            <summary>
            Gets or Sets matchine of the Instance Setting.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingRequest.Value">
            <summary>
            Gets or Sets value of the Instance Setting.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingRequest.InitialValue">
            <summary>
            Gets or Sets initial value of the Instance Setting.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingRequest.Description">
            <summary>
            Gets or Sets description of the Instance Setting.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingRequest.ValueType">
            <summary>
            Gets or Sets value type of the Instance Setting.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingRequest.Encrypted">
            <summary>
            Gets or Sets encrypted flag of the Instance Setting.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingRequest.Keywords">
            <summary>
            Gets or Sets keywords of the Instance Setting.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingRequest.Notes">
            <summary>
            Gets or Sets notes of the Instance Setting.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingResponse">
            <summary>
            Holds response information returned from a request.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingResponse.Section">
            <summary>
            Gets or Sets the section of the Instance Setting.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingResponse.Machine">
            <summary>
            Gets or Sets the matchine of the Instance Setting.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingResponse.Value">
            <summary>
            Gets or Sets the value of the Instance Setting.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingResponse.InitialValue">
            <summary>
            Gets or Sets the initial value of the Instance Setting.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingResponse.Description">
            <summary>
            Gets or Sets the description of the Instance Setting.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingResponse.ValueType">
            <summary>
            Gets or Sets the value type of the Instance Setting.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingResponse.Encrypted">
            <summary>
            Gets or Sets the encrypted of the Instance Setting.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingResponse.Keywords">
            <summary>
            Gets or Sets the keywords of the Instance Setting.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingResponse.Notes">
            <summary>
            Gets or Sets the notes of the Instance Setting.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingResponse.CreatedOn">
            <summary>
            Gets or Sets the created on of the Instance Setting.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingResponse.CreatedBy">
            <summary>
            Gets or Sets the created by of the Instance Setting.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingResponse.LastModifiedOn">
            <summary>
            Gets or Sets the last modified on of the Instance Setting.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingResponse.LastModifiedBy">
            <summary>
            Gets or Sets the last modified by of the Instance Setting.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingValueTypeEnum">
            <summary>
            Idenitfies the value type of the Instance Setting.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingValueTypeEnum.Text">
            <summary>
            Represents Text value type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingValueTypeEnum.Integer32">
            <summary>
            Represents integer 32 value type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingValueTypeEnum.Integer64">
            <summary>
            Represents integer 64 value type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingValueTypeEnum.NonNegativeInteger32">
            <summary>
            Represents non negative integer 32 value type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingValueTypeEnum.NonNegativeInteger64">
            <summary>
            Represents non negative integer 64 value type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingValueTypeEnum.PositiveInteger32">
            <summary>
            Represents positive integer 32 value type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingValueTypeEnum.PositiveInteger64">
            <summary>
            Represents positive integer 64 value type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.InstanceSetting.Model.InstanceSettingValueTypeEnum.TrueFalse">
            <summary>
            Represents true false value type.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Layout.ILayoutManager">
            <summary>
            Exposes methods for creating, reading, updating, and deleting Layouts.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.Layout.ILayoutManager.CreateAsync(System.Int32,Relativity.Services.Interfaces.Layout.Models.LayoutRequest)">
            <summary>
            Adds a single Layout to Relativity.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the layout should be created. Use -1 to indicate the admin workspace.</param>
            <param name="layoutRequest">A request object containing the data used to create the Layout.</param>
            <returns>An object containing data about the created layout.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Layout.ILayoutManager.ReadAsync(System.Int32,System.Int32)">
            <summary>
            Retrieves basic metadata for an Layout, including its name, type, interval, and other properties.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the layout should be created. Use -1 to indicate the admin workspace.</param>
            <param name="layoutID">The Artifact ID of the Layout.</param>
            <returns>An object containing data about the requested Layout.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Layout.ILayoutManager.ReadAsync(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves extended metadata for an Layout, including information about additional actions available.
            </summary>
            <remarks>The extended metadata includes a list of Action objects, which contain the name and URL of a RESTful operation, userâ€™s permissions to perform it, and other properties. 
            For example, a user may not have permissions to delete or update an Layout if they only have read permissions.</remarks>
            <param name="workspaceID">The ArtifactID of the workspace where the layout should be created. Use -1 to indicate the admin workspace.</param>
            <param name="layoutID">The Artifact ID of the Layout.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended Layout metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user of this layout.</param>
            <returns>An object containing data about the requested layout.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Layout.ILayoutManager.UpdateAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Layout.Models.LayoutRequest)">
            <summary>
            Modifies the properties of an Layout.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the layout should be created. Use -1 to indicate the admin workspace.</param>
            <param name="layoutID">The Artifact ID of the layout.</param>
            <param name="layoutRequest">The data about the layout being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Layout.ILayoutManager.UpdateAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Layout.Models.LayoutRequest,System.DateTime)">
            <summary>
            Restricts updates to the properties of the Layout to the date that it was last modified
            </summary>
            <remarks>You can restrict the update of an Layout to the date that it was last modified by passing a DateTime object to this method. 
            The value for the DateTime object must match the LastModifiedOn date for the layout stored in Relativity. Otherwise, you receive an error, indicating that the object has been modified. </remarks>
            <param name="workspaceID">The ArtifactID of the workspace where the layout should be created. Use -1 to indicate the admin workspace.</param>
            <param name="layoutID">The Artifact ID of the layout.</param>
            <param name="layoutRequest">A request object containing data for the update operation.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the layout.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Layout.ILayoutManager.DeleteAsync(System.Int32,System.Int32)">
            <summary>
            Removes an Layout after it finishes executing.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the layout should be created. Use -1 to indicate the admin workspace.</param>
            <param name="layoutID">The Artifact ID of the Layout to delete.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Layout.ILayoutManager.GetEligibleOwnersAsync(System.Int32)">
            <summary>
            Returns a list of users eligible to be a layout owner.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the layout should be created. Use -1 to indicate the admin workspace.</param>
            <returns>A list of users eligible to be a layout owner</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.Layout.ILayoutModule">
            <summary>
            Layout Module Interface.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Layout.LayoutConstants">
            <summary>
            Provides routing information about URLs used by the Layout Manager service.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Layout.LayoutConstants.MODULE_PREFIX">
            <summary>
            The prefix used for module called during service requests.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Layout.LayoutConstants.SERVICE_MODULE_NAME">
            <summary>
            The name of the module called during service requests.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Layout.LayoutConstants.SERVICE_NAME">
            <summary>
            The name of the service.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Layout.LayoutConstants.SERVICE_ROUTE">
            <summary>
            The name of a route in the URL used in a request to the service.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Layout.LayoutConstants.BASE_SERVICE_ROUTE">
            <summary>
            The base URI path for the service.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Layout.LayoutConstants.LAYOUT_ID_STRING">
            <summary>
            The unique identifier for a layout used in a request.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Layout.Models.LayoutRequest">
            <summary>
            Represents a DTO used as a request for creating or updating a Layout.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Layout.Models.LayoutRequest.ObjectType">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> identifier for the object type associated to the layout.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Layout.Models.LayoutRequest.Name">
            <summary>
            Gets or sets the name for the layout.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Layout.Models.LayoutRequest.Order">
            <summary>
            Gets or sets where the layout displays in the Layouts drop down list.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Layout.Models.LayoutRequest.OverwriteProtection">
            <summary>
            Gets or sets if the layout could be edited while another process is editing it.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Layout.Models.LayoutRequest.AllowCopyFromPrevious">
            <summary>
            Gets or sets if the layout support copy from previous document. It only applies for document layouts at workspace level.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Layout.Models.LayoutRequest.RelativityApplications">
            <summary>
            Gets or sets a list of identifiers of associated Relativity Applications for the layout.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Layout.Models.LayoutRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the layout.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Layout.Models.LayoutRequest.Notes">
            <summary>
            Gets or sets optional words or phrase used to describe the layout.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.Layout.Models.LayoutRequest.#ctor">
            <summary>
            Initializes an instance of the LayoutRequest class with all properties defaulted.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Layout.Models.LayoutRequest.Owner">
            <summary>
            Gets or sets the Artifact ID and guids of the user who owns the Layout.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.Layout.Models.LayoutRequest.#ctor(Relativity.Services.Interfaces.Layout.Models.LayoutResponse)">
            <summary>
            Initializes an instance of the LayoutRequest class with a response object, which is useful for chaining commands. 
            </summary>
            <param name="layoutResponse">Layout response to convert to a request.</param>
        </member>
        <member name="T:Relativity.Services.Interfaces.Layout.Models.LayoutResponse">
            <summary>
            Represents the results of both read and update operation on a Layout.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Layout.Models.LayoutResponse.ObjectType">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> identifier for the object type associated to the layout.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Layout.Models.LayoutResponse.Order">
            <summary>
            Gets or sets where the layout displays in the Layouts drop down list.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Layout.Models.LayoutResponse.OverwriteProtection">
            <summary>
            Gets or sets if the layout could be edited while another process is editing it.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Layout.Models.LayoutResponse.AllowCopyFromPrevious">
            <summary>
            Gets or sets if the layout support copy from previous document.
            </summary>
            <remarks>
            This field only applies for document layouts.
            </remarks>
        </member>
        <member name="P:Relativity.Services.Interfaces.Layout.Models.LayoutResponse.RelativityApplications">
            <summary>
            Gets or sets a list of identifiers of associated Relativity Applications for the layout.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Layout.Models.LayoutResponse.CreatedOn">
            <summary>
            Gets the date and time when the Layout was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Layout.Models.LayoutResponse.CreatedBy">
            <summary>
            Gets the Artifact ID and name of the user who created the Layout.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Layout.Models.LayoutResponse.LastModifiedBy">
            <summary>
            Gets the Artifact ID and name of the user who recently updated the Layout.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Layout.Models.LayoutResponse.LastModifiedOn">
            <summary>
            Gets the date and time when the Layout was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Layout.Models.LayoutResponse.Keywords">
            <summary>
            Gets optional words or phrases used to describe the Layout.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Layout.Models.LayoutResponse.Notes">
            <summary>
            Gets optional words or phrase used to describe the Layout.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Layout.Models.LayoutResponse.Meta">
            <summary>
            Gets a list of unsupported and read-only properties on the current Layout object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Layout.Models.LayoutResponse.Actions">
            <summary>
            Gets a list of RESTful operations that a user has permissions to perform on the Layout.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Layout.Models.LayoutResponse.Owner">
            <summary>
            Gets or sets the Artifact ID and guids of the user who owns the Layout.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager">
            <summary>
            Exposes methods for initiating an application install or uninstall from a workspace and checking on the status.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.InstallApplicationAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.LibraryApplication.Models.InstallApplicationRequest)">
            <summary>
            Installs an application from the library into one or more workspaces.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationID">The artifact ID of the application.</param>
            <param name="request">Contains the list of target workspaces and other installation options.</param>
            <returns>The result of the install request with a list of application install IDs and messages for each workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.InstallApplicationAsync(System.Int32,System.Guid,Relativity.Services.Interfaces.LibraryApplication.Models.InstallApplicationRequest)">
            <summary>
            Installs an application from the library into one or more workspaces.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationGUID">The globally unique identifier of the application.</param>
            <param name="request">Contains the list of target workspaces and other installation options.</param>
            <returns>The result of the install request with a list of application install IDs and messages for each workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.InstallApplicationAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.LibraryApplication.Models.InstallApplicationRequest,System.Boolean)">
            <summary>
            Installs an application from the library into one or more workspaces.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationID">The artifact ID of the application.</param>
            <param name="request">Contains the list of target workspaces and other installation options.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user.</param>
            <returns>The result of the install request with a list of application install IDs and messages for each workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.InstallApplicationAsync(System.Int32,System.Guid,Relativity.Services.Interfaces.LibraryApplication.Models.InstallApplicationRequest,System.Boolean)">
            <summary>
            Installs an application from the library into one or more workspaces.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationGUID">The globally unique identifier of the application.</param>
            <param name="request">Contains the list of target workspaces and other installation options.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user.</param>
            <returns>The result of the install request with a list of application install IDs and messages for each workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.InstallApplicationAllAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.LibraryApplication.Models.InstallApplicationAllRequest)">
            <summary>
            Installs an application from the library into all workspaces or upgrades the application in workspaces where it is already installed.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationID">The artifact ID of the application.</param>
            <param name="request">Contains the mode to determine target workspaces and other installation options.</param>
            <returns>The result of the install request with a list of application install IDs and messages for each workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.InstallApplicationAllAsync(System.Int32,System.Guid,Relativity.Services.Interfaces.LibraryApplication.Models.InstallApplicationAllRequest)">
            <summary>
            Installs an application from the library into all workspaces or upgrades the application in workspaces where it is already installed.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationGUID">The globally unique identifier of the application.</param>
            <param name="request">Contains the mode to determine target workspaces and other installation options.</param>
            <returns>The result of the install request with a list of application install IDs and messages for each workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.InstallApplicationAllAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.LibraryApplication.Models.InstallApplicationAllRequest,System.Boolean)">
            <summary>
            Installs an application from the library into all workspaces or upgrades the application in workspaces where it is already installed.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationID">The artifact ID of the application.</param>
            <param name="request">Contains the mode to determine target workspaces and other installation options.</param>
            /// <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user.</param>
            <returns>The result of the install request with a list of application install IDs and messages for each workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.InstallApplicationAllAsync(System.Int32,System.Guid,Relativity.Services.Interfaces.LibraryApplication.Models.InstallApplicationAllRequest,System.Boolean)">
            <summary>
            Installs an application from the library into all workspaces or upgrades the application in workspaces where it is already installed.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationGUID">The globally unique identifier of the application.</param>
            <param name="request">Contains the mode to determine target workspaces and other installation options.</param>
            /// <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user.</param>
            <returns>The result of the install request with a list of application install IDs and messages for each workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.GetStatusAsync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the status of an application install or uninstall.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationID">The artifact ID of the application.</param>
            <param name="applicationInstallID">The artifact ID of the application (un)install record.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.GetStatusAsync(System.Int32,System.Guid,System.Int32)">
            <summary>
            Gets the status of an application install or uninstall.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationGuid">The GUID of the application.</param>
            <param name="applicationInstallID">The artifact ID of the application (un)install record.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.GetStatusAsync(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets the status of an application install or uninstall.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationID">The artifact ID of the application.</param>
            <param name="applicationInstallID">The artifact ID of the application (un)install record.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.GetStatusAsync(System.Int32,System.Guid,System.Int32,System.Boolean)">
            <summary>
            Gets the status of an application install or uninstall.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationGuid">The GUID of the application.</param>
            <param name="applicationInstallID">The artifact ID of the application (un)install record.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.GetStatusAsync(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets the status of the most recent application install for the specified application in the specified workspace.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationID">The artifact ID of the application.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.GetStatusAsync(System.Int32,System.Guid,System.Boolean)">
            <summary>
            Gets the status of the most recent application install for the specified application in the specified workspace.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationGuid">The GUID of the application.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.GetApplicationInstallDetailsAsync(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the installation details for a specified application and application install. 
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationID">The artifact ID of the application.</param>
            <param name="applicationInstallID">The artifact ID of the application install record.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.GetApplicationInstallDetailsAsync(System.Int32,System.Guid,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the installation details for a specified application and application install. 
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationGuid">The GUID of the application.</param>
            <param name="applicationInstallID">The artifact ID of the application install record.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.GetApplicationInstallDetailsAsync(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets the installation details for a specified application and application install. 
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationID">The artifact ID of the application.</param>
            <param name="applicationInstallID">The artifact ID of the application install record.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.GetApplicationInstallDetailsAsync(System.Int32,System.Guid,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets the installation details for a specified application and application install. 
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationGuid">The GUID of the application.</param>
            <param name="applicationInstallID">The artifact ID of the application install record.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.GetApplicationInstallDetailsReportAsync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a CSV export of the installation details for a specified application and application install. 
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationID">The artifact ID of the application.</param>
            <param name="applicationInstallID">The artifact ID of the application install record.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.GetApplicationInstallDetailsReportAsync(System.Int32,System.Guid,System.Int32)">
            <summary>
            Gets a CSV export of the installation details for a specified application and application install. 
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationGuid">The GUID of the application.</param>
            <param name="applicationInstallID">The artifact ID of the application install record.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.GetAllInstallStatusAsync(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the install status for all workspaces the application is installed to.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationID">The artifact ID of the application.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.GetAllInstallStatusAsync(System.Int32,System.Guid,System.Int32,System.Int32)">
            <summary>
            Gets the install status for all workspaces the application is installed to.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationGuid">The GUID of the application.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.GetAllInstallStatusAsync(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets the install status for all workspaces the application is installed to.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationID">The artifact ID of the application.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.GetAllInstallStatusAsync(System.Int32,System.Guid,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets the install status for all workspaces the application is installed to.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationGuid">The GUID of the application.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.GetOutdatedWorkspacesCount(System.Int32,System.Int32)">
            <summary>
            Gets the total number of workspaces containing an outdated version of a specified application.
            A version is considered "outdated" if it is lower than the version installed in the Application Library.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationID">The artifact ID of the application.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.GetOutdatedWorkspacesCount(System.Int32,System.Guid)">
            <summary>
            Gets the total number of workspaces containing an outdated version of a specified application.
            A version is considered "outdated" if it is lower than the version installed in the Application Library.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationGuid">The GUID of the application.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.GetAvailableWorkspacesAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.LibraryApplication.Models.Query.QueryOptions,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Retrieves a list of workspaces that the specified application can be installed to.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationID">The artifact ID of the application.</param>
            <param name="queryOptions">Contains the filtering and sorting options for the query.</param>
            <param name="start">The start index for the requested page.</param>
            <param name="length">The total number of records for the requested page.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user.</param>
            <returns>The search results with the details of the latest application installation attempt.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.GetAvailableWorkspacesAsync(System.Int32,System.Guid,Relativity.Services.Interfaces.LibraryApplication.Models.Query.QueryOptions,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Retrieves a list of workspaces that the specified application can be installed to.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationGuid">The GUID of the application.</param>
            <param name="queryOptions">Contains the filtering and sorting options for the query.</param>
            <param name="start">The start index for the requested page.</param>
            <param name="length">The total number of records for the requested page.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user.</param>
            <returns>The search results with the details of the latest application installation attempt.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.SearchAsync(System.Int32,Relativity.Services.Interfaces.LibraryApplication.Models.Query.QueryOptions,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Performs a search for the status of application installation results.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="queryOptions">Contains the filtering and sorting options for the query.</param>
            <param name="start">The start index for the requested page.</param>
            <param name="length">The total number of records for the requested page.</param>
            <param name="includeActions">Indicates whether to return a list of operations available to the current user.</param>
            <returns>The search results with the details of the latest application installation attempt.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.SearchApplicationAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.LibraryApplication.Models.Query.QueryOptions,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Performs a search for the status of application installation results.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationID">The artifact ID of the application.</param>
            <param name="queryOptions">Contains the filtering and sorting options for the query.</param>
            <param name="start">The start index for the requested page.</param>
            <param name="length">The total number of records for the requested page.</param>
            <param name="includeActions">Indicates whether to return a list of operations available to the current user.</param>
            <returns>The search results with the details of the latest application installation attempt.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.SearchApplicationAsync(System.Int32,System.Guid,Relativity.Services.Interfaces.LibraryApplication.Models.Query.QueryOptions,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Performs a search for the status of application installation results.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationGuid">The GUID of the application.</param>
            <param name="queryOptions">Contains the filtering and sorting options for the query.</param>
            <param name="start">The start index for the requested page.</param>
            <param name="length">The total number of records for the requested page.</param>
            <param name="includeActions">Indicates whether to return a list of operations available to the current user.</param>
            <returns>The search results with the details of the latest application installation attempt.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.CancelAsync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Cancels a single pending application install or uninstall.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationID">The artifact ID of the application.</param>
            <param name="applicationInstallID">The artifact ID of the application (un)install record.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.CancelAsync(System.Int32,System.Guid,System.Int32)">
            <summary>
            Cancels a single pending application install or uninstall.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationGuid">The GUID of the application.</param>
            <param name="applicationInstallID">The artifact ID of the application (un)install record.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.CancelAsync(System.Int32,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Cancels multiple pending application installs or uninstalls.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationID">The artifact ID of the application.</param>
            <param name="applicationInstallIDs">The list of artifact ID of the application (un)install record.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.CancelAsync(System.Int32,System.Guid,System.Collections.Generic.List{System.Int32})">
            <summary>
            Cancels multiple pending application installs or uninstalls.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationGuid">The GUID of the application.</param>
            <param name="applicationInstallIDs">The list of artifact ID of the application (un)install record.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.CancelAllAsync(System.Int32,System.Int32)">
            <summary>
            Cancels all pending application installs or uninstalls associated with the specified application.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationID">The artifact ID of the application.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.CancelAllAsync(System.Int32,System.Guid)">
            <summary>
            Cancels all pending application installs or uninstalls associated with the specified application.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationGuid">The GUID of the application.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.ValidateApplicationInstallation(System.Int32,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Validates the installation of a library application against one or more workspaces and reports failures such as invalid resource file types, name conflicts, and lock conflicts.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationID">The artifact ID of the application.</param>
            <param name="workspaceIDs">A list of one or more workspaces for validation.</param>
            <returns>The validation results including conflict details.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.ValidateApplicationInstallation(System.Int32,System.Guid,System.Collections.Generic.List{System.Int32})">
            <summary>
            Validates the installation of a library application against one or more workspaces and reports failures such as invalid resource file types, name conflicts, and lock conflicts.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationGuid">The GUID of the application.</param>
            <param name="workspaceIDs">A list of one or more workspaces for validation.</param>
            <returns>The validation results including conflict details.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.ValidateApplicationInstallation(System.Int32,System.Int32,Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallTargetOption)">
            <summary>
            Validates the installation of a library application against one or more workspaces and reports failures such as invalid resource file types, name conflicts, and lock conflicts.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationID">The artifact ID of the application.</param>
            <param name="targetWorkspaces">An enumeration whose value specifies all workspaces or only workspaces where the application is already installed.</param>
            <returns>The validation results including conflict details.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.ValidateApplicationInstallation(System.Int32,System.Guid,Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallTargetOption)">
            <summary>
            Validates the installation of a library application against one or more workspaces and reports failures such as invalid resource file types, name conflicts, and lock conflicts.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationGuid">The GUID of the application.</param>
            <param name="targetWorkspaces">An enumeration whose value specifies all workspaces or only workspaces where the application is already installed.</param>
            <returns>The validation results including conflict details.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.ValidateApplicationInstallation(System.Int32,Relativity.Kepler.Transport.IKeplerStream,System.Collections.Generic.List{System.Int32})">
            <summary>
            Validates the installation of the provided RAP file against one or more workspaces and reports failures such as invalid resource file types, name conflicts, and lock conflicts.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="rapStream">A stream with the RAP file contents.</param>
            <param name="workspaceIDs">A list of one or more workspaces for validation.</param>
            <returns>The validation results including conflict details.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.ValidateApplicationInstallation(System.Int32,Relativity.Kepler.Transport.IKeplerStream,Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallTargetOption)">
            <summary>
            Validates the installation of the provided RAP file against one or more workspaces and reports failures such as invalid resource file types, name conflicts, and lock conflicts.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="rapStream">A stream with the RAP file contents.</param>
            <param name="targetWorkspaces">An enumeration whose value specifies all workspaces or only workspaces where the application is already installed.</param>
            <returns>The validation results including conflict details.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.IApplicationInstallManager.IsNameAvailable(System.Int32,System.Collections.Generic.List{Relativity.Services.Interfaces.LibraryApplication.Models.NameValidationRequest})">
            <summary>
            Validates the new names requested for artifacts causing name or friendly name conflicts.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="nameValidationItems">A list of rename requests to validate.</param>
            <returns>The validation results for all requested renames.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager">
            <summary>
            Exposes methods for creating, reading, updating, and deleting applications in the library, as well as additional helper methods.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.CreateAsync(System.Int32,Relativity.Kepler.Transport.IKeplerStream)">
            <summary>
            Adds the provided application in the form of a RAP file to the application library.  If the application already exists, a ValidationException is thrown.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="rapStream">The application RAP file contents as a byte stream.</param>
            <returns>The artifact identifiers of the application and available actions.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.CreateAsync(System.Int32,Relativity.Kepler.Transport.IKeplerStream,System.Boolean)">
            <summary>
            Adds the provided application in the form of a RAP file to the application library.  If the application already exists, a ValidationException is thrown.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="rapStream">The application RAP file contents as a byte stream.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user.</param>
            <returns>The artifact ID of the application.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.CreateAsync(System.Int32,System.Guid)">
            <summary>
            Adds a RAP file into the application library using a temporary file GUID. The file must have been previously uploaded to a temporary cache using the UploadPackageAsync endpoint.
            If the application already exists, a ValidationException is thrown.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="packageGuid">A reference to a previously uploaded package. Note the package GUID is not the same as the application GUID.</param>
            <returns>The artifact identifiers of the application and available actions.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.CreateAsync(System.Int32,System.Guid,System.Boolean)">
            <summary>
            Adds a RAP file into the application library using a temporary file GUID. The file must have been previously uploaded to a temporary cache using the UploadPackageAsync endpoint.
            If the application already exists, a ValidationException is thrown.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="packageGuid">A reference to a previously uploaded package. Note the package GUID is not the same as the application GUID.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user.</param>
            <returns>The artifact identifiers of the application and available actions.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.UpdateAsync(System.Int32,Relativity.Kepler.Transport.IKeplerStream,Relativity.Services.Interfaces.LibraryApplication.Models.UpdateLibraryApplicationRequest)">
            <summary>
            Updates the application in the form of a RAP file in the application library. If the application doesn't exist, it is created.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="rapStream">The application RAP file contents as a byte stream.</param>
            <param name="request">A request with available update options.</param>
            <returns>An object containing identifiers, install status and messages.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.UpdateAsync(System.Int32,Relativity.Kepler.Transport.IKeplerStream,Relativity.Services.Interfaces.LibraryApplication.Models.UpdateLibraryApplicationRequest,System.Boolean)">
            <summary>
            Updates the application in the form of a RAP file in the application library. If the application doesn't exist, it is created.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="request">A request with available update options.</param>
            <param name="rapStream">The application RAP file contents as a byte stream.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user.</param>
            <returns>An object containing identifiers, install status, messages and, if "includeActions" is true, a list of actions.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.UpdateAsync(System.Int32,System.Guid,Relativity.Services.Interfaces.LibraryApplication.Models.UpdateLibraryApplicationRequest)">
            <summary>
            Updates the library application from a previously uploaded package. If the application doesn't exist, it is created.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="packageGuid">A reference to a previously uploaded package. Note the package GUID is not the same as the application GUID.</param>
            <param name="request">A request with available update options.</param>
            <returns>An object containing identifiers, install status and messages.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.UpdateAsync(System.Int32,System.Guid,Relativity.Services.Interfaces.LibraryApplication.Models.UpdateLibraryApplicationRequest,System.Boolean)">
            <summary>
            Updates the library application from a previously uploaded package. If the application doesn't exist, it is created.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="packageGuid">A reference to a previously uploaded package. Note the package GUID is not the same as the application GUID.</param>
            <param name="request">A request with available update options.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user.</param>
            <returns>An object containing identifiers, install status, messages and, if "includeActions" is true, a list of actions.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.ReadAsync(System.Int32,System.Int32)">
            <summary>
            Retrieves the metadata for an application in the library.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationID">The artifact ID of the application.</param>
            <returns>An object containing data about the requested application.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.ReadAsync(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves the metadata for an application in the library.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationID">The artifact ID of the application.</param>
            <param name="includeMetadata">Whether or not to include additional metadata about the tab in the returned payload.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user of this application.</param>
            <returns>An object containing data about the requested application.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.ReadAsync(System.Int32,System.Guid)">
            <summary>
            Retrieves the metadata for an application in the library.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationGUID">The globally unique identifier of the application.</param>
            <returns>An object containing data about the requested application.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.ReadAsync(System.Int32,System.Guid,System.Boolean,System.Boolean)">
            <summary>
            Retrieves the metadata for an application in the library.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationGUID">The globally unique identifier of the application.</param>
            <param name="includeMetadata">Whether or not to include additional metadata about the tab in the returned payload.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user of this application.</param>
            <returns>An object containing data about the requested application.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.ReadAllAsync(System.Int32)">
            <summary>
            Retrieves the metadata for all applications in the library.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <returns>A list of objects containing data about the requested application.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.ReadAllAsync(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves the metadata for all applications in the library.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="includeMetadata">Whether or not to include additional metadata about the tab in the returned payload.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user.</param>
            <returns>A list of objects containing data about the requested application.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.ReadApplicationContentsAsync(System.Int32,System.Int32)">
            <summary>
            Retrieves the RAP file for an application in the library.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationID">The artifact ID of the application.</param>
            <returns>A stream with the application's contents.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.ReadApplicationContentsAsync(System.Int32,System.Guid)">
            <summary>
            Retrieves the RAP file for an application in the library.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationGUID">The globally unique identifier of the application.</param>
            <returns>A stream with the application's contents.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.DeleteAsync(System.Int32,System.Int32)">
            <summary>
            Marks an application as hidden and no longer available for install.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationID">The artifact ID of the application.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.DeleteAsync(System.Int32,System.Guid)">
            <summary>
            Marks an application as hidden and no longer available for install.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationGuid">The GUID of the application.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.RetryLibraryInstallAsync(System.Int32,System.Int32)">
            <summary>
            Queues or retries a library application install.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationID">The artifact ID of the application.</param>
            <returns>The result of the install request with a list of application install IDs and messages for each workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.RetryLibraryInstallAsync(System.Int32,System.Guid)">
            <summary>
            Queues or retries a library application install.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationGUID">The globally unique identifier of the application.</param>
            <returns>The result of the install request with a list of application install IDs and messages for each workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.GetLibraryInstallStatusAsync(System.Int32,System.Int32)">
            <summary>
            Gets the status of an list of application installs.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationID">The artifact ID of the application.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.GetLibraryInstallStatusAsync(System.Int32,System.Guid)">
            <summary>
            Gets the status of an list of application installs.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationGuid">The GUID of the application.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.GetLibraryInstallStatusAsync(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets the status of an list of application installs.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationID">The artifact ID of the application.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.GetLibraryInstallStatusAsync(System.Int32,System.Guid,System.Boolean)">
            <summary>
            Gets the status of an list of application installs.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationGuid">The GUID of the application.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.CancelLibraryInstallAsync(System.Int32,System.Int32)">
            <summary>
            Cancels the pending library install for a specified application.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationID">The artifact ID of the application.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.CancelLibraryInstallAsync(System.Int32,System.Guid)">
            <summary>
            Cancels the pending library install for a specified application.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="applicationGuid">The GUID of the application.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.UploadPackageAsync(System.Int32,Relativity.Kepler.Transport.IKeplerStream)">
            <summary>
            Uploads an XML or RAP file to temporary location and returns the details.
            This endpoint is used in conjunction with CreateAsync and UpdateAsync to implement workflows
            where the application's details need to be displayed for final confirmation before installing the application.
            The package is NOT installed until a subsequent call to CreateAsync or UpdateAsync.
            If the package is never is installed, it will be deleted after one week.
            If the application already exists with the same or newer version, a ValidationException is thrown.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="rapStream">The application RAP file contents as a byte stream.</param>
            <returns>GUID reference to the package as well as the metadata of the perspective application.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.DeletePackageAsync(System.Int32,System.Guid)">
            <summary>
            Removes package from temporary storage.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="packageGuid">A reference to a previously uploaded package. Note the package GUID is not the same as the application GUID.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.DownloadPackageAsync(System.Int32,System.Guid)">
            <summary>
            Retrieves the contents of a temporary package.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for library applications.</param>
            <param name="packageGuid">A reference to a previously uploaded package. Note the package GUID is not the same as the application GUID.</param>
            <returns>A stream with the package's contents.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.GetApplicationHostingStatusAsync(System.Int32,System.Guid)">
            <summary>
            Queries an application for the current state of whether or not it is fully hosted and ready to be used
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the application is located.</param>
            <param name="applicationGUID">The globally unique identifier of the application</param>
            <returns>The overall status of the application, a message about the state, and a list of custom pages in the app and their readiness</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationManager.GetApplicationHostingStatusAsync(System.Int32,System.Int32)">
            <summary>
            Queries an application for the current state of whether or not it is fully hosted and ready to be used
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the application is located.</param>
            <param name="applicationID">The workspace-specific identifier of the application.</param>
            <returns>The overall status of the application, a message about the state, and a list of custom pages in the app and their readiness</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.ILibraryApplicationModule">
            <summary>
            Library Application Module Interface.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationComponentType">
            <summary>
            Identifies the type of a component in an application.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationHostingStatusResponse">
            <summary>
            Object that contains the readiness status of an application
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationHostingStatusResponse.CustomPages">
            <summary>
            Any and all custom pages associated with this application and their respective readiness status
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallConflict">
            <summary>
            Represents a conflict found during application install validation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallConflict.ConflictCorrelationID">
            <summary>
            The ID that identifies the validation conflict.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallConflict.ConflictArtifactIdentifier">
            <summary>
            The ID, GUID, and name of the artifact that caused the validation conflict.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallConflict.Description">
            <summary>
            A description of the validation conflict.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallConflict.ApplicationComponentType">
            <summary>
            Identifies the component type that triggered the conflict.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallConflict.ConflictType">
            <summary>
            Indicates the type of conflict: locked application, name, or friendly name.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallConflict.ConflictApplicationIdentifier">
            <summary>
            The application associated with the conflicted artifact for lock conflicts.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallConflict.Options">
            <summary>
            A list of available resolution options for this conflict.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallConflict.ResolutionOptions">
            <summary>
            A pre-filled list of resolution options for the conflict.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallConflictResolution">
            <summary>
            Represents a resolution for a conflict found during application install validation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallConflictResolution.ConflictCorrelationID">
            <summary>
            The ID that identifies the validation conflict.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallConflictResolution.WorkspaceID">
            <summary>
            The ID of the workspace where the validation conflict occured.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallConflictResolution.ConflictArtifactID">
            <summary>
            The ArtifactID of the artifact that caused the validation conflict.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallConflictResolution.ApplicationComponentType">
            <summary>
            Identifies the component type that triggered the conflict.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallConflictResolution.ResolutionType">
            <summary>
            The type of resolution selected by the user to resolve the validation conflict.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallConflictResolution.ConflictApplicationID">
            <summary>
            The identifier of the application to unlock. This will be empty for other conflict types.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallConflictResolution.FieldIdentifiers">
            <summary>
            A list of GUIDs for an incoming field in a field name conflict. This will be empty for other conflict types.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallConflictResolution.Value">
            <summary>
            The resolution value depending on the resolution type.
            Rename: The new name for the conflicting artifact that already exists in the environment
            Map: Value should be an empty string
            Unlock: Value should be an empty string
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallConflictResolutionType">
            <summary>
            Indicates how the conflict should be resolved.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallConflictType">
            <summary>
            Indicates the type of installation conflict that requires a resolution.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallDetail">
            <summary>
            Contains the installation details for an individual artifact within the specified application.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallDetail.CreatedOn">
            <summary>
            The date and time that the detail record was created.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallDetail.ArtifactTypeName">
            <summary>
            The name of the artifact type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallDetail.ArtifactStatus">
            <summary>
            The install status of the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallDetail.Message">
            <summary>
            The details of the install step.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallSearchItem">
            <summary>
            Returns the status of an application installation for an application and workspace combination.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallSearchItem.ApplicationInstallID">
            <summary>
            The ID of the latest application installation attempt.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallSearchItem.ApplicationIdentifier">
            <summary>
            The application associated with the install.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallSearchItem.WorkspaceIdentifier">
            <summary>
            The workspace where the application was installed.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallSearchItem.ClientIdentifier">
            <summary>
            The client associated with the target workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallSearchItem.MatterIdentifier">
            <summary>
            The matter associated with the target workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallSearchItem.Message">
            <summary>
            Information generated during the install process.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallSearchItem.RootFolderID">
            <summary>
            Root folder related to the workspace where the application was installed.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallSearchItem.InstallStatus">
            <summary>
            The status of the application install.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallSearchItem.Version">
            <summary>
            The version number of the application.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallSearchItem.IsOutOfDate">
            <summary>
            If the application installed in the workspace has a lower version and/or a different origin signature than what is currently installed in the Application Library,
            the application is considered to be "Out of Date." 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallSearchItem.InstalledBy">
            <summary>
            The user that initiated the application install.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallSearchItem.StartedOn">
            <summary>
            The date and time when the application install was started.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallSearchItem.CompletedOn">
            <summary>
            The date and time when the application install was completed.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallSearchResponse">
            <summary>
            Contains the results and paging options for an application installation search.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallSearchResponse.Results">
            <summary>
            The results of the query.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallSearchResponse.Summary">
            <summary>
            A breakdown of an application's install status across all workspaces.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallTargetOption">
            <summary>
            Installation options when installing or upgrading an application in all workspaces.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallTargetOption.Unknown">
            <summary>
            Undefined default.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallTargetOption.ForceInstall">
            <summary>
            Install to workspaces where the application is missing and upgrade the application in workspaces where it is already installed.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallTargetOption.UpgradeOnly">
            <summary>
            Upgrade the application in workspaces where it is already installed.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.CancelApplicationInstallResponse">
            <summary>
            The response to a cancel installation request containing a list of installation identifiers and a list of messages.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.CancelApplicationInstallResponse.Results">
            <summary>
            A list of application installation identifiers.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.CancelApplicationInstallResponse.ApplicationIdentifier">
            <summary>
            The application associated with the install.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.CancelApplicationInstallResult">
            <summary>
            Holds the result of a cancel installation request for a single application install.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.CancelApplicationInstallResult.IsSuccessful">
            <summary>
            Indicates whether or not the cancellation was successful. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.CancelApplicationInstallResult.WorkspaceIdentifier">
            <summary>
            The target workspace for the install request.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.CancelApplicationInstallResult.ApplicationInstallID">
            <summary>
            The identifier of the application install used for querying for the status.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.CancelApplicationInstallResult.Message">
            <summary>
            An informative warning message explaining an unsuccessful request.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.CancelLibraryInstallResponse">
            <summary>
            The response to a cancel a single library installation request.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.CancelLibraryInstallResponse.ApplicationIdentifier">
            <summary>
            The ID of the application associated with the install.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.CancelLibraryInstallResponse.IsSuccessful">
            <summary>
            Indicates whether or not the cancellation was successful. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.CancelLibraryInstallResponse.ApplicationInstallID">
            <summary>
            The ID of the application install.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.CancelLibraryInstallResponse.Message">
            <summary>
            An informative warning message explaining an unsuccessful request.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.CreateLibraryApplicationResponse">
            <summary>
            The response to an application create request containing the installation identifier and actions.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.CreateLibraryApplicationResponse.ApplicationIdentifier">
            <summary>
            The identifier of the application install record used for querying for the status.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.CreateLibraryApplicationResponse.Actions">
            <summary>
            Gets a list of RESTful operations that a user has permissions to perform on the install: Get Status.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.CreateLibraryApplicationResponse.ApplicationInstallID">
            <summary>
            The ID of the Library Application install.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.CreateLibraryApplicationResponse.InstallStatus">
            <summary>
            The status of the Library Application install.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.CustomPageHostingStatusResponse">
            <summary>
            A response from the API around the current state of custom pages and whether or not they are ready to accept requests
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.CustomPageHostingStatusResponse.CustomPage">
            <summary>
            An identifier for this custom page
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.CustomPageHostingStatusResponse.StatusCode">
            <summary>
            Get an HttpStatus code that is returned from calling the custom page readiness endpoint
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetAllInstallStatusResponse.CurrentStartIndex">
            <summary>
            Gets the starting index for the current page.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetAllInstallStatusResponse.ResultCount">
            <summary>
            Gets the total number of records available in the current page.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetAllInstallStatusResponse.TotalCount">
            <summary>
            Gets the total number of records available.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetAllInstallStatusResponse.ApplicationIdentifier">
            <summary>
            The application associated with the install.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetAllInstallStatusResponse.Results">
            <summary>
            A list of install statuses.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetAllInstallStatusResponse.Summary">
            <summary>
            A breakdown of an application's install status across all workspaces.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetAllInstallStatusResponse.FirstPage">
            <summary>
            Gets a RESTful operation that requests the first page of results.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetAllInstallStatusResponse.PreviousPage">
            <summary>
            Gets a RESTful operation that requests the previous page of results.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetAllInstallStatusResponse.NextPage">
            <summary>
            Gets a RESTful operation that requests the next page of results.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetAllInstallStatusResponse.LastPage">
            <summary>
            Gets a RESTful operation that requests the last page of results.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.GetApplicationInstallDetailsResponse">
            <summary>
            Returns the application install details for a given application and application install ID.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetApplicationInstallDetailsResponse.CurrentStartIndex">
            <summary>
            Gets the starting index for the current page.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetApplicationInstallDetailsResponse.ResultCount">
            <summary>
            Gets the total number of records available in the current page.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetApplicationInstallDetailsResponse.TotalCount">
            <summary>
            Gets the total number of records available.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetApplicationInstallDetailsResponse.ApplicationIdentifier">
            <summary>
            The ID of the application associated with the install.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetApplicationInstallDetailsResponse.Version">
            <summary>
            The version number of the application.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetApplicationInstallDetailsResponse.ApplicationInstallID">
            <summary>
            The identifier of the application install used to query for the installation details.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetApplicationInstallDetailsResponse.InstallStatus">
            <summary>
            The status of the application install.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetApplicationInstallDetailsResponse.Messages">
            <summary>
            An informative list of warning messages explaining a failed application install.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetApplicationInstallDetailsResponse.Details">
            <summary>
            Holds the artifact install details for each artifact within the application.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetApplicationInstallDetailsResponse.FirstPage">
            <summary>
            Gets a RESTful operation that requests the first page of results.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetApplicationInstallDetailsResponse.PreviousPage">
            <summary>
            Gets a RESTful operation that requests the previous page of results.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetApplicationInstallDetailsResponse.NextPage">
            <summary>
            Gets a RESTful operation that requests the next page of results.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetApplicationInstallDetailsResponse.LastPage">
            <summary>
            Gets a RESTful operation that requests the last page of results.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetInstallStatusResponse.ApplicationInstallID">
            <summary>
            The ID of the application install.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetInstallStatusResponse.ApplicationIdentifier">
            <summary>
            The application associated with the install.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetInstallStatusResponse.WorkspaceIdentifier">
            <summary>
            The workspace where the application was installed.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetInstallStatusResponse.WorkspaceName">
            <summary>
            The name of the workspace where the application was installed.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetInstallStatusResponse.Client">
            <summary>
            The client related to the workspace where the application was installed.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetInstallStatusResponse.Matter">
            <summary>
            The matter related to the workspace where the application was installed.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetInstallStatusResponse.Message">
            <summary>
            Information generated during the install process.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetInstallStatusResponse.RootFolderID">
            <summary>
            Root folder related to the workspace where the application was installed.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetInstallStatusResponse.InstallStatus">
            <summary>
            The status of the application install.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetInstallStatusResponse.ValidationResult">
            <summary>
            If there are any validation failures that require user intervention, the ValidationResult property will hold the options for resolving the failures and retrying the install.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetInstallStatusResponse.Version">
            <summary>
            The version number of the application.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetInstallStatusResponse.IsOutOfDate">
            <summary>
            If the application installed in the workspace has a lower version and/or a different origin signature than what is currently installed in the Application Library,
            the application is considered to be "Out of Date." 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetInstallStatusResponse.ValidationMessages">
            <summary>
            A list of messages associated with the application install status request. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetInstallStatusResponse.Errors">
            <summary>
            A list of any errors that occurred during the install.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetInstallStatusResponse.InstalledBy">
            <summary>
            The user that initiated the application install.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetInstallStatusResponse.StartedOn">
            <summary>
            The date and time when the application install was started.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetInstallStatusResponse.CompletedOn">
            <summary>
            The date and time when the application install was completed.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetInstallStatusResponse.GetCurrentInstallStatus">
            <summary>
            The action to retrieve the status of the most recent install for the specified application and workspace.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.GetOutdatedWorkspacesResponse">
            <summary>
            Contains the total number of workspaces that have a lower version of the specified application
            installed than the version currently installed in the Application Library.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetOutdatedWorkspacesResponse.ApplicationIdentifier">
            <summary>
            The ID and Guid of the specified application.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetOutdatedWorkspacesResponse.IsGlobalApplication">
            <summary>
            Represents whether or not the application is a global application.
            Global applications are applications that cannot be installed into any workspaces.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetOutdatedWorkspacesResponse.OutdatedWorkspacesCount">
            <summary>
            The number of outdated workspaces associated with the specified application.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetOutdatedWorkspacesResponse.UpdateOutdatedApplications">
            <summary>
            The action to update any outdated applications to the latest version available in the Application Library.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.GetOutdatedWorkspacesResponse.UpdateOutdatedApplicationsPayload">
            <summary>
            The payload for the action to update any outdated applications to the latest version available in the Application Library.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.HostingStatusResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.HostingStatusResponse.State">
            <summary>
            The readiness status as a whole, and whether or not it is ready to take requests
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.HostingStatusResponse.Message">
            <summary>
            A user friendly message about the current state
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.HostingStatusResponse.Actions">
            <summary>
            Gets a list of RESTful operations, if available, to perform in order to get the component into a Ready state
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.IHasInstallStatus.InstallStatus">
            <summary>
            The status of the application install.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.IHasInstallStatus.ApplicationInstallID">
            <summary>
            The ID of the Application install.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.IInstallApplicationRequest">
            <summary>
            A common interface for the install and uninstall request messages.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.IInstallApplicationRequest.WorkspaceIDs">
            <summary>
            A list of workspaces where the application should be installed.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.IInstallApplicationResponse">
            <summary>
            A common interface for the install and uninstall response messages.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.IInstallApplicationResponse.ApplicationIdentifier">
            <summary>
            The application associated with the install.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.IInstallApplicationResponse.Results">
            <summary>
            A list of installation identifiers and messages.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.InstallApplicationAllRequest">
            <summary>
            Represents a request for installing an application into one or more workspaces.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.InstallApplicationAllRequest.UnlockApplications">
            <summary>
            Unlocks applications that conflict with the install.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.Models.InstallApplicationAllRequest.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.LibraryApplication.Models.InstallApplicationAllRequest.#ctor(Relativity.Services.Interfaces.LibraryApplication.Models.ApplicationInstallTargetOption)">
            <summary>
            Constructor with mode parameter.
            </summary>
            <param name="mode"></param>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.InstallApplicationRequest">
            <summary>
            Represents a request for installing an application into one or more workspaces.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.InstallApplicationRequest.WorkspaceIDs">
            <summary>
            A list of workspaces where the application should be installed.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.InstallApplicationRequest.UnlockApplications">
            <summary>
            Unlocks applications that conflict with the install.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.InstallApplicationRequest.ConflictResolutions">
            <summary>
            A list of resolutions to fix validation conflicts.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.InstallApplicationResponse">
            <summary>
            The response to an application install request containing a list of installation identifiers and messages.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.InstallApplicationResponse.ApplicationIdentifier">
            <summary>
            The application associated with the install.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.InstallApplicationResponse.Messages">
            <summary>
            A list of warnings or informational messages that didn't cause a failure but may require action.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.InstallApplicationResponse.Results">
            <summary>
            A list of installation identifiers and messages.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.InstallApplicationResult">
            <summary>
            Holds the result of an individual install request for a workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.InstallApplicationResult.WorkspaceIdentifier">
            <summary>
            The target workspace for the install request.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.InstallApplicationResult.ApplicationInstallID">
            <summary>
            The identifier of the application install record used for querying for the status.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.InstallApplicationResult.Messages">
            <summary>
            One or more informative messages explaining an unsuccessful request.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.InstallApplicationResult.InstallStatus">
            <summary>
            The status of the application install.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.InstallStatus.Code">
            <summary>
            The status of the application installation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.InstallStatus.Message">
            <summary>
            The message associated with the installation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.InstallStatus.Details">
            <summary>
            Any additional details associated with the installation; In the case of failed installs, this can include exception details.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.InstallStatus.GetDetailsAction">
            <summary>
            The action to retrieve the detail of the application installation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.InstallStatus.RetryInstallAction">
            <summary>
            The action to retry the application installation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.InstallStatus.CancelInstallAction">
            <summary>
            The action to cancel the application installation.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.InstallStatusCode">
            <summary>
            The available codes for an application install status.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.LibraryApplication.Models.InstallStatusCode.Unknown">
            <summary>
            Unknown is not used by Relativity and represents an uninitialized status value.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.LibraryApplication.Models.InstallStatusCode.Pending">
            <summary>
            The application install task has been queued and is waiting to be picked up by an agent.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.LibraryApplication.Models.InstallStatusCode.InProgress">
            <summary>
            The agent is in the process of executing the application install task.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.LibraryApplication.Models.InstallStatusCode.Failed">
            <summary>
             The application install task failed due to a validation failure or an unexpected error.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.LibraryApplication.Models.InstallStatusCode.Completed">
             <summary>
            The application install task is complete.
             </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.LibraryApplication.Models.InstallStatusCode.Canceled">
            <summary>
            The application install task was canceled before an agent could pick it up.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.InstallStatusSummary">
            <summary>
            A breakdown of an application's install status across all workspaces.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.InstallStatusSummary.Other">
            <summary>
            Count of of workspaces with an unknown status.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.InstallStatusSummary.Pending">
            <summary>
            Count of of workspaces with an pending status.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.InstallStatusSummary.InProgress">
            <summary>
            Count of workspaces with an in-progress status.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.InstallStatusSummary.Failed">
            <summary>
            Count of workspaces with an failed status.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.InstallStatusSummary.Completed">
            <summary>
            Count of workspaces with an completed status.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.InstallStatusSummary.Canceled">
            <summary>
            Count of workspaces with an unknown status.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.InstallStatusSummary.TotalActiveInstalls">
            <summary>
            Aggregate count of workspaces with an pending or in-progress status.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.InstallStatusSummary.Total">
            <summary>
            Aggregate count of all workspaces.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.InstallValidationResult">
            <summary>
            Represents the actions required to fix install validation failures.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.InstallValidationResult.RetryInstallAction">
            <summary>
            The action to retry the install with resolutions to fix validation conflicts.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.InstallValidationResult.RetryInstallRequestTemplate">
            <summary>
            The request object used in conjunction with RetryInstallAction to retry the application installation with conflict resolutions.
            This request template can be filled out and sent to the Install Application endpoint to retry with resolutions.
            This template will fail if sent in as-is. The Resolution Type must be specified, along with the value and Conflict Artifact as needed.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.InstallValidationResult.InstallConflicts">
            <summary>
            Presents the conflicts along with options for resolving. Ex: rename field or map field.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.LibraryApplicationRequiredFlag">
            <summary>
            Indicates whether an application is required, required if present or optional.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.LibraryApplication.Models.LibraryApplicationRequiredFlag.Optional">
            <summary>
            Optional
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.LibraryApplication.Models.LibraryApplicationRequiredFlag.Required">
            <summary>
            Required
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.LibraryApplication.Models.LibraryApplicationRequiredFlag.RequiredIfPresent">
            <summary>
            Required If Present
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.LibraryApplication.Models.LibraryApplicationRequiredFlag.Unknown">
            <summary>
            Cannot be determined.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.LibraryApplicationResponse">
            <summary>
            Contains metadata for a library application.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.LibraryApplicationResponse.Version">
            <summary>
            The version number of the application.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.LibraryApplicationResponse.FileName">
            <summary>
            The name of the application's RAP file. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.LibraryApplicationResponse.UserFriendlyURL">
            <summary>
            A more simple and readable version of the application's URL (i.e. without GUIDs).
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.LibraryApplicationResponse.Required">
            <summary>
            Whether an application is required, required if present or optional.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.LibraryApplicationResponse.TreeView">
            <summary>
            The different components that make up the application in JSON format.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.LibraryApplicationResponse.CreatedBy">
            <summary>
            The user who created this application.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.LibraryApplicationResponse.CreatedOn">
            <summary>
            The date and time that this application was created.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.LibraryApplicationResponse.LastModifiedBy">
            <summary>
            The user who last modified this application.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.LibraryApplicationResponse.LastModifiedOn">
            <summary>
            The date and time that the application was last modified.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.LibraryApplicationResponse.License">
            <summary>
            The current state of the application license.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.LibraryApplicationResponse.Actions">
            <summary>
            Gets a list of RESTful operations that a user has permissions to perform.
            Among these are actions to get the RAP file and get the installed workspaces.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.LicenseStatus">
            <summary>
            The current state of the application license.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.LibraryApplication.Models.LicenseStatus.NotApplicable">
            <summary>
            A license is not required.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.LibraryApplication.Models.LicenseStatus.Valid">
            <summary>
            A license is required and is currently valid.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.LibraryApplication.Models.LicenseStatus.Expired">
            <summary>
            A license is required but is currently expired.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.LibraryApplication.Models.LicenseStatus.Invalid">
            <summary>
            A license is required but is currently missing or invalid.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.NameValidationRequest">
            <summary>
            Contains the requested new name for an existing artifact causing a name or friendly name conflict.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.NameValidationRequest.WorkspaceID">
            <summary>
            The ID of the workspace with the validation conflict.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.NameValidationRequest.ConflictArtifactID">
            <summary>
            The ID of the artifact that caused the validation conflict.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.NameValidationRequest.ConflictType">
            <summary>
            Indicates the type of conflict: name or friendly name.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.NameValidationRequest.Value">
            <summary>
            The new name requested for the artifact that caused the validation conflict.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.NameValidationResponse">
            <summary>
            Validates the new name requested for an artifact causing a name or friendly name conflict.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.NameValidationResponse.WorkspaceID">
            <summary>
            The ID of the workspace with the validation conflict.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.NameValidationResponse.ConflictArtifactID">
            <summary>
            The ID of the artifact that caused the validation conflict.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.NameValidationResponse.ConflictType">
            <summary>
            Indicates the type of conflict: name or friendly name.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.NameValidationResponse.IsAvailable">
            <summary>
            Indicates whether or not the specified Artifact ID can be successfully renamed with the requested new name.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.NameValidationResponse.Messages">
            <summary>
            Contains a list of error messages if the corresponding NameValidationRequest was invalid.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.PackageDetailsResponse">
            <summary>
            Response containing application details after temporary package is uploaded.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.PackageDetailsResponse.Name">
            <summary>
            Name of the application.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.PackageDetailsResponse.PackageGUID">
            <summary>
            Identifier used in subsequent create or update requests.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.PackageDetailsResponse.ApplicationGUID">
            <summary>
            The unique identifier of the application.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.PackageDetailsResponse.Version">
            <summary>
            The version number of the application.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.PackageDetailsResponse.FileName">
            <summary>
            The name of the application's RAP file. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.PackageDetailsResponse.UserFriendlyURL">
            <summary>
            A more simple and readable version of the application's URL (i.e. without GUIDs).
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.PackageDetailsResponse.TreeView">
            <summary>
            The different components that make up the application in JSON format.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.Query.QueryOptions">
            <summary>
            Describes the filters and sorts for querying a strongly typed collection.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.Query.QueryOptions.Condition">
            <summary>
            Gets or sets the filter criteria. It can be a simple, single-field condition or a complex expression made by combining conditions.
            </summary>
            <value>The condition.</value>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.Query.QueryOptions.Sorts">
            <summary>
            Gets or sets the sort order for the results specified as a collection of Sort objects. See <see cref="T:Relativity.Services.Sort">Sort</see>.
            </summary>
            <value>The sorts.</value>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.Query.QueryResponse">
            <summary>
            The base class for a query to a strongly typed endpoint (ie. not Object Manager).
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.Query.QueryResponse.CurrentStartIndex">
            <summary>
            The start index for the current result set.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.Query.QueryResponse.ResultCount">
            <summary>
            The count of records returned in the current result set.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.Query.QueryResponse.TotalCount">
            <summary>
            The total count of all records without pagination.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.Query.QueryResponse.FirstPage">
            <summary>
            The action to retrieve the first page.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.Query.QueryResponse.PreviousPage">
            <summary>
            The action to retrieve the previous page.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.Query.QueryResponse.NextPage">
            <summary>
            The action to retrieve the next page.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.Query.QueryResponse.LastPage">
            <summary>
            The action to retrieve the last page.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.Query.Sort">
            <summary>
            The target field name and sort direction.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.Query.Sort.FieldName">
            <summary>
            The name of the field the data should be sorted by.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.Query.Sort.Direction">
            <summary>
            The sort direction, ascending or descending.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.Query.SortDirection">
            <summary>
            Defines the sort direction
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.LibraryApplication.Models.Query.SortDirection.Ascending">
            <summary>
            Ascending Condition
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.LibraryApplication.Models.Query.SortDirection.Descending">
            <summary>
            Descending Condition
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.ReadinessState">
            <summary>
            The status of whether or not the component is accessible and ready to be used
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.LibraryApplication.Models.ReadinessState.Ready">
            <summary>
            Component is fully online and ready to take requests
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.LibraryApplication.Models.ReadinessState.Pending">
            <summary>
            The component is being actively being deployed
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.LibraryApplication.Models.ReadinessState.OutOfDate">
            <summary>
            The component is available to take requests, but is an old version
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.LibraryApplication.Models.ReadinessState.Unavailable">
            <summary>
            There is no version of this component being currently hosted
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.RetryLibraryInstallResponse">
            <summary>
            The response to an application install retry request containing the installation identifier and a list of actions.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.RetryLibraryInstallResponse.ApplicationIdentifier">
            <summary>
            The application associated with the install.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.RetryLibraryInstallResponse.ApplicationInstallID">
            <summary>
            The identifier of the application install used for querying for the status.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.RetryLibraryInstallResponse.InstallStatus">
            <summary>
            The status of the application install.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.UpdateLibraryApplicationRequest">
            <summary>
            Represents a request for creating or updating a Library Application.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.UpdateLibraryApplicationRequest.IgnoreVersion">
            <summary>
            Gets or sets a value which enables or disables version checks.
            By default, only upgrades with a higher application version than the version currently installed are allowed.
            NOTE: All update requests are processed by a queue and will be not be immediate.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.UpdateLibraryApplicationRequest.CreateIfMissing">
            <summary>
            Gets or sets whether an application is created when it doesn't already exist in the library.
            By default, if the application is missing, an exception is thrown.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.UpdateLibraryApplicationRequest.RefreshCustomPages">
            <summary>
            Gets or sets a value indicating whether the custom pages should be refreshed up front
            or later when the application is installed to a workspace.
            NOTE: When set to false (default), updates to custom pages are made during the application install process and will take longer to take effect.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.UpdateLibraryApplicationRequest.FileName">
            <summary>
            Gets or sets the optional name of the RAP file for the application.
            If provided, this value will override the existing filename found in the RAP file,
            and allow an upgrade with the same application version as the version currently installed.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.UpdateLibraryApplicationResponse">
            <summary>
            The response to an application create request containing the installation identifier and actions.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.UpdateLibraryApplicationResponse.ApplicationIdentifier">
            <summary>
            The identifier of the application install record used for querying for the status.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.UpdateLibraryApplicationResponse.Actions">
            <summary>
            Gets a list of RESTful operations that a user has permissions to perform on the install: Get Status.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.UpdateLibraryApplicationResponse.ApplicationInstallID">
            <summary>
            The ID of the Library Application install.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.UpdateLibraryApplicationResponse.InstallStatus">
            <summary>
            The status of the application install.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.UpdateLibraryApplicationResponse.Messages">
            <summary>
            A list of informational messages, especially in cases in which a request is "skipped" due to matching versions.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.LibraryApplication.Models.ValidationResult">
            <summary>
            Holds the validation results that would have resulted if an application were to be installed into the target workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ValidationResult.ApplicationIdentifier">
            <summary>
            Identifies the application being tested for validation errors.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ValidationResult.WorkspaceIdentifier">
            <summary>
            Identifies the workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ValidationResult.Success">
            <summary>
            Indicates whether or not validation was successful.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ValidationResult.Errors">
            <summary>
            A list of unexpected and non-resolvable errors.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.LibraryApplication.Models.ValidationResult.Conflicts">
            <summary>
            A list of resolvable errors like lock and name conflicts.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.MassOperation.IMassOperationManager">
            <summary>
            Exposes the methods for working with Mass Operations.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.MassOperation.IMassOperationManager.CreateAsync(System.Int32,Relativity.Services.Interfaces.MassOperation.Models.CustomPageMassOperationRequest)">
            <summary>
            Creates a custom page mass operation.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Mass Operation should be created.</param>
            <param name="massOperationRequest">The data about the mass operation being created.</param>
            <returns>ArtifactID of the created mass operation.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.MassOperation.IMassOperationManager.CreateAsync(System.Int32,Relativity.Services.Interfaces.MassOperation.Models.EventHandlerMassOperationRequest)">
            <summary>
            Creates an event handler mass operation.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Mass Operation should be created.</param>
            <param name="massOperationRequest">The data about the mass operation being created.</param>
            <returns>ArtifactID of the created mass operation.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.MassOperation.IMassOperationManager.ReadMassOperationAsync(System.Int32,System.Int32)">
            <summary>
            Reads a mass operation.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Object Type and Mass Operation exist.</param>
            <param name="massOperationID">The ArtifactID of the Mass Operation.</param>
            <returns>An object containing data about the requested mass operation.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.MassOperation.IMassOperationManager.ReadMassOperationAsync(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Reads a mass operation.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Object Type and Mass Operation exist.</param>
            <param name="massOperationID">The ArtifactID of the Mass Operation.</param>
            <param name="includeMetadata">Whether or not to include additional metadata about the mass operation in the returned payload.</param>
            <param name="includeActions">Whether or not to include a list of RESTful actions available for this mass operation in the returned payload.</param>
            <returns>>An object containing data about the requested mass operation.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.MassOperation.IMassOperationManager.UpdateAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.MassOperation.Models.CustomPageMassOperationRequest)">
            <summary>
            Updates a custom page mass operation.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Object Type and Mass Operation exist.</param>
            <param name="massOperationID">The ArtifactID of the Mass Operation.</param>
            <param name="massOperationRequest">The data about the mass operation being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.MassOperation.IMassOperationManager.UpdateAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.MassOperation.Models.CustomPageMassOperationRequest,System.DateTime)">
            <summary>
            Updates a custom page mass operation. The request will only succeed if the supplied LastModifiedOn date matches the LastModifiedOn date for the mass operation within the system.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Object Type and Mass Operation exist.</param>
            <param name="massOperationID">The ArtifactID of the Mass Operation.</param>
            <param name="massOperationRequest">The data about the mass operation being updated.</param>
            <param name="lastModifiedOn">The exact time the agent was last modified on.</param>
            /// <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.MassOperation.IMassOperationManager.UpdateAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.MassOperation.Models.EventHandlerMassOperationRequest)">
            <summary>
            Updates an event handler mass operation.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Object Type and Mass Operation exist.</param>
            <param name="massOperationID">The ArtifactID of the Mass Operation.</param>
            <param name="massOperationRequest">The data about the mass operation being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.MassOperation.IMassOperationManager.UpdateAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.MassOperation.Models.EventHandlerMassOperationRequest,System.DateTime)">
            <summary>
            Updates an event handler mass operation. The request will only succeed if the supplied LastModifiedOn date matches the LastModifiedOn date for the mass operation within the system.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Object Type and Mass Operation exist.</param>
            <param name="massOperationID">The ArtifactID of the Mass Operation.</param>
            <param name="massOperationRequest">The data about the mass operation being updated.</param>
            <param name="lastModifiedOn">The exact time the agent was last modified on.</param>
            /// <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.MassOperation.IMassOperationManager.DeleteAsync(System.Int32,System.Int32)">
            <summary>
            Deletes a mass operation.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Object Type and Mass Operation exist.</param>
            <param name="massOperationID">The ArtifactID of the Mass Operation.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.MassOperation.IMassOperationManager.GetAvailableObjectTypeAsync(System.Int32)">
            <summary>
            Reads all object types available for mass operations.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace.</param>
            <returns>A list of objects types.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.MassOperation.IMassOperationManager.GetAvailableEventHandlersAsync(System.Int32)">
            <summary>
            Reads all available event handlers.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the event handlers exist.</param>
            <returns>A list of objects containing data about the requested event handlers.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.MassOperation.IMassOperationManager.GetAvailableLayoutsAsync(System.Int32,Relativity.Services.Interfaces.Shared.Models.ObjectTypeIdentifier)">
            <summary>
            Reads all layouts for a given object type.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the Object Type and Layout exist.</param>
            <param name="objectType">The identifier for the Object Type.</param>
            <returns>A list of objects containing data about the requested layouts.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.MassOperation.IMassOperationModule">
            <summary>
            Mass Operation Module Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.MassOperation.MassOperationConstants">
            <summary>
            Provides routing information about URLs used by the Mass Operation Manager service.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.MassOperation.MassOperationConstants.CUSTOM_PAGE_BASE_SERVICE_ROUTE">
            <summary>
            The base URI path for the service when referencing custom page mass operations.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.MassOperation.MassOperationConstants.CUSTOM_PAGE_SERVICE_ROUTE">
            <summary>
            The name of a route in the URL used in a request to the service when referencing custom page mass operations.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.MassOperation.MassOperationConstants.EVENT_HANDLER_BASE_SERVICE_ROUTE">
            <summary>
            The base URI path for the service when referencing event handler mass operations.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.MassOperation.MassOperationConstants.EVENT_HANDLER_SERVICE_ROUTE">
            <summary>
            The name of a route in the URL used in a request to the service when referencing event handler mass operations.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.MassOperation.MassOperationConstants.MASS_OPERATION_MODULE_NAME">
            <summary>
            The prefix used for module called during service requests.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.MassOperation.Models.CustomPageMassOperationRequest">
            <summary>
            Represents a DTO used as a request for creating or updating a custom page mass operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.CustomPageMassOperationRequest.Name">
            <summary>
            Gets or sets the name of the mass operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.CustomPageMassOperationRequest.ObjectType">
            <summary>
            Gets or sets the parent object type of the mass operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.CustomPageMassOperationRequest.RelativityApplications">
            <summary>
            Gets or sets the list of identifiers of associated Relativity Applications for the mass operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.CustomPageMassOperationRequest.Url">
            <summary>
            Gets or sets the URL of the custom page of the mass operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.CustomPageMassOperationRequest.PopupHeight">
            <summary>
            Gets or sets the popup height of the custom page of the mass operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.CustomPageMassOperationRequest.PopupWidth">
            <summary>
            Gets or sets the popup width of the custom page of the mass operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.CustomPageMassOperationRequest.OpenInModal">
            <summary>
            If true, the custom page mass operation will open in a modal. If false, the custom page mass operation will open in a pop-up.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.MassOperation.Models.CustomPageMassOperationRequest.#ctor">
            <summary>
            Default constructor for the request, does not instantiate any properties.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.MassOperation.Models.CustomPageMassOperationRequest.#ctor(Relativity.Services.Interfaces.MassOperation.Models.MassOperationResponse)">
            <summary>
            Constructs an CustomPageMassOperationRequest based on the read result of a mass operation.
            </summary>
            <param name="response">Read result of a mass operation with data to populate request.</param>
        </member>
        <member name="T:Relativity.Services.Interfaces.MassOperation.Models.EventHandlerMassOperationRequest">
            <summary>
            Represents a DTO used as a request for creating or updating an event handler mass operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.EventHandlerMassOperationRequest.Name">
            <summary>
            Gets or sets the name of the mass operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.EventHandlerMassOperationRequest.ObjectType">
            <summary>
            Gets or sets the parent object type of the mass operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.EventHandlerMassOperationRequest.RelativityApplications">
            <summary>
            Gets or sets the list of identifiers of associated Relativity Applications for the mass operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.EventHandlerMassOperationRequest.EventHandlerID">
            <summary>
            Gets or sets the event handler ID of the mass operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.EventHandlerMassOperationRequest.Layout">
            <summary>
            Gets or sets the layout identifier of the mass operation.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.MassOperation.Models.EventHandlerMassOperationRequest.#ctor">
            <summary>
            Default constructor for the request, does not instantiate any properties.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.MassOperation.Models.EventHandlerMassOperationRequest.#ctor(Relativity.Services.Interfaces.MassOperation.Models.MassOperationResponse)">
            <summary>
            Constructs an EventHandlerMassOperationRequest based on the read result of a mass operation.
            </summary>
            <param name="response">Read result of a mass operation with data to populate request.</param>
        </member>
        <member name="T:Relativity.Services.Interfaces.MassOperation.Models.MassOperationEventHandlerResponse">
            <summary>
            Represents the results of a read operation on an event handler for a mass operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.MassOperationEventHandlerResponse.Application">
            <summary>
            Gets the identifier for the application that the event handler is associated with.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.MassOperationEventHandlerResponse.EventHandlerID">
            <summary>
            Gets the ID of the event handler. This ID does not come from the artifact table.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.MassOperationEventHandlerResponse.AssemblyName">
            <summary>
            Gets the assembly name of the event handler.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.MassOperationEventHandlerResponse.ClassName">
            <summary>
            Gets the class name of the event handler.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.MassOperationEventHandlerResponse.CompanyName">
            <summary>
            Gets the name of the company that made the event handler.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.MassOperationEventHandlerResponse.Description">
            <summary>
            Gets the description of the event handler.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.MassOperation.Models.MassOperationLayoutResponse">
            <summary>
            Represents the results of a read operation on a layout for a mass operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.MassOperationLayoutResponse.ObjectTypeName">
            <summary>
            Gets the name of the object type for the layout.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.MassOperation.Models.MassOperationResponse">
            <summary>
            Represents the results of a read operation on a mass operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.MassOperationResponse.Type">
            <summary>
            Gets the type of mass operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.MassOperationResponse.Name">
            <summary>
            Gets the name of the mass operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.MassOperationResponse.ObjectType">
            <summary>
            Gets the parent object type of the mass operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.MassOperationResponse.RelativityApplications">
            <summary>
            Gets the list of identifiers of associated Relativity Applications for the mass operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.MassOperationResponse.Url">
            <summary>
            Gets the URL of the custom page if the mass operation has a custom page type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.MassOperationResponse.PopupHeight">
            <summary>
            Gets the popup height of the custom page if the mass operation has a custom page type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.MassOperationResponse.PopupWidth">
            <summary>
            Gets the popup width of the custom page if the mass operation has a custom page type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.MassOperationResponse.EventHandlerID">
            <summary>
            Gets the event handler ID if the mass operation has an event handler type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.MassOperationResponse.ClassName">
            <summary>
            Gets the event handler class name if the mass operation has an event handler type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.MassOperationResponse.ApplicationName">
            <summary>
            Gets the event handler application name if the mass operation has an event handler type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.MassOperationResponse.Layout">
            <summary>
            Gets the layout identifier if the mass operation has an event handler type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.MassOperationResponse.CreatedOn">
            <summary>
            Gets the time the mass operation was created.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.MassOperationResponse.CreatedBy">
            <summary>
            Gets the name and artifactID of who created the mass operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.MassOperationResponse.LastModifiedBy">
            <summary>
            Gets the name and artifactID of who last edited the mass operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.MassOperationResponse.LastModifiedOn">
            <summary>
            Gets the time the mass operation was last edited.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.MassOperationResponse.Meta">
            <summary>
            Gets a list of unsupported and read-only properties on the current mass operation object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.MassOperationResponse.Actions">
            <summary>
            Gets a list of RESTful operations that a user has permissions to perform on the mass operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.MassOperation.Models.MassOperationResponse.OpenInModal">
            <summary>
            If true, the mass operation will open in a modal. If false, the mass operation will open in a pop-up.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.MassOperation.Models.MassOperationType">
            <summary>
            Enum to denote whether a mass operation is of the custom page or event handler type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.MassOperation.Models.MassOperationType.CustomPageMassOperation">
            <summary>
            Custom Page mass operation type
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.MassOperation.Models.MassOperationType.EventHandlerMassOperation">
            <summary>
            Event Handler mass operation type
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.Matter.IMatterManager.CreateAsync(System.Int32,Relativity.Services.Interfaces.Matter.Models.MatterRequest)">
            <summary>
            Creates a new instance of matter
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for matters.</param>
            <param name="matterRequest">A request object containing the data used to create the matter.</param>
            <returns>The artifact ID of the new matter.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Matter.IMatterManager.ReadAsync(System.Int32,System.Int32)">
            <summary>
            Retrieves basic metadata for a matter, including its name, client, number, and other properties.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for matters.</param>
            <param name="matterID">The artifact ID of the matter.</param>
            <returns>An object containing data about the requested matter.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Matter.IMatterManager.ReadAsync(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves extended metadata for a matter, including information about additional actions available.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for matters.</param>
            <param name="matterID">The artifact ID of the matter.</param>
            <param name="includeMetadata">A boolean value indicating whether to return extended matter metadata in the response.</param>
            <param name="includeActions">A boolean value indicating whether to return a list of operations available to the current user of this matter.</param>
            <returns>An object containing data about the requested matter.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Matter.IMatterManager.UpdateAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Matter.Models.MatterRequest)">
            <summary>
            Modifies the properties of a matter.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for matters.</param>
            <param name="matterID">The artifact ID of the matter.</param>
            <param name="matterRequest">the data about the matter being updated</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Matter.IMatterManager.UpdateAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Matter.Models.MatterRequest,System.DateTime)">
            <summary>
            Restricts updates to the properties of the matter to the date that it was last modified
            </summary>
            <remarks>You can restrict the update of a matter to the date that it was last modified by passing a DateTime object to this method. 
            The value for the DateTime object must match the LastModifiedOn date for the matter stored in Relativity. Otherwise, you receive an error, indicating that the object has been modified. </remarks>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for matters.</param>
            <param name="matterID">The artifact ID of the matter.</param>
            <param name="matterRequest">The data about the matter being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the matter.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Matter.IMatterManager.DeleteAsync(System.Int32,System.Int32)">
            <summary>
            Deletes a matter.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for matters.</param>
            <param name="matterID">The artifact ID of the matter to delete.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Matter.IMatterManager.GetAvailableClientsAsync(System.Int32)">
            <summary>
            Retrieves a list of all clients in a Relativity environment.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for matters.</param>
            <returns>A list of objects containing information about the clients.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Matter.IMatterManager.GetAvailableStatusesAsync(System.Int32)">
            <summary>
            Retrieves a list of all statuses in a Relativity environment.
            </summary>
            <param name="workspaceID">The value of -1 indicating the admin-level context is always required as the workspace identifier for matters.</param>
            <returns>A list of objects containing information about the statuses.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.Matter.Models.MatterRequest">
            <summary>
            Represents a DTO used as a request for creating or updating a matter.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Matter.Models.MatterRequest.Client">
            <summary>
            Gets or sets the identifier for the client associated with the matter
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Matter.Models.MatterRequest.Status">
            <summary>
            Gets or sets the identifier for the status of the matter
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Matter.Models.MatterRequest.Name">
            <summary>
            Gets or sets the name of the matter
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Matter.Models.MatterRequest.Number">
            <summary>
            Gets or sets the number of the matter
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Matter.Models.MatterRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the matter.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Matter.Models.MatterRequest.Notes">
            <summary>
            Gets or sets an optional description or other information about the matter.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.Matter.Models.MatterRequest.#ctor">
            <summary>
            Initializes an instance of the MatterRequest class with all properties set to null.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Matter.Models.MatterResponse">
            <summary>
            Represents the results of a read operation on a matter.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Matter.Models.MatterResponse.Client">
            <summary>
            Gets the identifier for the client for a user with sufficient permissions.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Matter.Models.MatterResponse.Number">
            <summary>
            Gets the number of the matter that help identifies the matter
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Matter.Models.MatterResponse.Status">
            <summary>
            Gets the identifier for the status of the matter
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Matter.Models.MatterResponse.Keywords">
            <summary>
            Gets optional words or phrases used to describe the matter.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Matter.Models.MatterResponse.Notes">
            <summary>
            Gets optional words or phrase used to describe the matter.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Matter.Models.MatterResponse.Meta">
            <summary>
            Gets a list of unsupported and read-only properties on the current Matter object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Matter.Models.MatterResponse.Actions">
            <summary>
            Gets a list of RESTful operations that a user has permissions to perform on the agent.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Matter.Models.MatterResponse.CreatedOn">
            <summary>
            Gets the date and time when the matter was created.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Matter.Models.MatterResponse.CreatedBy">
            <summary>
            Gets the Artifact ID and name of the user who created the matter.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Matter.Models.MatterResponse.LastModifiedBy">
            <summary>
            Gets the Artifact ID and name of the user who recently updated the matter.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Matter.Models.MatterResponse.LastModifiedOn">
            <summary>
            Gets the date and time when the matter was most recently updated.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager">
            <summary>
            Exposes methods for creating, reading, updating, and deleting object rules, as well as various helper methods.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.DeleteAsync(System.Int32,System.Int32)">
            <summary>
            Deletes an object rule.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the object type should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleID">The Artifact ID of the object rule to delete.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.MassDeleteAsync(System.Int32,System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier})">
            <summary>
            Deletes multiple object rules.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the object type should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRules">A list of object identifiers for object rules to delete in a single transaction</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.ReadAsync(System.Int32,System.Int32)">
            <summary>
            Retrieves basic metadata for an object rule, including its name, associated object type, behavior, and other properties.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the object type should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleID">The Artifact ID of the object rule.</param>
            <returns>An object containing data about the requested object rule.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.ReadAsync(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves extended metadata for an object rule, including information about additional actions available.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the object type should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleID">The Artifact ID of the object rule.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended object rule metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user of this object rule.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.GetAvailableAssociatedObjectsAsync(System.Int32,System.Int32)">
            <summary>
            Gets a list of all associated object types available to have sub list visibility rules set on them.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the object type exists. Use -1 to indicate the admin workspace.</param>
            <param name="objectTypeID">The Artifact ID of the object type.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.GetAvailableAssociatedObjectsAsync(System.Int32,Relativity.Services.Interfaces.Shared.Models.ObjectTypeIdentifier)">
            <summary>
            Gets a list of all associated object types available to have sub list visibility rules set on them.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the object type exists. Use -1 to indicate the admin workspace.</param>
            <param name="objectTypeID">The identifying data of the object type.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.GetAvailableSingleChoiceFieldsAsync(System.Int32,System.Int32)">
            <summary>
            Gets a list of all single choices fields available for an existing object type.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the object type exists. Use -1 to indicate the admin workspace.</param>
            <param name="objectTypeID">The Artifact ID of the object type.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.GetAvailableChoiceFieldsAsync(System.Int32,System.Int32)">
            <summary>
            Gets a list of all choices fields available for an existing object type.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the object type exists. Use -1 to indicate the admin workspace.</param>
            <param name="objectTypeID">The Artifact ID of the object type.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.GetAvailableSingleChoiceFieldsAsync(System.Int32,Relativity.Services.Interfaces.Shared.Models.ObjectTypeIdentifier)">
            <summary>
            Gets a list of all single choices fields available for an existing object type.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the object type exists. Use -1 to indicate the admin workspace.</param>
            <param name="objectTypeID">The identifying data of the object type.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.GetAvailableChoiceFieldsAsync(System.Int32,Relativity.Services.Interfaces.Shared.Models.ObjectTypeIdentifier)">
            <summary>
            Gets a list of all choices fields available for an existing object type.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the object type exists. Use -1 to indicate the admin workspace.</param>
            <param name="objectTypeID">The identifying data of the object type.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.GetAvailableChoicesAsync(System.Int32,System.Int32)">
            <summary>
            Gets a list of all choices available for an existing choice field.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the field exists. Use -1 to indicate the admin workspace.</param>
            <param name="fieldID">The Artifact ID of the field.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.GetAvailableLayoutsAsync(System.Int32,System.Int32)">
            <summary>
            Gets a list of all layouts available for an existing object type.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the object type exists. Use -1 to indicate the admin workspace.</param>
            <param name="objectTypeID">The Artifact ID of the object type.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.GetAvailableLayoutsAsync(System.Int32,Relativity.Services.Interfaces.Shared.Models.ObjectTypeIdentifier)">
            <summary>
            Gets a list of all layouts available for an existing object type.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the object type exists. Use -1 to indicate the admin workspace.</param>
            <param name="objectTypeID">The identifying data of the object type.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.CreateChoiceBehaviorAsync(System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.ChoiceBehaviorRuleRequest)">
            <summary>
            Adds a single choice behavior object rule to Relativity.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the choice behavior object rule should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleRequest">The data about the choice behavior object rule being created.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.UpdateChoiceBehaviorAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.ChoiceBehaviorRuleRequest)">
            <summary>
            Modifies the properties of a choice behavior object rule.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the choice behavior object rule should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleID">The Artifact ID of the choice behavior object rule.</param>
            <param name="objectRuleRequest">The data about the choice behavior object rule being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.UpdateChoiceBehaviorAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.ChoiceBehaviorRuleRequest,System.DateTime)">
            <summary>
            Restricts updates to the properties of the choice behavior object rule to the date that it was last modified.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the choice behavior object rule should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleID">The Artifact ID of the choice behavior object rule.</param>
            <param name="objectRuleRequest">The data about the choice behavior object rule being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the choice behavior object rule.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.CreateCustomSingleObjectAddLinkVisibilityAsync(System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.CustomSingleObjectAddLinkVisibilityRuleRequest)">
            <summary>
            Adds a single custom single object add link visibility object rule to Relativity.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the custom single object add link visibility object rule should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleRequest">The data about the custom single object add link visibility object rule being created.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.UpdateCustomSingleObjectAddLinkVisibilityAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.CustomSingleObjectAddLinkVisibilityRuleRequest)">
            <summary>
            Modifies the properties of a custom single object add link visibility object rule .
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the custom single object add link visibility object rule should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleID">The Artifact ID of the custom single object add link visibility object rule.</param>
            <param name="objectRuleRequest">The data about the custom single object add link visibility object rule being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.UpdateCustomSingleObjectAddLinkVisibilityAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.CustomSingleObjectAddLinkVisibilityRuleRequest,System.DateTime)">
            <summary>
            Restricts updates to the properties of the custom single object add link visibility object rule to the date that it was last modified.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the custom single object add link visibility object rule should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleID">The Artifact ID of the custom single object add link visibility object rule.</param>
            <param name="objectRuleRequest">The data about the custom single object add link visibility object rule being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the custom single object add link visibility object rule.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.CreateDefaultLayoutAsync(System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.DefaultLayoutRuleRequest)">
            <summary>
            Adds a single default layout object rule to Relativity.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the default layout object rule should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleRequest">The data about the default layout object rule being created.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.UpdateDefaultLayoutAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.DefaultLayoutRuleRequest)">
            <summary>
            Modifies the properties of a default layout object rule.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the default layout object rule should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleID">The Artifact ID of the default layout object rule.</param>
            <param name="objectRuleRequest">The data about the default layout object rule being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.UpdateDefaultLayoutAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.DefaultLayoutRuleRequest,System.DateTime)">
            <summary>
            Restricts updates to the properties of the default layout object rule to the date that it was last modified.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the default layout object rule should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleID">The Artifact ID of the default layout object rule.</param>
            <param name="objectRuleRequest">The data about the default layout object rule being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the default layout object rule.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.CreateDefaultLayoutOnNewAsync(System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.DefaultLayoutOnNewRuleRequest)">
            <summary>
            Adds a single default layout on new object rule to Relativity.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the default layout on new object rule should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleRequest">The data about the default layout on new object rule being created.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.UpdateDefaultLayoutOnNewAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.DefaultLayoutOnNewRuleRequest)">
            <summary>
            Modifies the properties of a default layout on new object rule.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the default layout on new object rule should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleID">The Artifact ID of the default layout on new object rule.</param>
            <param name="objectRuleRequest">The data about the default layout on new object rule being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.UpdateDefaultLayoutOnNewAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.DefaultLayoutOnNewRuleRequest,System.DateTime)">
            <summary>
            Restricts updates to the properties of the default layout on new object rule to the date that it was last modified.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the default layout on new object rule should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleID">The Artifact ID of the default layout on new object rule.</param>
            <param name="objectRuleRequest">The data about the default layout on new object rule being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the default layout on new object rule.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.CreateGlobalButtonVisibilityAsync(System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.GlobalButtonVisibilityRuleRequest)">
            <summary>
            Adds a single global button visibility object rule to Relativity.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the global button visibility object rule should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleRequest">The data about the global button visibility object rule being created.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.UpdateGlobalButtonVisibilityAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.GlobalButtonVisibilityRuleRequest)">
            <summary>
            Modifies the properties of a global button visibility object rule.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the global button visibility object rule should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleID">The Artifact ID of the global button visibility object rule.</param>
            <param name="objectRuleRequest">The data about the global button visibility object rule being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.UpdateGlobalButtonVisibilityAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.GlobalButtonVisibilityRuleRequest,System.DateTime)">
            <summary>
            Restricts updates to the properties of the global button visibility object rule to the date that it was last modified.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the global button visibility object rule should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleID">The Artifact ID of the global button visibility object rule.</param>
            <param name="objectRuleRequest">The data about the global button visibility object rule being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the global button visibility object rule.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.CreateMassActionVisibilityAsync(System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.MassActionVisibilityRuleRequest)">
            <summary>
            Adds a single mass action visibility object rule to Relativity.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the mass action visibility object rule should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleRequest">The data about the mass action visibility object rule being created.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.UpdateMassActionVisibilityAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.MassActionVisibilityRuleRequest)">
            <summary>
            Modifies the properties of a mass action visibility object rule.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the object type should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleID">The Artifact ID of the mass action visibility object rule.</param>
            <param name="objectRuleRequest">The data about the mass action visibility object rule being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.UpdateMassActionVisibilityAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.MassActionVisibilityRuleRequest,System.DateTime)">
            <summary>
            Restricts updates to the properties of the mass action visibility object rule to the date that it was last modified.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the object rule should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleID">The Artifact ID of the object rule.</param>
            <param name="objectRuleRequest">The data about the mass action visibility object rule being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the mass action visibility object rule.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.CreateNewButtonOverrideAsync(System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.NewButtonOverrideRuleRequest)">
            <summary>
            Adds a single new button override object rule to Relativity.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the new button override object rule should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleRequest">The data about the new button override object rule being created.</param>
            <returns>The Artifact ID of the new new button override object rule.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.UpdateNewButtonOverrideAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.NewButtonOverrideRuleRequest)">
            <summary>
            Modifies the properties of a new button override object rule.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the new button override object rule should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleID">The Artifact ID of the new button override object rule.</param>
            <param name="objectRuleRequest">The data about the new button override object rule being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.UpdateNewButtonOverrideAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.NewButtonOverrideRuleRequest,System.DateTime)">
            <summary>
            Restricts updates to the properties of the new button override object rule to the date that it was last modified.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the new button override object rule should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleID">The Artifact ID of the new button override object rule.</param>
            <param name="objectRuleRequest">The data about the new button override object rule being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the new button override object rule.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.CreateOverrideEditLinkAsync(System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.OverrideEditLinkRuleRequest)">
            <summary>
            Adds a single override edit link object rule to Relativity.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the override edit link object rule should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleRequest">The data about the override edit link object rule being created.</param>
            <returns>The Artifact ID of the new override edit link object rule.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.UpdateOverrideEditLinkAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.OverrideEditLinkRuleRequest)">
            <summary>
            Modifies the properties of an single override edit link object rule.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the override edit link object rule should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleID">The Artifact ID of the override edit link object rule.</param>
            <param name="objectRuleRequest">The data about the override edit link object rule being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.UpdateOverrideEditLinkAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.OverrideEditLinkRuleRequest,System.DateTime)">
            <summary>
            Restricts updates to the properties of the single override edit link object rule to the date that it was last modified.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the override edit link object rule should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleID">The Artifact ID of the override edit link object rule.</param>
            <param name="objectRuleRequest">The data about the override edit link object rule being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the override edit link object rule.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.CreateOverrideViewLinkAsync(System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.OverrideViewLinkRuleRequest)">
            <summary>
            Adds a single override view link object rule to Relativity.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the override view link object rule should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleRequest">The data about the override view link object rule being created.</param>
            <returns>The Artifact ID of the new override view link object rule.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.UpdateOverrideViewLinkAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.OverrideViewLinkRuleRequest)">
            <summary>
            Modifies the properties of an override view link object rule.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the override view link object rule should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleID">The Artifact ID of the override view link object rule.</param>
            <param name="objectRuleRequest">The data about the override view link object rule being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.UpdateOverrideViewLinkAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.OverrideViewLinkRuleRequest,System.DateTime)">
            <summary>
            Restricts updates to the properties of the override view link object rule to the date that it was last modified.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the override view link object rule should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleID">The Artifact ID of the override view link object rule.</param>
            <param name="objectRuleRequest">The data about the override view link object rule being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the override view link object rule.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.CreateSubListButtonVisibilityAsync(System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.SubListButtonVisibilityRuleRequest)">
            <summary>
            Adds a single sub list button visibility object rule to Relativity.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the sub list button visibility object rule should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleRequest">The data about the sub list button visibility object rule being created.</param>
            <returns>The Artifact ID of the new sub list button visibility object rule.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.UpdateSubListButtonVisibilityAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.SubListButtonVisibilityRuleRequest)">
            <summary>
            Modifies the properties of a sub list button visibility object rule.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the sub list button visibility object rule should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleID">The Artifact ID of the sub list button visibility object rule.</param>
            <param name="objectRuleRequest">The data about the sub list button visibility object rule being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.IObjectRuleManager.UpdateSubListButtonVisibilityAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.ObjectRules.Models.SubListButtonVisibilityRuleRequest,System.DateTime)">
            <summary>
            Restricts updates to the properties of the sub list button visibility object rule to the date that it was last modified.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the sub list button visibility object rule should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectRuleID">The Artifact ID of the sub list button visibility object rule.</param>
            <param name="objectRuleRequest">The data about the sub list button visibility object rule being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the sub list button visibility object rule.</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ObjectRules.IObjectRuleModule">
            <summary>
            Object Rule Module
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ObjectRules.Models.BaseObjectRuleRequest">
            <summary>
            Represents a DTO used as the base request for creating or updating an object rule.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.BaseObjectRuleRequest.Name">
            <summary>
            Gets or sets the name for the object rule.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.BaseObjectRuleRequest.ObjectType">
            <summary>
            Gets or sets the identifier for the object type the object rule is associated with.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.BaseObjectRuleRequest.RelativityApplications">
            <summary>
            Gets or sets a list of identifiers of associated Relativity Applications for the object rule.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ObjectRules.Models.ChoiceBehaviorRuleRequest">
            <summary>
            Represents a DTO used as a request for creating or updating a choice behavior object rule.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ChoiceBehaviorRuleRequest.AllowAdd">
            <summary>
            Gets or sets a Boolean value indicating whether new choices can be added by a user to the selected field when editing instances of the object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ChoiceBehaviorRuleRequest.AllowDelete">
            <summary>
            Gets or sets a Boolean value indicating whether choices can be deleted by a user to the selected field when editing instances of the object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ChoiceBehaviorRuleRequest.AllowRename">
            <summary>
            Gets or sets a Boolean value indicating whether choices can be renamed by a user to the selected field when editing instances of the object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ChoiceBehaviorRuleRequest.Field">
            <summary>
            Gets or sets the identifier for the choice field.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ObjectRules.Models.CustomSingleObjectAddLinkVisibilityRuleRequest">
            <summary>
            Represents a DTO used as a request for creating or updating a custom single object add link visibility behavior object rule.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.CustomSingleObjectAddLinkVisibilityRuleRequest.ShowAddLink">
            <summary>
            Gets or sets a Boolean value indicating whether an add link will be visible to users for the object type.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ObjectRules.Models.DefaultLayoutOnNewRuleRequest">
            <summary>
            Represents a DTO used as a request for creating or updating a default layout on new object rule.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.DefaultLayoutOnNewRuleRequest.Layout">
            <summary>
            Gets or sets the identifier for the default layout when creating new instances of the object type.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ObjectRules.Models.DefaultLayoutRuleRequest">
            <summary>
            Represents a DTO used as a request for creating or updating a default layout object rule.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.DefaultLayoutRuleRequest.Field">
            <summary>
            Gets or sets the identifier for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.DefaultLayoutRuleRequest.Layout">
            <summary>
            Gets or sets the identifier for the layout.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.DefaultLayoutRuleRequest.Choice">
            <summary>
            Gets or sets the identifier for the choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.DefaultLayoutRuleRequest.AllowLayoutChange">
            <summary>
            Gets or sets a Boolean value indicating whether the user can switch to a different layout.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ObjectRules.Models.GlobalButtonVisibilityRuleRequest">
            <summary>
            Represents a DTO used as a request for creating or updating a global button visibility object rule.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.GlobalButtonVisibilityRuleRequest.ShowNew">
            <summary>
            Gets or sets a Boolean value indicating whether the new button will be visible to users for the object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.GlobalButtonVisibilityRuleRequest.ShowDelete">
            <summary>
            Gets or sets a Boolean value indicating whether the delete button will be visible to users for the object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.GlobalButtonVisibilityRuleRequest.ShowLink">
            <summary>
            Gets or sets a Boolean value indicating whether the link button will be visible to users for the object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.GlobalButtonVisibilityRuleRequest.ShowUnlink">
            <summary>
            Gets or sets a Boolean value indicating whether the unlink button will be visible to users for the object type.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ObjectRules.Models.ListType">
            <summary>
            Enum for all the different list types.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.ObjectRules.Models.ListType.ChildObject">
            <summary>
            Indicates the list is used to associate child objects.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.ObjectRules.Models.ListType.MultipleObjectField">
            <summary>
            Indicates the list is used to associate fields of type multiple object.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.ObjectRules.Models.ListType.SingleObjectField">
            <summary>
            Indicates the list is used to associate fields of type single object.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ObjectRules.Models.MassActionVisibilityRuleRequest">
            <summary>
            Represents a DTO used as a request for creating or updating a mass action visibility object rule.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.MassActionVisibilityRuleRequest.ShowMassCopy">
            <summary>
            Gets or sets a Boolean value indicating whether mass copy will be visible to users for the object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.MassActionVisibilityRuleRequest.ShowMassEdit">
            <summary>
            Gets or sets a Boolean value indicating whether mass edit will be visible to users for the object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.MassActionVisibilityRuleRequest.ShowMassReplace">
            <summary>
            Gets or sets a Boolean value indicating whether mass replace will be visible to users for the object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.MassActionVisibilityRuleRequest.ShowMassTally">
            <summary>
            Gets or sets a Boolean value indicating whether mass tally will be visible to users for the object type.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ObjectRules.Models.NewButtonOverrideRuleRequest">
            <summary>
            Represents a DTO used as a request for creating or updating a new button override object rule.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.NewButtonOverrideRuleRequest.Url">
            <summary>
            Gets or sets a URL which will override the new button url.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleBehavior">
            <summary>
            Indicates the behavior of an object rule response.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleBehavior.DefaultLayout">
            <summary>
            Indicates the default layout behavior.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleBehavior.CustomSingleObjectAddLinkVisibility">
            <summary>
            Indicates the custom single object add link visibility behavior.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleBehavior.DefaultLayoutOnNew">
            <summary>
            Indicates the default layout on new behavior.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleBehavior.GlobalButtonVisibility">
            <summary>
            Indicates the global button visibility behavior.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleBehavior.MassActionVisibility">
            <summary>
            Indicates the mass action visibility behavior.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleBehavior.NewButtonOverride">
            <summary>
            Indicates the new button override behavior.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleBehavior.ChoiceBehavior">
            <summary>
            Indicates the choice behavior.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleBehavior.SubListButtonVisibility">
            <summary>
            Indicates the sub list button behavior.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleBehavior.OverrideViewLink">
            <summary>
            Indicates the override view link behavior.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleBehavior.OverrideEditLink">
            <summary>
            Indicates the override edit link behavior.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleResponse">
            <summary>
            Represents the results of a read operation on an object rule.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleResponse.Behavior">
            <summary>
            Gets the object rule behaviour.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleResponse.Field">
            <summary>
            Gets or sets the identifier for the field on choice, default layout and sub list visibility behaviors.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleResponse.Layout">
            <summary>
            Gets or sets the identifier for the layout on default layout and default layout on new behaviors.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleResponse.Choice">
            <summary>
            Gets or sets the identifier for the choice on default layout and sub list visibility behaviors.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleResponse.SubListObject">
            <summary>
            Gets or sets the identifier for the object on sub list visibility behavior.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleResponse.AllowAdd">
            <summary>
            Gets or sets a Boolean value indicating whether new choices can be added by a user to the selected field when editing instances of the object type on the choice behavior.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleResponse.AllowDelete">
            <summary>
            Gets or sets a Boolean value indicating whether choices can be deleted by a user to the selected field when editing instances of the object type on the choice behavior.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleResponse.AllowRename">
            <summary>
            Gets or sets a Boolean value indicating whether choices can be renamed by a user to the selected field when editing instances of the object type on the choice behavior.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleResponse.ShowDelete">
            <summary>
            Gets or sets a Boolean value indicating whether the delete button will be visible to users on global button and sub list visibility behaviors.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleResponse.ShowAddLink">
            <summary>
            Gets or sets a Boolean value indicating whether an add link will be visible to users for the object type on the custom single object add link visibility behavior.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleResponse.AllowLayoutChange">
            <summary>
            Gets or sets a Boolean value indicating whether the user can switch to a different layout on the default layout behavior.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleResponse.ShowNew">
            <summary>
            Gets or sets a Boolean value indicating whether the new button will be visible to users for the object type on global button visbility and sub list visibility behavors.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleResponse.ShowLink">
            <summary>
            Gets or sets a Boolean value indicating whether the link button will be visible to users for the object type on global button visbility and sub list visibility behavors.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleResponse.ShowUnlink">
            <summary>
            Gets or sets a Boolean value indicating whether the unlink button will be visible to users for the object type on global button visbility and sub list visibility behavors.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleResponse.ShowMassCopy">
            <summary>
            Gets or sets a Boolean value indicating whether mass copy will be visible to users for the object type on the mass action visibility behavior.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleResponse.ShowMassEdit">
            <summary>
            Gets or sets a Boolean value indicating whether mass edit will be visible to users for the object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleResponse.ShowMassReplace">
            <summary>
            Gets or sets a Boolean value indicating whether mass replace will be visible to users for the object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleResponse.ShowMassTally">
            <summary>
            Gets or sets a Boolean value indicating whether mass tally will be visible to users for the object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleResponse.Url">
            <summary>
            Gets or sets the URL override for new button override, override edit link, and override view link behaviors.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleResponse.RelativityApplications">
            <summary>
            Gets or sets a list of identifiers of associated Relativity Applications for the object rule.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleResponse.ObjectType">
            <summary>
            Gets the identifier for the object type associated with the object rule.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleResponse.Meta">
            <summary>
            Gets a list of unsupported and read-only properties on the current object rule object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleResponse.Actions">
            <summary>
            Gets a list of RESTful operations that a user has permissions to perform on the object rule.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleResponse.LastModifiedOn">
            <summary>
            Gets the date and time when the object rule was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleResponse.LastModifiedBy">
            <summary>
            Gets the Artifact ID and name of the user who recently updated the object rule.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleResponse.CreatedOn">
            <summary>
            Gets the date and time when the object rule was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleResponse.CreatedBy">
            <summary>
            Gets the Artifact ID and name of the user who created the object rule.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ObjectRules.Models.OverrideEditLinkRuleRequest">
            <summary>
            Represents a DTO used as a request for creating or updating an override edit link object rule.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.OverrideEditLinkRuleRequest.Url">
            <summary>
            Gets or sets a URL which will override the edit link on Relativity item lists.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ObjectRules.Models.OverrideViewLinkRuleRequest">
            <summary>
            Represents a DTO used as a request for creating or updating an override view link object rule.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.OverrideViewLinkRuleRequest.Url">
            <summary>
            Gets or sets a URL which will override the view link on Relativity item lists.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ObjectRules.Models.SubListButtonVisibilityRuleRequest">
            <summary>
            Represents a DTO used as a request for creating or updating a sub list button visibility object rule.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.SubListButtonVisibilityRuleRequest.Field">
            <summary>
            Gets or sets the identifier for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.SubListButtonVisibilityRuleRequest.Choice">
            <summary>
            Gets or sets the identifier for the choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.SubListButtonVisibilityRuleRequest.SubListObject">
            <summary>
            Gets or sets the identifier for the sub list object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.SubListButtonVisibilityRuleRequest.ShowNew">
            <summary>
            Gets or sets a Boolean value indicating whether the new button will be visible to users for the sub list object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.SubListButtonVisibilityRuleRequest.ShowDelete">
            <summary>
            Gets or sets a Boolean value indicating whether the delete button will be visible to users for the sub list object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.SubListButtonVisibilityRuleRequest.ShowLink">
            <summary>
            Gets or sets a Boolean value indicating whether the link button will be visible to users for the sub list object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.SubListButtonVisibilityRuleRequest.ShowUnlink">
            <summary>
            Gets or sets a Boolean value indicating whether the unlink button will be visible to users for the sub list object type.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.Models.SubListButtonVisibilityRuleRequest.#ctor">
            <summary>
            Initializes an instance of the SubListButtonVisibilityRuleRequest class with all properties set to their default values.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectRules.Models.SubListButtonVisibilityRuleRequest.#ctor(Relativity.Services.Interfaces.ObjectRules.Models.ObjectRuleResponse)">
            <summary>
            Initializes an instance of the SubListButtonVisibilityRuleRequest class with a response object, which is useful for chaining commands.
            </summary>
            <param name="objectRuleResponse">Object rule response to convert to a request.</param>
        </member>
        <member name="T:Relativity.Services.Interfaces.ObjectRules.Models.SubListObjectIdentifier">
            <summary>
            Represents a DTO with the information that identifies the sub list object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.SubListObjectIdentifier.ArtifactID">
            <summary>
            Gets or sets the artifact id.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.SubListObjectIdentifier.Guids">
            <summary>
            Gets or sets the guids.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.SubListObjectIdentifier.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.SubListObjectIdentifier.ArtifactTypeID">
            <summary>
            Gets or sets the artifact type id.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.SubListObjectIdentifier.ListType">
            <summary>
            Gets or sets the list type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectRules.Models.SubListObjectIdentifier.ObjectTypeName">
            <summary>
            Gets or sets the object type name.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ObjectType.IObjectTypeManager">
            <summary>
            Exposes methods for creating, reading, updating, and deleting object types, as well as various helper methods. 
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectType.IObjectTypeManager.CreateAsync(System.Int32,Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeRequest)">
            <summary>
            Adds a single object type to Relativity.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the object type should be created. Use -1 to indicate the admin workspace.</param>
            <param name="objectTypeRequest">A request object containing the data used to create the object type.</param>
            <returns>The Artifact ID of the new object type.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectType.IObjectTypeManager.ReadAsync(System.Int32,System.Int32)">
            <summary>
            Retrieves basic metadata for an object type, including its name, parent object type, and other properties.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the object type exists. Use -1 to indicate the admin workspace.</param>
            <param name="objectTypeID">The Artifact ID of the object type.</param>
            <returns>An object containing data about the requested object type.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectType.IObjectTypeManager.ReadAsync(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves extended metadata for an object type, including information about additional actions available.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the object type exists. Use -1 to indicate the admin workspace.</param>
            <param name="objectTypeID">The Artifact ID of the object type.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended object type metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user of this object type.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectType.IObjectTypeManager.UpdateAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeRequest)">
            <summary>
            Modifies the properties of an object type.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the object type exists. Use -1 to indicate the admin workspace.</param>
            <param name="objectTypeID">The Artifact ID of the object type.</param>
            <param name="objectTypeRequest">The data about the object type being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectType.IObjectTypeManager.UpdateAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeRequest,System.DateTime)">
            <summary>
            Restricts updates to the properties of the object type to the date that it was last modified
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the object type exists. Use -1 to indicate the admin workspace.</param>
            <param name="objectTypeID">The Artifact ID of the object type.</param>
            <param name="objectTypeRequest">The data about the object type being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the object type.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectType.IObjectTypeManager.DeleteAsync(System.Int32,System.Int32)">
            <summary>
            Deletes an object type.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the object type exists. Use -1 to indicate the admin workspace.</param>
            <param name="objectTypeID">The Artifact ID of the object type to delete.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectType.IObjectTypeManager.GetAvailableParentObjectTypesAsync(System.Int32)">
            <summary>
            Gets a list of all object types available to be a parent object type for a given workspace.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace to view all the available parent object types. Use -1 to indicate the admin workspace.</param>
            <returns>All oject types available to be parents in a workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ObjectType.IObjectTypeManager.GetDependencyList(System.Int32,System.Int32)">
            <summary>
            Gets a list of all dependencies for an existing object type.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the requested object type exists. Use -1 to indicate the admin workspace.</param>
            <param name="objectTypeID">The ArtifactID of the object type to view dependent objects.</param>
            <returns>All the objects that are dependent on the given object type.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ObjectType.IObjectTypeModule">
            <summary>
            Object Type Module
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeRequest">
            <summary>
            Represents a DTO used as a request for creating or updating an object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeRequest.Name">
            <summary>
            Gets or sets the name for the object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeRequest.ParentObjectType">
            <summary>
            Gets or sets the identifier for the parent object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeRequest.CopyInstancesOnCaseCreation">
            <summary>
            Gets or sets a Boolean value indicating whether instances of this object type will be copied when the workspace is used as a template for another.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeRequest.CopyInstancesOnParentCopy">
            <summary>
            Gets or sets a Boolean value indicating whether instances of this object type will be copied when the parent of those instances are copied.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeRequest.EnableSnapshotAuditingOnDelete">
            <summary>
            Gets or sets a Boolean value indicating whether Relativity will capture field values on instance delete.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeRequest.PersistentListsEnabled">
            <summary>
            Gets or sets a Boolean value indicating whether users can save lists of this object instances.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeRequest.PivotEnabled">
            <summary>
            Gets or sets a Boolean value indicating whether pivot funtionality is enabled.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeRequest.SamplingEnabled">
            <summary>
            Gets or sets a Boolean value indicating whether sampling funtionality is enabled.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeRequest.UseRelativityForms">
            <summary>
            Gets or sets a nullable Boolean value indicating whether or not Layouts for object instances of this type will be shown in Relativity Forms
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeRequest.RelativityApplications">
            <summary>
            Gets or sets a list of identifiers of associated Relativity Applications for the object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeRequest.Notes">
            <summary>
            Gets or sets an optional description or other information about the object type.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeResponse">
            <summary>
            Represents the results of a read operation on an object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeResponse.ArtifactTypeID">
            <summary>
            Gets the artifact type id for the object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeResponse.ParentObjectType">
            <summary>
            Gets the identifier for the parent object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeResponse.CopyInstancesOnCaseCreation">
            <summary>
            Gets or sets a Boolean value indicating whether instances of this object type will be copied when the workspace is used as a template for another.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeResponse.CopyInstancesOnParentCopy">
            <summary>
            Gets or sets a Boolean value indicating whether instances of this object type will be copied when the parent of those instances are copied.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeResponse.EnableSnapshotAuditingOnDelete">
            <summary>
            Gets or sets a Boolean value indicating whether Relativity will capture field values on instance delete.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeResponse.IsDynamic">
            <summary>
            Gets or sets a Boolean value indicating whether the object type is dynamic.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeResponse.IsSystem">
            <summary>
            Gets or sets a Boolean value indicating whether the object type is system.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeResponse.IsExtensible">
            <summary>
            Gets or sets a Boolean value indicating whether the object type can have new event handlers, mass operations and object rules.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeResponse.IsViewEnabled">
            <summary>
            Gets or sets a Boolean value indicating whether the object type is view enabled.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeResponse.PersistentListsEnabled">
            <summary>
            Gets or sets a Boolean value indicating whether users can save lists of this object instances.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeResponse.PivotEnabled">
            <summary>
            Gets or sets a Boolean value indicating whether pivot funtionality is enabled.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeResponse.SamplingEnabled">
            <summary>
            Gets or sets a Boolean value indicating whether sampling funtionality is enabled.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeResponse.UseRelativityForms">
            <summary>
            Gets or sets a nullable Boolean value indicating whether or not Layouts for object instances of this type will be shown in Relativity Forms
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeResponse.FieldByteUsage">
            <summary>
            Gets the byte usage of all the fields associated with this object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeResponse.RelativityApplications">
            <summary>
            Gets or sets a list of identifiers of associated Relativity Applications for the object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeResponse.CreatedOn">
            <summary>
            Gets the date and time when the object type was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeResponse.CreatedBy">
            <summary>
            Gets the Artifact ID and name of the user who created the object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeResponse.LastModifiedBy">
            <summary>
            Gets the Artifact ID and name of the user who recently updated the object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeResponse.LastModifiedOn">
            <summary>
            Gets the date and time when the object type was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeResponse.Keywords">
            <summary>
            Gets optional words or phrase used to describe the object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeResponse.Notes">
            <summary>
            Gets optional words or phrase used to describe the object type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeResponse.Meta">
            <summary>
            Gets a list of unsupported and read-only properties on the current object type object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ObjectType.Models.ObjectTypeResponse.Actions">
            <summary>
            Gets a list of RESTful operations that a user has permissions to perform on the object type.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ObjectType.ObjectTypeConstants">
            <summary>
            Provides routing information about URLs used by the Object Type Manager service.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.ObjectType.ObjectTypeConstants.MODULE_PREFIX">
            <summary>
            The prefix used for module called during service requests.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.ObjectType.ObjectTypeConstants.SERVICE_MODULE_NAME">
            <summary>
            The name of the module called during service requests.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.ObjectType.ObjectTypeConstants.SERVICE_NAME">
            <summary>
            The name of the service.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.ObjectType.ObjectTypeConstants.SERVICE_ROUTE">
            <summary>
            The name of a route in the URL used in a request to the service.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.ObjectType.ObjectTypeConstants.OBJECT_TYPE_ID">
            <summary>
            The unique identifier for an object type used in a request.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.ObjectType.ObjectTypeConstants.BASE_SERVICE_ROUTE">
            <summary>
            The base URI path for the service.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager">
            <summary>
            Exposes methods for working with resource pool objects.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.CreateAsync(Relativity.Services.Interfaces.ResourcePool.Models.ResourcePoolRequest)">
            <summary>
            Adds a resource pool to Relativity.
            </summary>
            <param name="resourcePoolRequest">A request object containing the data used to create the resource pool.</param>
            <returns>An object containing data about the new resource pool.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.ReadAsync(System.Int32)">
            <summary>
            Retrieves metadata for a resource pool, including its name, associated client, and other properties.
            </summary>
            <param name="resourcePoolID">The Artifact ID of the resource pool.</param>
            <returns>An object containing data about the requested resource pool.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.ReadAsync(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves advanced metadata for a resource pool, including its name, associated client, and other properties.
            </summary>
            <param name="resourcePoolID">The Artifact ID of the resource pool.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended resource pool metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations eligible to the current user of this resource pool.</param>
            <returns>An object containing data about the requested resource pool.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourcePool.Models.ResourcePoolRequest)">
            <summary>
            Modifies properties of a resource pool.
            </summary>
            <param name="resourcePoolID">The Artifact ID of the resource pool.</param>
            <param name="resourcePoolRequest">The data about the resource pool being updated.</param>
            <returns>An object containing data about the updated resource pool.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourcePool.Models.ResourcePoolRequest,System.DateTime)">
            <summary>
            Modifies properties of a resource pool.
            </summary>
            <param name="resourcePoolID">The Artifact ID of the resource pool.</param>
            <param name="resourcePoolRequest">The data about the resource pool being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the resource pool.</param>
            <returns>An object containing data about the updated resource pool.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.DeleteAsync(System.Int32)">
            <summary>
            Deletes a resource pool.
            </summary>
            <param name="resourcePoolID">The Artifact ID of the resource pool.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.QueryResourcesAsync(System.Int32,System.String,Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32)">
            <summary>
            Performs a Query for resources of a given type that are associated with the resource pool.
            </summary>
            <param name="resourcePoolID">The Artifact ID of the resource pool.</param>
            <param name="resourceType">A string representation of the resource type.</param>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.QueryResourcesAsync(System.Int32,System.String,Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Performs a Query for resources of a given type that are associated with the resource pool and returns progress information.
            </summary>
            <param name="resourcePoolID">The Artifact ID of the resource pool.</param>
            <param name="resourceType">A string representation of the resource type.</param>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.QueryResourcesAsync(System.Int32,System.String,Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Performs a Query for resources of a given type that are associated with the resource pool, provides a token used for canceling the operation, and returns progress information.
            </summary>
            <param name="resourcePoolID">The Artifact ID of the resource pool.</param>
            <param name="resourceType">A string representation of the resource type.</param>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="cancel">A request to cancel the execution of a query for an object. </param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.QueryEligibleToAddResourcesAsync(System.Int32,System.String,Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32)">
            <summary>
            Performs a Query for not yet associated resources of a given type that are eligible to be added to a given resource pool.
            </summary>
            <param name="resourcePoolID">The Artifact ID of the resource pool.</param>
            <param name="resourceType">A string representation of the resource type.</param>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.QueryEligibleToAddResourcesAsync(System.Int32,System.String,Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Performs a Query for not yet associated resources of a given type that are eligible to be added to a given resource pool and returns progress information.
            </summary>
            <param name="resourcePoolID">The Artifact ID of the resource pool.</param>
            <param name="resourceType">A string representation of the resource type.</param>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.QueryEligibleToAddResourcesAsync(System.Int32,System.String,Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Performs a Query for not yet associated resources of a given type that are eligible to be added to a given resource pool, provides a token used for canceling the operation, and returns progress information.
            </summary>
            <param name="resourcePoolID">The Artifact ID of the resource pool.</param>
            <param name="resourceType">A string representation of the resource type.</param>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="cancel">A request to cancel the execution of a query for an object. </param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.QueryClientsAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32)">
            <summary>
            Performs a Query for all clients that may be set as the client for a resource pool.
            </summary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.QueryClientsAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Performs a Query for all clients that may be set as the client for a resource pool and returns progress information.
            </summary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.QueryClientsAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Performs a Query for all clients that may be set as the client for a resource pool, provides a token used for canceling the operation, and returns progress information.
            </summary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="cancel">A request to cancel the execution of a query for an object. </param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.AddResourcesAsync(System.Int32,System.String,System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier})">
            <summary>
            Adds a list of resources of a given type from a given resource pool.
            </summary>
            <param name="resourcePoolID">The Artifact ID of the resource pool.</param>
            <param name="resourceType">A string representation of the resource type.</param>
            <param name="resources">A list of identifiers for resources to add to the resource pool.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.AddResourcesAsync(System.Int32,System.String,Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier)">
            <summary>
            Adds a resource of a given type to a given resource pool.
            </summary>
            <param name="resourcePoolID">The Artifact ID of the resource pool.</param>
            <param name="resourceType">A string representation of the resource type.</param>
            <param name="resource">A list of identifiers for resources to add to the resource pool.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.RemoveResourcesAsync(System.Int32,System.String,System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier})">
            <summary>
            Removes a list of resources of a given type from a given resource pool.
            </summary>
            <param name="resourcePoolID">The Artifact ID of the resource pool.</param>
            <param name="resourceType">A string representation of the resource type.</param>
            <param name="resources">A list of identifiers for resources to remove from the resource pool.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.RemoveResourcesAsync(System.Int32,System.String,Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier)">
            <summary>
            Removes a resource of a given type from a given resource pool.
            </summary>
            <param name="resourcePoolID">The Artifact ID of the resource pool.</param>
            <param name="resourceType">A string representation of the resource type.</param>
            <param name="resource">A list of identifiers for resources to remove from the resource pool.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.MassAddResourceServersAsync(System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier},System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier})">
            <summary>
            Adds a list of resource servers to given resource pools.
            </summary>
            <param name="resourcePools">A list of identifiers of resource pools to add given resource servers to.</param>
            <param name="resourceServers">A list of identifiers of resource servers to add to given resource pools.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.MassAddResourceServersAsync(System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier},System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier},System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Adds a list of resource servers to given resource pools and returns progress information.
            </summary>
            <param name="resourcePools">A list of identifiers of resource pools to add given resource servers to.</param>
            <param name="resourceServers">A list of identifiers of resource servers to add to given resource pools.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.MassAddResourceServersAsync(System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier},System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier},System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Adds a list of resource servers to given resource pools, provides a token used for canceling the operation, and returns progress information.
            </summary>
            <param name="resourcePools">A list of identifiers of resource pools to add given resource servers to.</param>
            <param name="resourceServers">A list of identifiers of resource servers to add to given resource pools.</param>
            <param name="cancel">A request to cancel the execution of the operation.</param>
            <param name="progress">A callback that reports operation execution progress.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.MassRemoveResourceServersAsync(System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier},System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier})">
            <summary>
            Removes a list of resource servers from given resource pools.
            </summary>
            <param name="resourcePools">A list of identifiers of resource pools to remove given resource servers from.</param>
            <param name="resourceServers">A list of identifiers of resource servers to remove from given resource pools.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.MassRemoveResourceServersAsync(System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier},System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier},System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Removes a list of resource servers from given resource pools and returns progress information.
            </summary>
            <param name="resourcePools">A list of identifiers of resource pools to remove given resource servers from.</param>
            <param name="resourceServers">A list of identifiers of resource servers to remove from given resource pools.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.MassRemoveResourceServersAsync(System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier},System.Collections.Generic.List{Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier},System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Removes a list of resource servers from given resource pools, provides a token used for canceling the operation, and returns progress information.
            </summary>
            <param name="resourcePools">A list of identifiers of resource pools to remove given resource servers from.</param>
            <param name="resourceServers">A list of identifiers of resource servers to remove from given resource pools.</param>
            <param name="cancel">A request to cancel the execution of the operation.</param>
            <param name="progress">A callback that reports operation execution progress.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.QueryByResourceServerAsync(System.Int32,Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32)">
            <summary>
            Performs a Query for resource pools that are associated with a given resource server.
            </summary>
            <param name="resourceServerID">The Artifact ID of the resource server.</param>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.QueryByResourceServerAsync(System.Int32,Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Performs a Query for resource pools that are associated with a given resource server and returns progress information.
            </summary>
            <param name="resourceServerID">The Artifact ID of the resource server.</param>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.QueryByResourceServerAsync(System.Int32,Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Performs a Query for resource pools that are associated with a given resource server, provides a token used for canceling the operation and returns progress information.
            </summary>
            <param name="resourceServerID">The Artifact ID of the resource server.</param>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="cancel">A request to cancel the execution of a query for an object. </param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.QueryEligibleByResourceServerAsync(System.Int32,Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32)">
            <summary>
            Performs a Query for not yet associated resource pools that are eligible to be added to a given resource server.
            </summary>
            <param name="resourceServerID">The Artifact ID of the resource server.</param>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.QueryEligibleByResourceServerAsync(System.Int32,Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Performs a Query for not yet associated resource pools that are eligible to be added to a given resource server and returns progress information.
            </summary>
            <param name="resourceServerID">The Artifact ID of the resource server.</param>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourcePool.IResourcePoolManager.QueryEligibleByResourceServerAsync(System.Int32,Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Performs a Query for not yet associated resource pools that are eligible to be added to a given resource server, provides a token used for canceling the operation and returns progress information.
            </summary>
            <param name="resourceServerID">The Artifact ID of the resource server.</param>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="cancel">A request to cancel the execution of a query for an object. </param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourcePool.IResourcePoolModule">
            <summary>
            Defines Resource Pool Module.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourcePool.Models.ResourcePoolRequest">
            <summary>
            Represents a request for creating or updating a resource pool.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourcePool.Models.ResourcePoolRequest.Name">
            <summary>
            Gets or sets the name for the resource pool.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourcePool.Models.ResourcePoolRequest.Client">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> identifier for the client associated with the resource pool.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourcePool.Models.ResourcePoolRequest.IsVisible">
            <summary>
            Gets or sets whether the resource pool should be available for selection in workspace creation workflow.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourcePool.Models.ResourcePoolRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the resource pool.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourcePool.Models.ResourcePoolRequest.Notes">
            <summary>
            Gets or sets an optional description or other information about the resource pool.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourcePool.Models.ResourcePoolResponse">
            <summary>
            Represents results of a read operation on a resource pool.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourcePool.Models.ResourcePoolResponse.Client">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> identifier for the client associated with the resource pool.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourcePool.Models.ResourcePoolResponse.IsVisible">
            <summary>
            Gets or sets whether the resource pool should be available for selection in workspace creation workflow.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourcePool.Models.ResourcePoolResponse.Keywords">
            <summary>
            Gets or sets any keywords associated with the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourcePool.Models.ResourcePoolResponse.Notes">
            <summary>
            Gets or sets an optional description or other information about the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourcePool.Models.ResourcePoolResponse.CreatedOn">
            <summary>
            Gets or sets the date and time when the artifact was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourcePool.Models.ResourcePoolResponse.CreatedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who created the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourcePool.Models.ResourcePoolResponse.LastModifiedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who recently updated the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourcePool.Models.ResourcePoolResponse.LastModifiedOn">
            <summary>
            Gets or sets the date and time when the artifact was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourcePool.Models.ResourcePoolResponse.Meta">
            <summary>
            Gets or sets a list of unsupported and read-only properties on the current artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourcePool.Models.ResourcePoolResponse.Actions">
            <summary>
            Gets or sets a list of RESTful operations that a user has permissions to perform on the artifact.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.IAgentServerManager">
            <summary>
            Exposes methods for working with agent server objects.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IAgentServerManager.ReadAsync(System.Int32)">
            <summary>
            Retrieves data for an agent server.
            </summary>
            <param name="serverID">The Artifact ID of the agent server.</param>
            <returns>An object containing data about the requested agent server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IAgentServerManager.ReadAsync(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves data for an agent server.
            </summary>
            <param name="serverID">The Artifact ID of the agent server.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended agent server metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations eligible to the current user of this agent server.</param>
            <returns>An object containing data about the requested agent server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IAgentServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.AgentServerRequest)">
            <summary>
            Modifies properties of an agent server.
            </summary>
            <param name="serverID">The Artifact ID of the agent server.</param>
            <param name="request">The data about the agent server being updated.</param>
            <returns>An object containing data about the updated agent server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IAgentServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.AgentServerRequest,System.DateTime)">
            <summary>
            Modifies properties of an agent server.
            </summary>
            <param name="serverID">The Artifact ID of the agent server.</param>
            <param name="request">The data about the agent server being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the agent server.</param>
            <returns>An object containing data about the updated agent server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IAgentServerManager.RestartWindowsServiceAsync(System.Int32)">
            <summary>
            Restarts Windows service hosted by a given agent server.
            </summary>
            <param name="serverID">The Artifact ID of the agent server.</param>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.IAnalyticsServerManager">
            <summary>
            Exposes methods for working with analytics server objects.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IAnalyticsServerManager.CreateAsync(Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerRequest)">
            <summary>
            Adds an analytics server to Relativity.
            </summary>
            <param name="request">A request object containing the data used to create the analytics server.</param>
            <returns>An object containing data about the new analytics server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IAnalyticsServerManager.ReadAsync(System.Int32)">
            <summary>
            Retrieves data for an analytics server.
            </summary>
            <param name="serverID">The Artifact ID of the analytics server.</param>
            <returns>An object containing data about the requested analytics server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IAnalyticsServerManager.ReadAsync(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves data for an analytics server.
            </summary>
            <param name="serverID">The Artifact ID of the analytics server.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended analytics server metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations eligible to the current user of this analytics server.</param>
            <returns>An object containing data about the requested analytics server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IAnalyticsServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerRequest)">
            <summary>
            Modifies properties of an analytics server.
            </summary>
            <param name="serverID">The Artifact ID of the analytics server.</param>
            <param name="request">The data about the analytics server being updated.</param>
            <returns>An object containing data about the updated analytics server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IAnalyticsServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerRequest,System.DateTime)">
            <summary>
            Modifies properties of an analytics server.
            </summary>
            <param name="serverID">The Artifact ID of the analytics server.</param>
            <param name="request">The data about the analytics server being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the analytics server.</param>
            <returns>An object containing data about the updated analytics server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IAnalyticsServerManager.DeleteAsync(System.Int32)">
            <summary>
            Deletes an analytics server.
            </summary>
            <param name="serverID">The Artifact ID of the analytics server.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IAnalyticsServerManager.GetDefaultFieldValuesAsync">
            <summary>
            Retrieves default values of an analytics server fields.
            </summary>
            <returns>An object containing default values of the analytics server fields.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IAnalyticsServerManager.GetEligibleAnalyticsOperationsAsync">
            <summary>
            Gets a list of eligible analytics operations.
            </summary>
            <returns>A list of eligible analytics operations.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IAnalyticsServerManager.RestartWindowsServiceAsync(System.Int32)">
            <summary>
            Restarts Windows service hosted by a given analytics server.
            </summary>
            <param name="serverID">The Artifact ID of the analytics server.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IAnalyticsServerManager.GetMetadataAsync">
            <summary>
            Returns a list of unsupported and read-only properties for a new analytics server.
            </summary>
            <returns>A list of unsupported and read-only fields.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.ICacheLocationServerManager">
            <summary>
            Exposes methods for working with cache location server objects.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.ICacheLocationServerManager.CreateAsync(Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerRequest)">
            <summary>
            Adds a cache location server to Relativity.
            </summary>
            <param name="request">A request object containing the data used to create the cache location server.</param>
            <returns>An object containing data about the new cache location server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.ICacheLocationServerManager.ReadAsync(System.Int32)">
            <summary>
            Retrieves data for a cache location server.
            </summary>
            <param name="serverID">The Artifact ID of the cache location server.</param>
            <returns>An object containing data about the requested cache location server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.ICacheLocationServerManager.ReadAsync(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves data for a cache location server.
            </summary>
            <param name="serverID">The Artifact ID of the cache location server.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended cache location server metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations eligible to the current user of this cache location server.</param>
            <returns>An object containing data about the requested cache location server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.ICacheLocationServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerRequest)">
            <summary>
            Modifies properties of a cache location server.
            </summary>
            <param name="serverID">The Artifact ID of the cache location server.</param>
            <param name="request">The data about the cache location server being updated.</param>
            <returns>An object containing data about the updated cache location server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.ICacheLocationServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerRequest,System.DateTime)">
            <summary>
            Modifies properties of a cache location server.
            </summary>
            <param name="serverID">The Artifact ID of the cache location server.</param>
            <param name="request">The data about the cache location server being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the cache location server.</param>
            <returns>An object containing data about the updated cache location server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.ICacheLocationServerManager.DeleteAsync(System.Int32)">
            <summary>
            Deletes a cache location server.
            </summary>
            <param name="serverID">The Artifact ID of the cache location server.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.ICacheLocationServerManager.QueryEligibleFileAccessCredentialsAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32)">
            <summary>
            Performs a Query for eligible file access credentials.
            </summary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.ICacheLocationServerManager.QueryEligibleFileAccessCredentialsAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Performs a Query for eligible file access credentials and returns progress information.
            </summary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.ICacheLocationServerManager.QueryEligibleFileAccessCredentialsAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Performs a Query for eligible file access credentials, provides a token used for canceling the operation, and returns progress information.
            </summary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="cancel">A request to cancel the execution of a query for an object. </param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.ICacheLocationServerManager.GetMetadataAsync">
            <summary>
            Returns a list of unsupported and read-only properties for a new cache location server.
            </summary>
            <returns>A list of unsupported and read-only fields.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.ICacheLocationServerManager.IsLastVisibleServerAsync(System.Int32)">
            <summary>
            Returns boolean value representing whether given cache location server is visible and whether it is the last visible among all cache location servers.
            Visible server means that it can be chosen while creating a workspace.
            </summary>
            <param name="serverID">The Artifact ID of the cache location server to check visibility for.</param>
            <returns>True if cache location server is the last visible, false otherwise.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.IFileRepositoryServerManager">
            <summary>
            Exposes methods for working with file repository server objects.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IFileRepositoryServerManager.CreateAsync(Relativity.Services.Interfaces.ResourceServer.Models.FileRepositoryServerRequest)">
            <summary>
            Adds a file repository server to Relativity.
            </summary>
            <param name="request">A request object containing the data used to create the file repository server.</param>
            <returns>An object containing data about the new file repository server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IFileRepositoryServerManager.ReadAsync(System.Int32)">
            <summary>
            Retrieves data for a file repository server.
            </summary>
            <param name="serverID">The Artifact ID of the file repository server.</param>
            <returns>An object containing data about the requested file repository server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IFileRepositoryServerManager.ReadAsync(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves data for a file repository server.
            </summary>
            <param name="serverID">The Artifact ID of the file repository server.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended file repository server metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations eligible to the current user of this file repository server.</param>
            <returns>An object containing data about the requested file repository server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IFileRepositoryServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.FileRepositoryServerRequest)">
            <summary>
            Modifies properties of a file repository server.
            </summary>
            <param name="serverID">The Artifact ID of the file repository server.</param>
            <param name="request">The data about the file repository server being updated.</param>
            <returns>An object containing data about the updated file repository server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IFileRepositoryServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.FileRepositoryServerRequest,System.DateTime)">
            <summary>
            Modifies properties of a file repository server.
            </summary>
            <param name="serverID">The Artifact ID of the file repository server.</param>
            <param name="request">The data about the file repository server being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the file repository server.</param>
            <returns>An object containing data about the updated file repository server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IFileRepositoryServerManager.DeleteAsync(System.Int32)">
            <summary>
            Deletes a file repository server.
            </summary>
            <param name="serverID">The Artifact ID of the file repository server.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IFileRepositoryServerManager.QueryEligibleFileAccessCredentialsAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32)">
            <summary>
            Performs a Query for eligible file access credentials.
            </summary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IFileRepositoryServerManager.QueryEligibleFileAccessCredentialsAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Performs a Query for eligible file access credentials and returns progress information.
            </summary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IFileRepositoryServerManager.QueryEligibleFileAccessCredentialsAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Performs a Query for eligible file access credentials, provides a token used for canceling the operation, and returns progress information.
            </summary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="cancel">A request to cancel the execution of a query for an object. </param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query, or a subset of a previously run (cached) query referenced by a specified query token.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IFileRepositoryServerManager.GetMetadataAsync">
            <summary>
            Returns file repository server metadata for unsupported fields.
            </summary>
            <returns>A list of unsupported and read-only fields.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IFileRepositoryServerManager.IsLastVisibleServerAsync(System.Int32)">
            <summary>
            Returns boolean value representing whether given file repository server is visible and whether it is the last visible among all file repository servers.
            Visible server means that it can be chosen while creating a workspace.
            </summary>
            <param name="serverID">The Artifact ID of the file repository server to check visibility for.</param>
            <returns>True if file repository server is the last visible, false otherwise.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.IResourceServerManager">
            <summary>
            Exposes common methods for working with resource server objects of any type.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IResourceServerManager.ReadAsync(System.Int32)">
            <summary>
            Retrieves metadata for a resource server.
            </summary>
            <param name="serverID">The Artifact ID of the resource server.</param>
            <returns>An object containing metadata about the requested resource server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IResourceServerManager.ReadServerTypesAsync">
            <summary>
            Retrieves all values for resource server types.
            </summary>
            <returns>A list of objects containing metadata for existing server types.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IResourceServerManager.GetEligibleStatusesAsync">
            <summary>
            Retrieves statuses eligible to be assigned to a server.
            </summary>
            <returns>A list of statuses eligible to be assigned to a server.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.IResourceServerModule">
            <summary>
            Defines Resource Server Module.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.IServicesServerManager">
            <summary>
            Exposes methods for working with services server objects.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IServicesServerManager.ReadAsync(System.Int32)">
            <summary>
            Retrieves data for a services server.
            </summary>
            <param name="serverID">The Artifact ID of the services server.</param>
            <returns>An object containing data about the requested services server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IServicesServerManager.ReadAsync(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves data for a services server.
            </summary>
            <param name="serverID">The Artifact ID of the services server.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended services server metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations eligible to the current user of this services server.</param>
            <returns>An object containing data about the requested services server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IServicesServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.ServicesServerRequest)">
            <summary>
            Modifies properties of a services server.
            </summary>
            <param name="serverID">The Artifact ID of the services server.</param>
            <param name="request">The data about the services server being updated.</param>
            <returns>An object containing data about the updated services server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IServicesServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.ServicesServerRequest,System.DateTime)">
            <summary>
            Modifies properties of a services server.
            </summary>
            <param name="serverID">The Artifact ID of the services server.</param>
            <param name="request">The data about the services server being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the services server.</param>
            <returns>An object containing data about the updated services server.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.ISqlDistributedServerManager">
            <summary>
            Exposes methods for working with distributed sql server objects.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.ISqlDistributedServerManager.ReadAsync(System.Int32)">
            <summary>
            Retrieves data for a distributed sql server server.
            </summary>
            <param name="serverID">The Artifact ID of the distributed sql server server.</param>
            <returns>An object containing data about the requested distributed sql server server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.ISqlDistributedServerManager.ReadAsync(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves data for a distributed sql server server.
            </summary>
            <param name="serverID">The Artifact ID of the distributed sql server server.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended distributed sql server server metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations eligible to the current user of this distributed sql server server.</param>
            <returns>An object containing data about the requested distributed sql server server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.ISqlDistributedServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerRequest)">
            <summary>
            Modifies properties of a distributed sql server.
            </summary>
            <param name="serverID">The Artifact ID of the distributed sql server.</param>
            <param name="request">The data about the distributed sql server being updated.</param>
            <returns>An object containing data about the updated distributed sql server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.ISqlDistributedServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerRequest,System.DateTime)">
            <summary>
            Modifies properties of a distributed sql server.
            </summary>
            <param name="serverID">The Artifact ID of the distributed sql server.</param>
            <param name="request">The data about the distributed sql server being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the distributed sql server.</param>
            <returns>An object containing data about the updated distributed sql server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.ISqlDistributedServerManager.IsLastVisibleServerAsync(System.Int32)">
            <summary>
            Returns boolean value representing whether given distributed sql server is visible and whether it is the last visible among all sql servers.
            Visible server means that it can be chosen while creating a workspace.
            </summary>
            <param name="serverID">The Artifact ID of the distributed sql server to check visibility for.</param>
            <returns>True if distributed sql server is the last visible, false otherwise.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.ISqlPrimaryServerManager">
            <summary>
            Exposes methods for working with primary sql server objects.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.ISqlPrimaryServerManager.ReadAsync(System.Int32)">
            <summary>
            Retrieves data for a primary sql server server.
            </summary>
            <param name="serverID">The Artifact ID of the primary sql server server.</param>
            <returns>An object containing data about the requested primary sql server server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.ISqlPrimaryServerManager.ReadAsync(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves data for a primary sql server server.
            </summary>
            <param name="serverID">The Artifact ID of the primary sql server server.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended primary sql server server metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations eligible to the current user of this primary sql server server.</param>
            <returns>An object containing data about the requested primary sql server server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.ISqlPrimaryServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerRequest)">
            <summary>
            Modifies properties of a primary sql server.
            </summary>
            <param name="serverID">The Artifact ID of the primary sql server.</param>
            <param name="request">The data about the primary sql server being updated.</param>
            <returns>An object containing data about the updated primary sql server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.ISqlPrimaryServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerRequest,System.DateTime)">
            <summary>
            Modifies properties of a primary sql server.
            </summary>
            <param name="serverID">The Artifact ID of the primary sql server.</param>
            <param name="request">The data about the primary sql server being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the primary sql server.</param>
            <returns>An object containing data about the updated primary sql server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.ISqlPrimaryServerManager.IsLastVisibleServerAsync(System.Int32)">
            <summary>
            Returns boolean value representing whether given primary sql server is visible and whether it is the last visible among all sql servers.
            Visible server means that it can be chosen while creating a workspace.
            </summary>
            <param name="serverID">The Artifact ID of the primary sql server to check visibility for.</param>
            <returns>True if primary sql server is the last visible, false otherwise.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.IWebApiFormsAuthServerManager">
            <summary>
            Exposes methods for working with web api forms authentication server objects.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebApiFormsAuthServerManager.ReadAsync(System.Int32)">
            <summary>
            Retrieves data for a web api forms authentication server server.
            </summary>
            <param name="serverID">The Artifact ID of the web api forms authentication server server.</param>
            <returns>An object containing data about the requested web api forms authentication server server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebApiFormsAuthServerManager.ReadAsync(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves data for a web api forms authentication server server.
            </summary>
            <param name="serverID">The Artifact ID of the web api forms authentication server server.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended web api forms authentication server server metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations eligible to the current user of this web api forms authentication server server.</param>
            <returns>An object containing data about the requested web api forms authentication server server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebApiFormsAuthServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.WebApiFormsAuthServerRequest)">
            <summary>
            Modifies properties of a web api forms authentication server.
            </summary>
            <param name="serverID">The Artifact ID of the web api forms authentication server.</param>
            <param name="request">The data about the web api forms authentication server being updated.</param>
            <returns>An object containing data about the updated web api forms authentication server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebApiFormsAuthServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.WebApiFormsAuthServerRequest,System.DateTime)">
            <summary>
            Modifies properties of a web api forms authentication server.
            </summary>
            <param name="serverID">The Artifact ID of the web api forms authentication server.</param>
            <param name="request">The data about the web api forms authentication server being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the web api forms authentication server.</param>
            <returns>An object containing data about the updated web api forms authentication server.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.IWebApiServerManager">
            <summary>
            Exposes methods for working with web api server objects.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebApiServerManager.ReadAsync(System.Int32)">
            <summary>
            Retrieves data for a web api server.
            </summary>
            <param name="serverID">The Artifact ID of the web api server.</param>
            <returns>An object containing data about the requested web api server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebApiServerManager.ReadAsync(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves data for a web api server.
            </summary>
            <param name="serverID">The Artifact ID of the web api server.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended web api server metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations eligible to the current user of this web api server.</param>
            <returns>An object containing data about the requested web api server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebApiServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.WebApiServerRequest)">
            <summary>
            Modifies properties of a web api server.
            </summary>
            <param name="serverID">The Artifact ID of the web api server.</param>
            <param name="request">The data about the web api server being updated.</param>
            <returns>An object containing data about the updated web api server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebApiServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.WebApiServerRequest,System.DateTime)">
            <summary>
            Modifies properties of a web api server.
            </summary>
            <param name="serverID">The Artifact ID of the web api server.</param>
            <param name="request">The data about the web api server being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the web api server.</param>
            <returns>An object containing data about the updated web api server.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.IWebApiWindowsAuthServerManager">
            <summary>
            Exposes methods for working with web api windows authentication server objects.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebApiWindowsAuthServerManager.ReadAsync(System.Int32)">
            <summary>
            Retrieves data for a web api windows authentication server.
            </summary>
            <param name="serverID">The Artifact ID of the web api windows authentication server.</param>
            <returns>An object containing data about the requested web api windows authentication server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebApiWindowsAuthServerManager.ReadAsync(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves data for a web api windows authentication server.
            </summary>
            <param name="serverID">The Artifact ID of the web api windows authentication server.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended web api windows authentication server metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations eligible to the current user of this web api windows authentication server.</param>
            <returns>An object containing data about the requested web api windows authentication server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebApiWindowsAuthServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.WebApiWindowsAuthServerRequest)">
            <summary>
            Modifies properties of a web api windows authentication server.
            </summary>
            <param name="serverID">The Artifact ID of the web api windows authentication server.</param>
            <param name="request">The data about the web api windows authentication server being updated.</param>
            <returns>An object containing data about the updated web api windows authentication server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebApiWindowsAuthServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.WebApiWindowsAuthServerRequest,System.DateTime)">
            <summary>
            Modifies properties of a web api windows authentication server.
            </summary>
            <param name="serverID">The Artifact ID of the web api windows authentication server.</param>
            <param name="request">The data about the web api windows authentication server being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the web api windows authentication server.</param>
            <returns>An object containing data about the updated web api windows authentication server.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.IWebBackgroundProcessingServerManager">
            <summary>
            Exposes methods for working with web background processing servers.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebBackgroundProcessingServerManager.ReadAsync(System.Int32)">
            <summary>
            Retrieves data for a web background processing server.
            </summary>
            <param name="serverID">The Artifact ID of the web background processing server.</param>
            <returns>An object containing data about the requested web background processing server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebBackgroundProcessingServerManager.ReadAsync(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves data for a web background processing server.
            </summary>
            <param name="serverID">The Artifact ID of the web background processing server.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended web background processing server metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations eligible to the current user of this web background processing server.</param>
            <returns>An object containing data about the requested web background processing server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebBackgroundProcessingServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.WebBackgroundProcessingServerRequest)">
            <summary>
            Modifies properties of a web background processing server.
            </summary>
            <param name="serverID">The Artifact ID of the web background processing server.</param>
            <param name="request">The data about the web background processing server being updated.</param>
            <returns>An object containing data about the updated web background processing server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebBackgroundProcessingServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.WebBackgroundProcessingServerRequest,System.DateTime)">
            <summary>
            Modifies properties of a web background processing server.
            </summary>
            <param name="serverID">The Artifact ID of the web background processing server.</param>
            <param name="request">The data about the web background processing server being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the web background processing server.</param>
            <returns>An object containing data about the updated web background processing server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebBackgroundProcessingServerManager.RestartWindowsServiceAsync(System.Int32)">
            <summary>
            Restarts Windows service hosted by a given web background processing server.
            </summary>
            <param name="serverID">The Artifact ID of the web background processing server.</param>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.IWebDistributedFormsAuthServerManager">
            <summary>
            Exposes methods for working with web distributed forms authentication server objects.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebDistributedFormsAuthServerManager.ReadAsync(System.Int32)">
            <summary>
            Retrieves data for a web distributed forms authentication server.
            </summary>
            <param name="serverID">The Artifact ID of the web distributed forms authentication server.</param>
            <returns>An object containing data about the requested web distributed forms authentication server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebDistributedFormsAuthServerManager.ReadAsync(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves data for a web distributed forms authentication server.
            </summary>
            <param name="serverID">The Artifact ID of the web distributed forms authentication server.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended web distributed forms authentication server metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations eligible to the current user of this web distributed forms authentication server.</param>
            <returns>An object containing data about the requested web distributed forms authentication server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebDistributedFormsAuthServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedFormsAuthServerRequest)">
            <summary>
            Modifies properties of a web distributed forms authentication server.
            </summary>
            <param name="serverID">The Artifact ID of the web distributed forms authentication server.</param>
            <param name="request">The data about the web distributed forms authentication server being updated.</param>
            <returns>An object containing data about the updated web distributed forms authentication server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebDistributedFormsAuthServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedFormsAuthServerRequest,System.DateTime)">
            <summary>
            Modifies properties of a web distributed forms authentication server.
            </summary>
            <param name="serverID">The Artifact ID of the web distributed forms authentication server.</param>
            <param name="request">The data about the web distributed forms authentication server being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the web distributed forms authentication server.</param>
            <returns>An object containing data about the updated web distributed forms authentication server.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.IWebDistributedServerManager">
            <summary>
            Exposes methods for working with web distributed server objects.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebDistributedServerManager.ReadAsync(System.Int32)">
            <summary>
            Retrieves data for a web distributed server.
            </summary>
            <param name="serverID">The Artifact ID of the web distributed server.</param>
            <returns>An object containing data about the requested web distributed server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebDistributedServerManager.ReadAsync(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves data for a web distributed server.
            </summary>
            <param name="serverID">The Artifact ID of the web distributed server.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended web distributed server metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations eligible to the current user of this web distributed server.</param>
            <returns>An object containing data about the requested web distributed server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebDistributedServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedServerRequest)">
            <summary>
            Modifies properties of a web distributed server.
            </summary>
            <param name="serverID">The Artifact ID of the web distributed server.</param>
            <param name="request">The data about the web distributed server being updated.</param>
            <returns>An object containing data about the updated web distributed server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebDistributedServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedServerRequest,System.DateTime)">
            <summary>
            Modifies properties of a web distributed server.
            </summary>
            <param name="serverID">The Artifact ID of the web distributed server.</param>
            <param name="request">The data about the web distributed server being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the web distributed server.</param>
            <returns>An object containing data about the updated web distributed server.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.IWebDistributedWindowsAuthServerManager">
            <summary>
            Exposes methods for working with web distributed windows authentication server objects.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebDistributedWindowsAuthServerManager.ReadAsync(System.Int32)">
            <summary>
            Retrieves data for a web distributed windows authentication server.
            </summary>
            <param name="serverID">The Artifact ID of the web distributed windows authentication server.</param>
            <returns>An object containing data about the requested web distributed windows authentication server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebDistributedWindowsAuthServerManager.ReadAsync(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves data for a web distributed windows authentication server.
            </summary>
            <param name="serverID">The Artifact ID of the web distributed windows authentication server.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended web distributed windows authentication server metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations eligible to the current user of this web distributed windows authentication server.</param>
            <returns>An object containing data about the requested web distributed windows authentication server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebDistributedWindowsAuthServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedWindowsAuthServerRequest)">
            <summary>
            Modifies properties of a web distributed windows authentication server.
            </summary>
            <param name="serverID">The Artifact ID of the web distributed windows authentication server.</param>
            <param name="request">The data about the web distributed windows authentication server being updated.</param>
            <returns>An object containing data about the updated web distributed windows authentication server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebDistributedWindowsAuthServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedWindowsAuthServerRequest,System.DateTime)">
            <summary>
            Modifies properties of a web distributed windows authentication server.
            </summary>
            <param name="serverID">The Artifact ID of the web distributed windows authentication server.</param>
            <param name="request">The data about the web distributed windows authentication server being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the web distributed windows authentication server.</param>
            <returns>An object containing data about the updated web distributed windows authentication server.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.IWebFormsAuthServerManager">
            <summary>
            Exposes methods for working with web forms authentication server objects.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebFormsAuthServerManager.ReadAsync(System.Int32)">
            <summary>
            Retrieves data for a web forms authentication server.
            </summary>
            <param name="serverID">The Artifact ID of the web forms authentication server.</param>
            <returns>An object containing data about the requested web forms authentication server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebFormsAuthServerManager.ReadAsync(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves data for a web forms authentication server.
            </summary>
            <param name="serverID">The Artifact ID of the web forms authentication server.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended web forms authentication server metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations eligible to the current user of this web forms authentication server.</param>
            <returns>An object containing data about the requested web forms authentication server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebFormsAuthServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerRequest)">
            <summary>
            Modifies properties of a web forms authentication server.
            </summary>
            <param name="serverID">The Artifact ID of the web forms authentication server.</param>
            <param name="request">The data about the web forms authentication server being updated.</param>
            <returns>An object containing data about the updated web forms authentication server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebFormsAuthServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerRequest,System.DateTime)">
            <summary>
            Modifies properties of a web forms authentication server.
            </summary>
            <param name="serverID">The Artifact ID of the web forms authentication server.</param>
            <param name="request">The data about the web forms authentication server being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the web forms authentication server.</param>
            <returns>An object containing data about the updated web forms authentication server.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.IWebServerManager">
            <summary>
            Exposes methods for working with web server objects.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebServerManager.ReadAsync(System.Int32)">
            <summary>
            Retrieves data for a web server.
            </summary>
            <param name="serverID">The Artifact ID of the web server.</param>
            <returns>An object containing data about the requested web server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebServerManager.ReadAsync(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves data for a web server.
            </summary>
            <param name="serverID">The Artifact ID of the web server.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended web server metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations eligible to the current user of this web server.</param>
            <returns>An object containing data about the requested web server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.WebServerRequest)">
            <summary>
            Modifies properties of a web server.
            </summary>
            <param name="serverID">The Artifact ID of the web server.</param>
            <param name="request">The data about the web server being updated.</param>
            <returns>An object containing data about the updated web server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.WebServerRequest,System.DateTime)">
            <summary>
            Modifies properties of a web server.
            </summary>
            <param name="serverID">The Artifact ID of the web server.</param>
            <param name="request">The data about the web server being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the web server.</param>
            <returns>An object containing data about the updated web server.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.IWebWindowsAuthServerManager">
            <summary>
            Exposes methods for working with web windows authentication server objects.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebWindowsAuthServerManager.ReadAsync(System.Int32)">
            <summary>
            Retrieves data for a web windows authentication server.
            </summary>
            <param name="serverID">The Artifact ID of the web windows authentication server.</param>
            <returns>An object containing data about the requested web windows authentication server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebWindowsAuthServerManager.ReadAsync(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves data for a web windows authentication server.
            </summary>
            <param name="serverID">The Artifact ID of the web windows authentication server.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended web windows authentication server metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations eligible to the current user of this web windows authentication server.</param>
            <returns>An object containing data about the requested web windows authentication server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebWindowsAuthServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerRequest)">
            <summary>
            Modifies properties of a web windows authentication server.
            </summary>
            <param name="serverID">The Artifact ID of the web windows authentication server.</param>
            <param name="request">The data about the web windows authentication server being updated.</param>
            <returns>An object containing data about the updated web windows authentication server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWebWindowsAuthServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerRequest,System.DateTime)">
            <summary>
            Modifies properties of a web windows authentication server.
            </summary>
            <param name="serverID">The Artifact ID of the web windows authentication server.</param>
            <param name="request">The data about the web windows authentication server being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the web windows authentication server.</param>
            <returns>An object containing data about the updated web windows authentication server.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.IWorkerManagerServerManager">
            <summary>
            Exposes methods for working with worker manager server objects.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWorkerManagerServerManager.CreateAsync(Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerRequest)">
            <summary>
            Adds a worker manager server to Relativity.
            </summary>
            <param name="request">A request object containing the data used to create the worker manager server.</param>
            <returns>An object containing data about the new worker manager server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWorkerManagerServerManager.ReadAsync(System.Int32)">
            <summary>
            Retrieves data for a worker manager server.
            </summary>
            <param name="serverID">The Artifact ID of the worker manager server.</param>
            <returns>An object containing data about the requested worker manager server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWorkerManagerServerManager.ReadAsync(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves data for a worker manager server.
            </summary>
            <param name="serverID">The Artifact ID of the worker manager server.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended worker manager server metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations eligible to the current user of this worker manager server.</param>
            <returns>An object containing data about the requested worker manager server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWorkerManagerServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerRequest)">
            <summary>
            Modifies properties of a worker manager server.
            </summary>
            <param name="serverID">The Artifact ID of the worker manager server.</param>
            <param name="request">The data about the worker manager server being updated.</param>
            <returns>An object containing data about the updated worker manager server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWorkerManagerServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerRequest,System.DateTime)">
            <summary>
            Modifies properties of a worker manager server.
            </summary>
            <param name="serverID">The Artifact ID of the worker manager server.</param>
            <param name="request">The data about the worker manager server being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the worker manager server.</param>
            <returns>An object containing data about the updated worker manager server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWorkerManagerServerManager.DeleteAsync(System.Int32)">
            <summary>
            Deletes a worker manager server.
            </summary>
            <param name="serverID">The Artifact ID of the worker manager server.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWorkerManagerServerManager.GetDefaultFieldValuesAsync">
            <summary>
            Retrieves default values of a worker manager server fields.
            </summary>
            <returns>An object containing default values of the worker manager server fields.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.IWorkerServerManager">
            <summary>
            Exposes methods for working with worker server objects.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWorkerServerManager.ReadAsync(System.Int32)">
            <summary>
            Retrieves data for a worker server.
            </summary>
            <param name="serverID">The Artifact ID of the worker server.</param>
            <returns>An object containing data about the requested worker server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWorkerServerManager.ReadAsync(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves data for a worker server.
            </summary>
            <param name="serverID">The Artifact ID of the worker server.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended worker server metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations eligible to the current user of this worker server.</param>
            <returns>An object containing data about the requested worker server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWorkerServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerRequest)">
            <summary>
            Modifies properties of a worker server.
            </summary>
            <param name="serverID">The Artifact ID of the worker server.</param>
            <param name="request">The data about the worker server being updated.</param>
            <returns>An object containing data about the updated worker server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWorkerServerManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerRequest,System.DateTime)">
            <summary>
            Modifies properties of a worker server.
            </summary>
            <param name="serverID">The Artifact ID of the worker server.</param>
            <param name="request">The data about the worker server being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the worker server.</param>
            <returns>An object containing data about the updated worker server.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWorkerServerManager.GetEligibleWorkerDesignatedWorkAsync(System.Int32)">
            <summary>
            Gets a list of eligible worker designated work.
            </summary>
            <returns>A list of eligible worker designated work.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWorkerServerManager.StartWorkerAsync(System.Int32)">
            <summary>
            Starts worker on a given server.
            </summary>
            <param name="serverID">The Artifact ID of the worker server.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWorkerServerManager.StopWorkerAsync(System.Int32)">
            <summary>
            Stops worker on a given server.
            </summary>
            <param name="serverID">The Artifact ID of the worker server.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWorkerServerManager.EnableProcessingLicenseAsync(System.Int32)">
            <summary>
            Enables processing license of a given worker server.
            </summary>
            <param name="serverID">The Artifact ID of the worker server.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.IWorkerServerManager.DisableProcessingLicenseAsync(System.Int32)">
            <summary>
            Disables processing license of a given worker server.
            </summary>
            <param name="serverID">The Artifact ID of the worker server.</param>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.AgentServerRequest">
            <summary>
            Represents a request for updating an agent server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AgentServerRequest.Status">
            <summary>
            Gets or sets the status of the agent server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AgentServerRequest.TemporaryDirectory">
            <summary>
            Gets or sets temporary directory of the agent server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AgentServerRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the resource server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AgentServerRequest.Notes">
            <summary>
            Gets or sets an optional description or other information about the resource server.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.AgentServerRequest.#ctor">
            <summary>
            Initializes an instance of an agent server with all properties set to their default values
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.AgentServerRequest.#ctor(Relativity.Services.Interfaces.ResourceServer.Models.AgentServerResponse)">
            <summary>
            Initializes an instance of an agent server with a response object, which is useful for chaining commands.
            </summary>
            <param name="response">Response object to convert to a request.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.AgentServerRequest.op_Implicit(Relativity.Services.Interfaces.ResourceServer.Models.AgentServerResponse)~Relativity.Services.Interfaces.ResourceServer.Models.AgentServerRequest">
            <summary>
            Allows a response object to be implicitly converted to a request object.
            </summary>
            <param name="response">Response object to convert to a request.</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.AgentServerResponse">
            <summary>
            Represents results of a read operation on an agent server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AgentServerResponse.Type">
            <summary>
            Gets or sets type of the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AgentServerResponse.Status">
            <summary>
            Gets or sets status of the agent server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AgentServerResponse.Version">
            <summary>
            Gets or sets version of the agent server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AgentServerResponse.TemporaryDirectory">
            <summary>
            Gets or sets temporary directory of the agent server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AgentServerResponse.WindowsServiceStatus">
            <summary>
            Gets or sets status of Windows service this server is hosting.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AgentServerResponse.Keywords">
            <summary>
            Gets or sets any keywords associated with the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AgentServerResponse.Notes">
            <summary>
            Gets or sets an optional description or other information about the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AgentServerResponse.CreatedOn">
            <summary>
            Gets or sets the date and time when the artifact was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AgentServerResponse.CreatedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who created the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AgentServerResponse.LastModifiedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who recently updated the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AgentServerResponse.LastModifiedOn">
            <summary>
            Gets or sets the date and time when the artifact was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AgentServerResponse.Meta">
            <summary>
            Gets or sets a list of unsupported and read-only properties on the current artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AgentServerResponse.Actions">
            <summary>
            Gets or sets a list of RESTful operations that a user has permissions to perform on the artifact.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerDefaultValuesResponse">
            <summary>
            Represents a model for default analytics server values.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerDefaultValuesResponse.Status">
            <summary>
            Gets or sets status of the analytics server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerDefaultValuesResponse.MaximumConnectors">
            <summary>
            Gets or sets count of maximum connectors of the analytics server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerDefaultValuesResponse.MaximumTotalConnectors">
            <summary>
            Gets or sets total count of maximum connectors.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerRequest">
            <summary>
            Represents a request for creating or updating an analytics server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerRequest.Name">
            <summary>
            Gets or sets the name of the analytics server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerRequest.AnalyticsOperations">
            <summary>
            Gets or sets a list of analytics operations assigned to the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerRequest.Url">
            <summary>
            Gets or sets the URL of the analtyics server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerRequest.RestApiUsername">
            <summary>
            Gets or sets the username of the REST API of the analytics server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerRequest.RestApiPassword">
            <summary>
            Gets or sets the password of the REST API of the analytics server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerRequest.Status">
            <summary>
            Gets or sets the identifier of the status of the analytics server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerRequest.MaximumConnectors">
            <summary>
            Gets or sets the number of maximum connectors of the analytics server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerRequest.MaximumTotalConnectors">
            <summary>
            Gets or sets the total number of maximum connectors of the analytics server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the resource server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerRequest.Notes">
            <summary>
            Gets or sets an optional description or other information about the resource server.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerRequest.#ctor">
            <summary>
            Initializes an instance of an analytics server with all properties set to their default values
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerRequest.#ctor(Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerResponse)">
            <summary>
            Initializes an instance of an analytics server with a response object, which is useful for chaining commands.
            </summary>
            <param name="response">Response object to convert to a request.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerRequest.#ctor(Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerDefaultValuesResponse)">
            <summary>
            Initializes an instance of a analytics server with a default values object, which is useful for chaining commands.
            </summary>
            <param name="defaultValues">Default values object to convert to a request.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerRequest.op_Implicit(Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerResponse)~Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerRequest">
            <summary>
            Allows a response object to be implicitly converted to a request object.
            </summary>
            <param name="response">Response object to convert to a request.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerRequest.op_Implicit(Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerDefaultValuesResponse)~Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerRequest">
            <summary>
            Allows a default values object to be implicitly converted to a request object.
            </summary>
            <param name="defaultValues">Default values object to convert to a request.</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerResponse">
            <summary>
            Represents results of a read operation on an analytics server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerResponse.Type">
            <summary>
            Gets or sets type of the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerResponse.Url">
            <summary>
            Gets or sets URL of the analytics server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerResponse.AnalyticsOperations">
            <summary>
            Gets or sets a list of analytics operations assigned to the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerResponse.RestApiUsername">
            <summary>
            Gets or sets the username of the REST API of the analytics server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerResponse.Status">
            <summary>
            Gets or sets status of the analytics server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerResponse.Version">
            <summary>
            Gets or sets version of the analytics server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerResponse.MaximumConnectors">
            <summary>
            Gets or sets count of maximum connectors of the analytics server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerResponse.MaximumTotalConnectors">
            <summary>
            Gets or sets total count of maximum connectors.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerResponse.WindowsServiceStatus">
            <summary>
            Gets or sets status of Windows service this server is hosting.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerResponse.Keywords">
            <summary>
            Gets or sets any keywords associated with the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerResponse.Notes">
            <summary>
            Gets or sets an optional description or other information about the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerResponse.CreatedOn">
            <summary>
            Gets or sets the date and time when the artifact was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerResponse.CreatedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who created the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerResponse.LastModifiedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who recently updated the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerResponse.LastModifiedOn">
            <summary>
            Gets or sets the date and time when the artifact was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerResponse.Meta">
            <summary>
            Gets or sets a list of unsupported and read-only properties on the current artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.AnalyticsServerResponse.Actions">
            <summary>
            Gets or sets a list of RESTful operations that a user has permissions to perform on the artifact.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerRequest">
            <summary>
            Represents a request for creating or updating a cache location server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerRequest.Name">
            <summary>
            Gets or sets the name of the cache location server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerRequest.IsVisible">
            <summary>
            Gets or sets a boolean value representing whether this cache location server should be available for selection while creating a workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerRequest.UncPath">
            <summary>
            Gets or sets UNC path of the cache location server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerRequest.FileAccessCredentials">
            <summary>
            Gets or sets information about file access credentials object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the resource server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerRequest.Notes">
            <summary>
            Gets or sets an optional description or other information about the resource server.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerRequest.#ctor">
            <summary>
            Initializes an instance of a cache location server with all properties set to their default values
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerRequest.#ctor(Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerResponse)">
            <summary>
            Initializes an instance of a cache location server with a response object, which is useful for chaining commands.
            </summary>
            <param name="response">Response object to convert to a request.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerRequest.op_Implicit(Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerResponse)~Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerRequest">
            <summary>
            Allows a response object to be implicitly converted to a request object.
            </summary>
            <param name="response">Response object to convert to a request.</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerResponse">
            <summary>
            Represents results of a read operation on a cache location server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerResponse.Type">
            <summary>
            Gets or sets type of the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerResponse.UncPath">
            <summary>
            Gets or sets UNC path of the cache location server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerResponse.IsVisible">
            <summary>
            Gets or sets boolean value representing whether the cache location server should be available for selection while creating a workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerResponse.FileAccessCredentials">
            <summary>
            Gets or sets information about file access credentials object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerResponse.CacheLocationCleanUpStatus">
            <summary>
            Gets or sets status of cache location cleanup process.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerResponse.IsDocumentCacheTimeBased">
            <summary>
            Gets or sets boolean value representing whether the system is configured to use time based document cache.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerResponse.CacheLocationCapacityInGigabytes">
            <summary>
            Gets or sets capacity in gigabytes of the cache location server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerResponse.CacheLocationFreeSpaceInGigabytes">
            <summary>
            Gets or sets free space in gigabytes of the cache location server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerResponse.CacheLocationFreeSpaceInPercents">
            <summary>
            Gets or sets free space in percents of the cache location server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerResponse.CacheLocationUpperThresholdInPercents">
            <summary>
            Gets or sets upper threshold in percents of the cache location server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerResponse.CacheLocationLowerThresholdInPercents">
            <summary>
            Gets or sets lower threshold in percents of the cache location server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerResponse.Keywords">
            <summary>
            Gets or sets any keywords associated with the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerResponse.Notes">
            <summary>
            Gets or sets an optional description or other information about the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerResponse.CreatedOn">
            <summary>
            Gets or sets the date and time when the artifact was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerResponse.CreatedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who created the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerResponse.LastModifiedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who recently updated the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerResponse.LastModifiedOn">
            <summary>
            Gets or sets the date and time when the artifact was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerResponse.Meta">
            <summary>
            Gets or sets a list of unsupported and read-only properties on the current artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.CacheLocationServerResponse.Actions">
            <summary>
            Gets or sets a list of RESTful operations that a user has permissions to perform on the artifact.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.FileRepositoryServerRequest">
            <summary>
            Represents a request for creating or updating a file repository server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.FileRepositoryServerRequest.Name">
            <summary>
            Gets or sets the name of the file repository server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.FileRepositoryServerRequest.IsVisible">
            <summary>
            Gets or sets a boolean value representing whether this file repository server should be available for selection while creating a workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.FileRepositoryServerRequest.UncPath">
            <summary>
            Gets or sets UNC path of the file repository server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.FileRepositoryServerRequest.FileAccessCredentials">
            <summary>
            Gets or sets information about file access credentials object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.FileRepositoryServerRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the resource server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.FileRepositoryServerRequest.Notes">
            <summary>
            Gets or sets an optional description or other information about the resource server.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.FileRepositoryServerRequest.#ctor">
            <summary>
            Initializes an instance of a file repository server with all properties set to their default values
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.FileRepositoryServerRequest.#ctor(Relativity.Services.Interfaces.ResourceServer.Models.FileRepositoryServerResponse)">
            <summary>
            Initializes an instance of a file repository server with a response object, which is useful for chaining commands.
            </summary>
            <param name="response">Response object to convert to a request.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.FileRepositoryServerRequest.op_Implicit(Relativity.Services.Interfaces.ResourceServer.Models.FileRepositoryServerResponse)~Relativity.Services.Interfaces.ResourceServer.Models.FileRepositoryServerRequest">
            <summary>
            Allows a response object to be implicitly converted to a request object.
            </summary>
            <param name="response">Response object to convert to a request.</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.FileRepositoryServerResponse">
            <summary>
            Represents results of a read operation on a file repository server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.FileRepositoryServerResponse.Type">
            <summary>
            Gets or sets type of the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.FileRepositoryServerResponse.UncPath">
            <summary>
            Gets or sets UNC path of the file repository server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.FileRepositoryServerResponse.IsVisible">
            <summary>
            Gets or sets boolean value representing whether the file repository server should be available for selection while creating a workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.FileRepositoryServerResponse.FileAccessCredentials">
            <summary>
            Gets or sets information about file access credentials object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.FileRepositoryServerResponse.Keywords">
            <summary>
            Gets or sets any keywords associated with the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.FileRepositoryServerResponse.Notes">
            <summary>
            Gets or sets an optional description or other information about the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.FileRepositoryServerResponse.CreatedOn">
            <summary>
            Gets or sets the date and time when the artifact was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.FileRepositoryServerResponse.CreatedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who created the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.FileRepositoryServerResponse.LastModifiedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who recently updated the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.FileRepositoryServerResponse.LastModifiedOn">
            <summary>
            Gets or sets the date and time when the artifact was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.FileRepositoryServerResponse.Meta">
            <summary>
            Gets or sets a list of unsupported and read-only properties on the current artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.FileRepositoryServerResponse.Actions">
            <summary>
            Gets or sets a list of RESTful operations that a user has permissions to perform on the artifact.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.ResourceServerResponse">
            <summary>
            Represents metadata data of a resource server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.ResourceServerResponse.Type">
            <summary>
            Gets or sets type of the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.ResourceServerResponse.Keywords">
            <summary>
            Gets or sets any keywords associated with the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.ResourceServerResponse.Notes">
            <summary>
            Gets or sets an optional description or other information about the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.ResourceServerResponse.CreatedOn">
            <summary>
            Gets or sets the date and time when the artifact was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.ResourceServerResponse.CreatedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who created the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.ResourceServerResponse.LastModifiedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who recently updated the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.ResourceServerResponse.LastModifiedOn">
            <summary>
            Gets or sets the date and time when the artifact was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.ResourceServerResponse.Meta">
            <summary>
            Gets or sets a list of unsupported and read-only properties on the current artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.ResourceServerResponse.Actions">
            <summary>
            Gets or sets a list of RESTful operations that a user has permissions to perform on the artifact.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.ServerTypeResponse">
            <summary>
            Represents server type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.ServerTypeResponse.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of an object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.ServerTypeResponse.Name">
            <summary>
            Gets or sets the name of an object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.ServerTypeResponse.SystemArtifactIdentifier">
            <summary>
            Gets or sets the name of System Artifact that represents this server type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.ServerTypeResponse.Url">
            <summary>
            Gets or sets path to server type specific APIs.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.ServicesServerRequest">
            <summary>
            Represents a request for updating a services server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.ServicesServerRequest.Status">
            <summary>
            Gets or sets the status of the services server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.ServicesServerRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the resource server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.ServicesServerRequest.Notes">
            <summary>
            Gets or sets an optional description or other information about the resource server.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.ServicesServerRequest.#ctor">
            <summary>
            Initializes an instance of a services server with all properties set to their default values
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.ServicesServerRequest.#ctor(Relativity.Services.Interfaces.ResourceServer.Models.ServicesServerResponse)">
            <summary>
            Initializes an instance of a services server with a response object, which is useful for chaining commands.
            </summary>
            <param name="response">Response object to convert to a request.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.ServicesServerRequest.op_Implicit(Relativity.Services.Interfaces.ResourceServer.Models.ServicesServerResponse)~Relativity.Services.Interfaces.ResourceServer.Models.ServicesServerRequest">
            <summary>
            Allows a response object to be implicitly converted to a request object.
            </summary>
            <param name="response">Response object to convert to a request.</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.ServicesServerResponse">
            <summary>
            Represents results of a read operation on a services server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.ServicesServerResponse.Type">
            <summary>
            Gets or sets type of the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.ServicesServerResponse.Status">
            <summary>
            Gets or sets status of the services server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.ServicesServerResponse.Version">
            <summary>
            Gets or sets version of the services server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.ServicesServerResponse.Keywords">
            <summary>
            Gets or sets any keywords associated with the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.ServicesServerResponse.Notes">
            <summary>
            Gets or sets an optional description or other information about the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.ServicesServerResponse.CreatedOn">
            <summary>
            Gets or sets the date and time when the artifact was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.ServicesServerResponse.CreatedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who created the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.ServicesServerResponse.LastModifiedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who recently updated the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.ServicesServerResponse.LastModifiedOn">
            <summary>
            Gets or sets the date and time when the artifact was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.ServicesServerResponse.Meta">
            <summary>
            Gets or sets a list of unsupported and read-only properties on the current artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.ServicesServerResponse.Actions">
            <summary>
            Gets or sets a list of RESTful operations that a user has permissions to perform on the artifact.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerRequest">
            <summary>
            Represents a request for updating a distributed sql server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerRequest.FriendlyName">
            <summary>
            Gets or sets friendly name of the distributed sql server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerRequest.IsVisible">
            <summary>
            Gets or sets a boolean value representing whether this distributed sql server should be available for selection while creating a workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerRequest.Status">
            <summary>
            Gets or sets the status of the distributed sql server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerRequest.BcpPath">
            <summary>
            Gets or sets BCP of the distributed sql server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerRequest.WorkspaceUpgradeLimit">
            <summary>
            Gets or sets workspace upgrade limit.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the resource server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerRequest.Notes">
            <summary>
            Gets or sets an optional description or other information about the resource server.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerRequest.#ctor">
            <summary>
            Initializes an instance of a distributed sql server with all properties set to their default values
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerRequest.#ctor(Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerResponse)">
            <summary>
            Initializes an instance of a distributed sql server with a response object, which is useful for chaining commands.
            </summary>
            <param name="response">Response object to convert to a request.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerRequest.op_Implicit(Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerResponse)~Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerRequest">
            <summary>
            Allows a response object to be implicitly converted to a request object.
            </summary>
            <param name="response">Response object to convert to a request.</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerResponse">
            <summary>
            Represents results of a read operation on a distributed sql server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerResponse.Type">
            <summary>
            Gets or sets type of the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerResponse.FriendlyName">
            <summary>
            Gets or sets friendly name of the distributed sql server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerResponse.IsVisible">
            <summary>
            Gets or sets a boolean value representing whether this distributed sql server should be available for selection while creating a workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerResponse.Status">
            <summary>
            Gets or sets the status of the distributed sql server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerResponse.BcpPath">
            <summary>
            Gets or sets BCP of the distributed sql server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerResponse.WorkspaceUpgradeLimit">
            <summary>
            Gets or sets workspace upgrade limit.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerResponse.Version">
            <summary>
            Gets or sets version of the sql server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerResponse.Keywords">
            <summary>
            Gets or sets any keywords associated with the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerResponse.Notes">
            <summary>
            Gets or sets an optional description or other information about the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerResponse.CreatedOn">
            <summary>
            Gets or sets the date and time when the artifact was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerResponse.CreatedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who created the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerResponse.LastModifiedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who recently updated the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerResponse.LastModifiedOn">
            <summary>
            Gets or sets the date and time when the artifact was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerResponse.Meta">
            <summary>
            Gets or sets a list of unsupported and read-only properties on the current artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlDistributedServerResponse.Actions">
            <summary>
            Gets or sets a list of RESTful operations that a user has permissions to perform on the artifact.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerRequest">
            <summary>
            Represents a request for updating a primary sql server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerRequest.FriendlyName">
            <summary>
            Gets or sets friendly name of the primary sql server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerRequest.IsVisible">
            <summary>
            Gets or sets a boolean value representing whether this primary sql server should be available for selection while creating a workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerRequest.Status">
            <summary>
            Gets or sets the status of the primary sql server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerRequest.BcpPath">
            <summary>
            Gets or sets BCP of the primary sql server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerRequest.WorkspaceUpgradeLimit">
            <summary>
            Gets or sets workspace upgrade limit.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the resource server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerRequest.Notes">
            <summary>
            Gets or sets an optional description or other information about the resource server.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerRequest.#ctor">
            <summary>
            Initializes an instance of a primary sql server with all properties set to their default values
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerRequest.#ctor(Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerResponse)">
            <summary>
            Initializes an instance of a primary sql server with a response object, which is useful for chaining commands.
            </summary>
            <param name="response">Response object to convert to a request.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerRequest.op_Implicit(Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerResponse)~Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerRequest">
            <summary>
            Allows a response object to be implicitly converted to a request object.
            </summary>
            <param name="response">Response object to convert to a request.</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerResponse">
            <summary>
            Represents results of a read operation on a primary sql server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerResponse.Type">
            <summary>
            Gets or sets type of the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerResponse.FriendlyName">
            <summary>
            Gets or sets friendly name of the primary sql server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerResponse.IsVisible">
            <summary>
            Gets or sets a boolean value representing whether this primary sql server should be available for selection while creating a workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerResponse.Status">
            <summary>
            Gets or sets the status of the primary sql server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerResponse.BcpPath">
            <summary>
            Gets or sets BCP of the primary sql server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerResponse.WorkspaceUpgradeLimit">
            <summary>
            Gets or sets workspace upgrade limit.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerResponse.Version">
            <summary>
            Gets or sets version of the primary sql server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerResponse.Keywords">
            <summary>
            Gets or sets any keywords associated with the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerResponse.Notes">
            <summary>
            Gets or sets an optional description or other information about the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerResponse.CreatedOn">
            <summary>
            Gets or sets the date and time when the artifact was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerResponse.CreatedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who created the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerResponse.LastModifiedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who recently updated the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerResponse.LastModifiedOn">
            <summary>
            Gets or sets the date and time when the artifact was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerResponse.Meta">
            <summary>
            Gets or sets a list of unsupported and read-only properties on the current artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.SqlPrimaryServerResponse.Actions">
            <summary>
            Gets or sets a list of RESTful operations that a user has permissions to perform on the artifact.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.WebApiFormsAuthServerRequest">
            <summary>
            Represents a request for updating a web api forms authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiFormsAuthServerRequest.Status">
            <summary>
            Gets or sets the status of the web api forms authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiFormsAuthServerRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the resource server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiFormsAuthServerRequest.Notes">
            <summary>
            Gets or sets an optional description or other information about the resource server.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebApiFormsAuthServerRequest.#ctor">
            <summary>
            Initializes an instance of a web api forms authentication server with all properties set to their default values
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebApiFormsAuthServerRequest.#ctor(Relativity.Services.Interfaces.ResourceServer.Models.WebApiFormsAuthServerResponse)">
            <summary>
            Initializes an instance of a web api forms authentication server with a response object, which is useful for chaining commands.
            </summary>
            <param name="response">Response object to convert to a request.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebApiFormsAuthServerRequest.op_Implicit(Relativity.Services.Interfaces.ResourceServer.Models.WebApiFormsAuthServerResponse)~Relativity.Services.Interfaces.ResourceServer.Models.WebApiFormsAuthServerRequest">
            <summary>
            Allows a response object to be implicitly converted to a request object.
            </summary>
            <param name="response">Response object to convert to a request.</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.WebApiFormsAuthServerResponse">
            <summary>
            Represents results of a read operation on a web api forms authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiFormsAuthServerResponse.Type">
            <summary>
            Gets or sets type of the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiFormsAuthServerResponse.Status">
            <summary>
            Gets or sets status of the web api forms authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiFormsAuthServerResponse.Version">
            <summary>
            Gets or sets version of the web api forms authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiFormsAuthServerResponse.Keywords">
            <summary>
            Gets or sets any keywords associated with the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiFormsAuthServerResponse.Notes">
            <summary>
            Gets or sets an optional description or other information about the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiFormsAuthServerResponse.CreatedOn">
            <summary>
            Gets or sets the date and time when the artifact was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiFormsAuthServerResponse.CreatedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who created the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiFormsAuthServerResponse.LastModifiedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who recently updated the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiFormsAuthServerResponse.LastModifiedOn">
            <summary>
            Gets or sets the date and time when the artifact was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiFormsAuthServerResponse.Meta">
            <summary>
            Gets or sets a list of unsupported and read-only properties on the current artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiFormsAuthServerResponse.Actions">
            <summary>
            Gets or sets a list of RESTful operations that a user has permissions to perform on the artifact.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.WebApiServerRequest">
            <summary>
            Represents a request for updating a web api server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiServerRequest.Status">
            <summary>
            Gets or sets the status of the web api server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiServerRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the resource server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiServerRequest.Notes">
            <summary>
            Gets or sets an optional description or other information about the resource server.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebApiServerRequest.#ctor">
            <summary>
            Initializes an instance of a web api server with all properties set to their default values
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebApiServerRequest.#ctor(Relativity.Services.Interfaces.ResourceServer.Models.WebApiServerResponse)">
            <summary>
            Initializes an instance of a web api server with a response object, which is useful for chaining commands.
            </summary>
            <param name="response">Response object to convert to a request.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebApiServerRequest.op_Implicit(Relativity.Services.Interfaces.ResourceServer.Models.WebApiServerResponse)~Relativity.Services.Interfaces.ResourceServer.Models.WebApiServerRequest">
            <summary>
            Allows a response object to be implicitly converted to a request object.
            </summary>
            <param name="response">Response object to convert to a request.</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.WebApiServerResponse">
            <summary>
            Represents results of a read operation on a web api server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiServerResponse.Type">
            <summary>
            Gets or sets type of the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiServerResponse.Status">
            <summary>
            Gets or sets status of the web api server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiServerResponse.Version">
            <summary>
            Gets or sets version of the web api server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiServerResponse.Keywords">
            <summary>
            Gets or sets any keywords associated with the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiServerResponse.Notes">
            <summary>
            Gets or sets an optional description or other information about the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiServerResponse.CreatedOn">
            <summary>
            Gets or sets the date and time when the artifact was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiServerResponse.CreatedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who created the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiServerResponse.LastModifiedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who recently updated the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiServerResponse.LastModifiedOn">
            <summary>
            Gets or sets the date and time when the artifact was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiServerResponse.Meta">
            <summary>
            Gets or sets a list of unsupported and read-only properties on the current artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiServerResponse.Actions">
            <summary>
            Gets or sets a list of RESTful operations that a user has permissions to perform on the artifact.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.WebApiWindowsAuthServerRequest">
            <summary>
            Represents a request for updating a web api windows authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiWindowsAuthServerRequest.Status">
            <summary>
            Gets or sets the status of the web api windows authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiWindowsAuthServerRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the resource server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiWindowsAuthServerRequest.Notes">
            <summary>
            Gets or sets an optional description or other information about the resource server.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebApiWindowsAuthServerRequest.#ctor">
            <summary>
            Initializes an instance of a web api windows authentication server with all properties set to their default values
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebApiWindowsAuthServerRequest.#ctor(Relativity.Services.Interfaces.ResourceServer.Models.WebApiWindowsAuthServerResponse)">
            <summary>
            Initializes an instance of a web api windows authentication server with a response object, which is useful for chaining commands.
            </summary>
            <param name="response">Response object to convert to a request.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebApiWindowsAuthServerRequest.op_Implicit(Relativity.Services.Interfaces.ResourceServer.Models.WebApiWindowsAuthServerResponse)~Relativity.Services.Interfaces.ResourceServer.Models.WebApiWindowsAuthServerRequest">
            <summary>
            Allows a response object to be implicitly converted to a request object.
            </summary>
            <param name="response">Response object to convert to a request.</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.WebApiWindowsAuthServerResponse">
            <summary>
            Represents results of a read operation on a web api windows authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiWindowsAuthServerResponse.Type">
            <summary>
            Gets or sets type of the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiWindowsAuthServerResponse.Status">
            <summary>
            Gets or sets status of the web api windows authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiWindowsAuthServerResponse.Version">
            <summary>
            Gets or sets version of the web api windows authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiWindowsAuthServerResponse.Keywords">
            <summary>
            Gets or sets any keywords associated with the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiWindowsAuthServerResponse.Notes">
            <summary>
            Gets or sets an optional description or other information about the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiWindowsAuthServerResponse.CreatedOn">
            <summary>
            Gets or sets the date and time when the artifact was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiWindowsAuthServerResponse.CreatedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who created the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiWindowsAuthServerResponse.LastModifiedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who recently updated the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiWindowsAuthServerResponse.LastModifiedOn">
            <summary>
            Gets or sets the date and time when the artifact was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiWindowsAuthServerResponse.Meta">
            <summary>
            Gets or sets a list of unsupported and read-only properties on the current artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebApiWindowsAuthServerResponse.Actions">
            <summary>
            Gets or sets a list of RESTful operations that a user has permissions to perform on the artifact.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.WebBackgroundProcessingServerRequest">
            <summary>
            Represents a request for updating a web background processing server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebBackgroundProcessingServerRequest.Status">
            <summary>
            Gets or sets the status of the web background processing server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebBackgroundProcessingServerRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the resource server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebBackgroundProcessingServerRequest.Notes">
            <summary>
            Gets or sets an optional description or other information about the resource server.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebBackgroundProcessingServerRequest.#ctor">
            <summary>
            Initializes an instance of a web backgroung processing server with all properties set to their default values
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebBackgroundProcessingServerRequest.#ctor(Relativity.Services.Interfaces.ResourceServer.Models.WebBackgroundProcessingServerResponse)">
            <summary>
            Initializes an instance of a web backgroung processing server with a response object, which is useful for chaining commands.
            </summary>
            <param name="response">Response object to convert to a request.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebBackgroundProcessingServerRequest.op_Implicit(Relativity.Services.Interfaces.ResourceServer.Models.WebBackgroundProcessingServerResponse)~Relativity.Services.Interfaces.ResourceServer.Models.WebBackgroundProcessingServerRequest">
            <summary>
            Allows a response object to be implicitly converted to a request object.
            </summary>
            <param name="response">Response object to convert to a request.</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.WebBackgroundProcessingServerResponse">
            <summary>
            Represents results of a read operation on a web backgroung processing server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebBackgroundProcessingServerResponse.Type">
            <summary>
            Gets or sets type of the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebBackgroundProcessingServerResponse.Status">
            <summary>
            Gets or sets status of the web api windows authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebBackgroundProcessingServerResponse.Version">
            <summary>
            Gets or sets version of the web api windows authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebBackgroundProcessingServerResponse.WindowsServiceStatus">
            <summary>
            Gets or sets status of Windows service this server is hosting.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebBackgroundProcessingServerResponse.Keywords">
            <summary>
            Gets or sets any keywords associated with the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebBackgroundProcessingServerResponse.Notes">
            <summary>
            Gets or sets an optional description or other information about the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebBackgroundProcessingServerResponse.CreatedOn">
            <summary>
            Gets or sets the date and time when the artifact was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebBackgroundProcessingServerResponse.CreatedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who created the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebBackgroundProcessingServerResponse.LastModifiedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who recently updated the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebBackgroundProcessingServerResponse.LastModifiedOn">
            <summary>
            Gets or sets the date and time when the artifact was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebBackgroundProcessingServerResponse.Meta">
            <summary>
            Gets or sets a list of unsupported and read-only properties on the current artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebBackgroundProcessingServerResponse.Actions">
            <summary>
            Gets or sets a list of RESTful operations that a user has permissions to perform on the artifact.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedFormsAuthServerRequest">
            <summary>
            Represents a request for updating a web distributed forms authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedFormsAuthServerRequest.Status">
            <summary>
            Gets or sets the status of the web distributed forms authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedFormsAuthServerRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the resource server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedFormsAuthServerRequest.Notes">
            <summary>
            Gets or sets an optional description or other information about the resource server.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedFormsAuthServerRequest.#ctor">
            <summary>
            Initializes an instance of a web distributed forms authentication server with all properties set to their default values
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedFormsAuthServerRequest.#ctor(Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedFormsAuthServerResponse)">
            <summary>
            Initializes an instance of a web distributed forms authentication server with a response object, which is useful for chaining commands.
            </summary>
            <param name="response">Response object to convert to a request.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedFormsAuthServerRequest.op_Implicit(Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedFormsAuthServerResponse)~Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedFormsAuthServerRequest">
            <summary>
            Allows a response object to be implicitly converted to a request object.
            </summary>
            <param name="response">Response object to convert to a request.</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedFormsAuthServerResponse">
            <summary>
            Represents results of a read operation on a web distributed forms authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedFormsAuthServerResponse.Type">
            <summary>
            Gets or sets type of the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedFormsAuthServerResponse.Status">
            <summary>
            Gets or sets status of the web distributed forms authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedFormsAuthServerResponse.Version">
            <summary>
            Gets or sets version of the web distributed forms authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedFormsAuthServerResponse.Keywords">
            <summary>
            Gets or sets any keywords associated with the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedFormsAuthServerResponse.Notes">
            <summary>
            Gets or sets an optional description or other information about the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedFormsAuthServerResponse.CreatedOn">
            <summary>
            Gets or sets the date and time when the artifact was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedFormsAuthServerResponse.CreatedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who created the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedFormsAuthServerResponse.LastModifiedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who recently updated the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedFormsAuthServerResponse.LastModifiedOn">
            <summary>
            Gets or sets the date and time when the artifact was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedFormsAuthServerResponse.Meta">
            <summary>
            Gets or sets a list of unsupported and read-only properties on the current artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedFormsAuthServerResponse.Actions">
            <summary>
            Gets or sets a list of RESTful operations that a user has permissions to perform on the artifact.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedServerRequest">
            <summary>
            Represents a request for updating a web distributed server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedServerRequest.Status">
            <summary>
            Gets or sets the status of the web distributed server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedServerRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the resource server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedServerRequest.Notes">
            <summary>
            Gets or sets an optional description or other information about the resource server.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedServerRequest.#ctor">
            <summary>
            Initializes an instance of a web distributed server with all properties set to their default values
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedServerRequest.#ctor(Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedServerResponse)">
            <summary>
            Initializes an instance of a web distributed server with a response object, which is useful for chaining commands.
            </summary>
            <param name="response">Response object to convert to a request.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedServerRequest.op_Implicit(Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedServerResponse)~Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedServerRequest">
            <summary>
            Allows a response object to be implicitly converted to a request object.
            </summary>
            <param name="response">Response object to convert to a request.</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedServerResponse">
            <summary>
            Represents results of a read operation on a web distributed server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedServerResponse.Type">
            <summary>
            Gets or sets type of the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedServerResponse.Status">
            <summary>
            Gets or sets status of the web distributed server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedServerResponse.Version">
            <summary>
            Gets or sets version of the web distributed server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedServerResponse.Keywords">
            <summary>
            Gets or sets any keywords associated with the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedServerResponse.Notes">
            <summary>
            Gets or sets an optional description or other information about the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedServerResponse.CreatedOn">
            <summary>
            Gets or sets the date and time when the artifact was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedServerResponse.CreatedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who created the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedServerResponse.LastModifiedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who recently updated the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedServerResponse.LastModifiedOn">
            <summary>
            Gets or sets the date and time when the artifact was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedServerResponse.Meta">
            <summary>
            Gets or sets a list of unsupported and read-only properties on the current artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedServerResponse.Actions">
            <summary>
            Gets or sets a list of RESTful operations that a user has permissions to perform on the artifact.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedWindowsAuthServerRequest">
            <summary>
            Represents a request for updating a web distributed windows authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedWindowsAuthServerRequest.Status">
            <summary>
            Gets or sets the status of the web distributed windows authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedWindowsAuthServerRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the resource server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedWindowsAuthServerRequest.Notes">
            <summary>
            Gets or sets an optional description or other information about the resource server.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedWindowsAuthServerRequest.#ctor">
            <summary>
            Initializes an instance of a web distributed windows authentication server with all properties set to their default values
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedWindowsAuthServerRequest.#ctor(Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedWindowsAuthServerResponse)">
            <summary>
            Initializes an instance of a web distributed windows authentication server with a response object, which is useful for chaining commands.
            </summary>
            <param name="response">Response object to convert to a request.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedWindowsAuthServerRequest.op_Implicit(Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedWindowsAuthServerResponse)~Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedWindowsAuthServerRequest">
            <summary>
            Allows a response object to be implicitly converted to a request object.
            </summary>
            <param name="response">Response object to convert to a request.</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedWindowsAuthServerResponse">
            <summary>
            Represents results of a read operation on a web distributed windows authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedWindowsAuthServerResponse.Type">
            <summary>
            Gets or sets type of the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedWindowsAuthServerResponse.Status">
            <summary>
            Gets or sets status of the web distributed windows authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedWindowsAuthServerResponse.Version">
            <summary>
            Gets or sets version of the web distributed windows authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedWindowsAuthServerResponse.Keywords">
            <summary>
            Gets or sets any keywords associated with the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedWindowsAuthServerResponse.Notes">
            <summary>
            Gets or sets an optional description or other information about the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedWindowsAuthServerResponse.CreatedOn">
            <summary>
            Gets or sets the date and time when the artifact was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedWindowsAuthServerResponse.CreatedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who created the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedWindowsAuthServerResponse.LastModifiedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who recently updated the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedWindowsAuthServerResponse.LastModifiedOn">
            <summary>
            Gets or sets the date and time when the artifact was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedWindowsAuthServerResponse.Meta">
            <summary>
            Gets or sets a list of unsupported and read-only properties on the current artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebDistributedWindowsAuthServerResponse.Actions">
            <summary>
            Gets or sets a list of RESTful operations that a user has permissions to perform on the artifact.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerRequest">
            <summary>
            Represents a request for updating a web forms authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerRequest.Status">
            <summary>
            Gets or sets the status of the web forms authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerRequest.Url">
            <summary>
            Gets or sets URL of the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerRequest.IsUserLoadBalancingEnabled">
            <summary>
            Gets or sets a boolean value representing whether user load balancing is enabled on the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the resource server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerRequest.Notes">
            <summary>
            Gets or sets an optional description or other information about the resource server.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerRequest.#ctor">
            <summary>
            Initializes an instance of a web forms authentication server with all properties set to their default values
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerRequest.#ctor(Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerResponse)">
            <summary>
            Initializes an instance of a web forms authentication server with a response object, which is useful for chaining commands.
            </summary>
            <param name="response">Response object to convert to a request.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerRequest.op_Implicit(Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerResponse)~Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerRequest">
            <summary>
            Allows a response object to be implicitly converted to a request object.
            </summary>
            <param name="response">Response object to convert to a request.</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerResponse">
            <summary>
            Represents results of a read operation on a web forms authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerResponse.Type">
            <summary>
            Gets or sets type of the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerResponse.Status">
            <summary>
            Gets or sets status of the web forms authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerResponse.Url">
            <summary>
            Gets or sets URL of the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerResponse.IsUserLoadBalancingEnabled">
            <summary>
            Gets or sets a boolean value representing whether user load balancing is enabled on the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerResponse.FailedRedirectionAttemptCount">
            <summary>
            Gets or sets amount of failed redirection attempts on the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerResponse.LastRedirectFailedOn">
            <summary>
            Gets or sets the date and time of last failed redirect on the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerResponse.CurrentUserCount">
            <summary>
            Gets or sets the amount of users that are currently being directed to the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerResponse.Version">
            <summary>
            Gets or sets version of the web forms authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerResponse.Keywords">
            <summary>
            Gets or sets any keywords associated with the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerResponse.Notes">
            <summary>
            Gets or sets an optional description or other information about the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerResponse.CreatedOn">
            <summary>
            Gets or sets the date and time when the artifact was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerResponse.CreatedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who created the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerResponse.LastModifiedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who recently updated the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerResponse.LastModifiedOn">
            <summary>
            Gets or sets the date and time when the artifact was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerResponse.Meta">
            <summary>
            Gets or sets a list of unsupported and read-only properties on the current artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebFormsAuthServerResponse.Actions">
            <summary>
            Gets or sets a list of RESTful operations that a user has permissions to perform on the artifact.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.WebServerRequest">
            <summary>
            Represents a request for updating a web server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebServerRequest.Status">
            <summary>
            Gets or sets the status of the web server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebServerRequest.Url">
            <summary>
            Gets or sets URL of the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebServerRequest.IsUserLoadBalancingEnabled">
            <summary>
            Gets or sets a boolean value representing whether user load balancing is enabled on the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebServerRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the resource server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebServerRequest.Notes">
            <summary>
            Gets or sets an optional description or other information about the resource server.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebServerRequest.#ctor">
            <summary>
            Initializes an instance of a web server with all properties set to their default values
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebServerRequest.#ctor(Relativity.Services.Interfaces.ResourceServer.Models.WebServerResponse)">
            <summary>
            Initializes an instance of a web server with a response object, which is useful for chaining commands.
            </summary>
            <param name="response">Response object to convert to a request.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebServerRequest.op_Implicit(Relativity.Services.Interfaces.ResourceServer.Models.WebServerResponse)~Relativity.Services.Interfaces.ResourceServer.Models.WebServerRequest">
            <summary>
            Allows a response object to be implicitly converted to a request object.
            </summary>
            <param name="response">Response object to convert to a request.</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.WebServerResponse">
            <summary>
            Represents results of a read operation on a web server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebServerResponse.Type">
            <summary>
            Gets or sets type of the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebServerResponse.Status">
            <summary>
            Gets or sets status of the web server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebServerResponse.Url">
            <summary>
            Gets or sets URL of the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebServerResponse.IsUserLoadBalancingEnabled">
            <summary>
            Gets or sets a boolean value representing whether user load balancing is enabled on the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebServerResponse.FailedRedirectionAttemptCount">
            <summary>
            Gets or sets amount of failed redirection attempts on the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebServerResponse.LastRedirectFailedOn">
            <summary>
            Gets or sets the date and time of last failed redirect on the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebServerResponse.CurrentUserCount">
            <summary>
            Gets or sets the amount of users that are currently being directed to the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebServerResponse.Version">
            <summary>
            Gets or sets version of the web server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebServerResponse.Keywords">
            <summary>
            Gets or sets any keywords associated with the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebServerResponse.Notes">
            <summary>
            Gets or sets an optional description or other information about the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebServerResponse.CreatedOn">
            <summary>
            Gets or sets the date and time when the artifact was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebServerResponse.CreatedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who created the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebServerResponse.LastModifiedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who recently updated the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebServerResponse.LastModifiedOn">
            <summary>
            Gets or sets the date and time when the artifact was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebServerResponse.Meta">
            <summary>
            Gets or sets a list of unsupported and read-only properties on the current artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebServerResponse.Actions">
            <summary>
            Gets or sets a list of RESTful operations that a user has permissions to perform on the artifact.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerRequest">
            <summary>
            Represents a request for updating a web windows authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerRequest.Status">
            <summary>
            Gets or sets the status of the web windows authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerRequest.Url">
            <summary>
            Gets or sets URL of the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerRequest.IsUserLoadBalancingEnabled">
            <summary>
            Gets or sets a boolean value representing whether user load balancing is enabled on the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the resource server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerRequest.Notes">
            <summary>
            Gets or sets an optional description or other information about the resource server.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerRequest.#ctor">
            <summary>
            Initializes an instance of a web windows authentication server with all properties set to their default values
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerRequest.#ctor(Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerResponse)">
            <summary>
            Initializes an instance of a web windows authentication server with a response object, which is useful for chaining commands.
            </summary>
            <param name="response">Response object to convert to a request.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerRequest.op_Implicit(Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerResponse)~Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerRequest">
            <summary>
            Allows a response object to be implicitly converted to a request object.
            </summary>
            <param name="response">Response object to convert to a request.</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerResponse">
            <summary>
            Represents results of a read operation on a web windows authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerResponse.Type">
            <summary>
            Gets or sets type of the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerResponse.Status">
            <summary>
            Gets or sets status of the web windows authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerResponse.Url">
            <summary>
            Gets or sets URL of the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerResponse.IsUserLoadBalancingEnabled">
            <summary>
            Gets or sets a boolean value representing whether user load balancing is enabled on the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerResponse.FailedRedirectionAttemptCount">
            <summary>
            Gets or sets amount of failed redirection attempts on the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerResponse.LastRedirectFailedOn">
            <summary>
            Gets or sets the date and time of last failed redirect on the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerResponse.CurrentUserCount">
            <summary>
            Gets or sets the amount of users that are currently being directed to the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerResponse.Version">
            <summary>
            Gets or sets version of the web windows authentication server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerResponse.Keywords">
            <summary>
            Gets or sets any keywords associated with the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerResponse.Notes">
            <summary>
            Gets or sets an optional description or other information about the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerResponse.CreatedOn">
            <summary>
            Gets or sets the date and time when the artifact was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerResponse.CreatedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who created the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerResponse.LastModifiedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who recently updated the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerResponse.LastModifiedOn">
            <summary>
            Gets or sets the date and time when the artifact was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerResponse.Meta">
            <summary>
            Gets or sets a list of unsupported and read-only properties on the current artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WebWindowsAuthServerResponse.Actions">
            <summary>
            Gets or sets a list of RESTful operations that a user has permissions to perform on the artifact.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerDefaultValuesResponse">
            <summary>
            Represents a model for default worker manager server values.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerDefaultValuesResponse.InventoryPriority">
            <summary>
            Gets or sets inventory priority of the worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerDefaultValuesResponse.DiscoveryPriority">
            <summary>
            Gets or sets discovery priority of the worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerDefaultValuesResponse.PublishPriority">
            <summary>
            Gets or sets publish priority of the worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerDefaultValuesResponse.MassImagingPriority">
            <summary>
            Gets or sets mass imaging priority of the worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerDefaultValuesResponse.ImageOnTheFlyPriority">
            <summary>
            Gets or sets image on the fly priority of the worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerDefaultValuesResponse.SingleSaveAsPdfPriority">
            <summary>
            Gets or sets single save as PDF priority of the worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerDefaultValuesResponse.MassSaveAsPdfPriority">
            <summary>
            Gets or sets mass save as PDF priority of the worker manager server.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerRequest">
            <summary>
            Represents a request for creating or updating a worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerRequest.Name">
            <summary>
            Gets or sets the name of the worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerRequest.ServerName">
            <summary>
            Gets or sets the server name of the worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerRequest.IsDefault">
            <summary>
            Gets or sets a boolean value representing whether this is server is the default worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerRequest.TemporaryDirectory">
            <summary>
            Gets or sets temporary directory of the worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerRequest.InventoryPriority">
            <summary>
            Gets or sets inventory priority of the worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerRequest.DiscoveryPriority">
            <summary>
            Gets or sets discovery priority of the worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerRequest.PublishPriority">
            <summary>
            Gets or sets publish priority of the worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerRequest.MassImagingPriority">
            <summary>
            Gets or sets mass imaging priority of the worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerRequest.ImageOnTheFlyPriority">
            <summary>
            Gets or sets image on the fly priority of the worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerRequest.SingleSaveAsPdfPriority">
            <summary>
            Gets or sets single save as PDF priority of the worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerRequest.MassSaveAsPdfPriority">
            <summary>
            Gets or sets mass save as PDF priority of the worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the resource server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerRequest.Notes">
            <summary>
            Gets or sets an optional description or other information about the resource server.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerRequest.#ctor">
            <summary>
            Initializes an instance of a worker manager server with all properties set to their default values
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerRequest.#ctor(Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerResponse)">
            <summary>
            Initializes an instance of a worker manager server with a response object, which is useful for chaining commands.
            </summary>
            <param name="response">Response object to convert to a request.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerRequest.#ctor(Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerDefaultValuesResponse)">
            <summary>
            Initializes an instance of a worker manager server with a default values object, which is useful for chaining commands.
            </summary>
            <param name="defaultValues">Default values object to convert to a request.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerRequest.op_Implicit(Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerResponse)~Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerRequest">
            <summary>
            Allows a response object to be implicitly converted to a request object.
            </summary>
            <param name="response">Response object to convert to a request.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerRequest.op_Implicit(Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerDefaultValuesResponse)~Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerRequest">
            <summary>
            Allows a default values object to be implicitly converted to a request object.
            </summary>
            <param name="defaultValues">Default values object to convert to a request.</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerResponse">
            <summary>
            Represents results of a read operation on a worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerResponse.Type">
            <summary>
            Gets or sets type of the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerResponse.Status">
            <summary>
            Gets or sets status of the worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerResponse.ServerName">
            <summary>
            Gets or sets the server name of the worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerResponse.IsDefault">
            <summary>
            Gets or sets a boolean value representing whether this is server is the default worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerResponse.TemporaryDirectory">
            <summary>
            Gets or sets temporary directory of the worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerResponse.Version">
            <summary>
            Gets or sets version of the worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerResponse.InventoryPriority">
            <summary>
            Gets or sets inventory priority of the worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerResponse.DiscoveryPriority">
            <summary>
            Gets or sets discovery priority of the worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerResponse.PublishPriority">
            <summary>
            Gets or sets publish priority of the worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerResponse.MassImagingPriority">
            <summary>
            Gets or sets mass imaging priority of the worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerResponse.ImageOnTheFlyPriority">
            <summary>
            Gets or sets image on the fly priority of the worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerResponse.SingleSaveAsPdfPriority">
            <summary>
            Gets or sets single save as PDF priority of the worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerResponse.MassSaveAsPdfPriority">
            <summary>
            Gets or sets mass save as PDF priority of the worker manager server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerResponse.WindowsServiceStatus">
            <summary>
            Gets or sets status of Windows service this server is hosting.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerResponse.Keywords">
            <summary>
            Gets or sets any keywords associated with the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerResponse.Notes">
            <summary>
            Gets or sets an optional description or other information about the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerResponse.CreatedOn">
            <summary>
            Gets or sets the date and time when the artifact was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerResponse.CreatedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who created the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerResponse.LastModifiedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who recently updated the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerResponse.LastModifiedOn">
            <summary>
            Gets or sets the date and time when the artifact was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerResponse.Meta">
            <summary>
            Gets or sets a list of unsupported and read-only properties on the current artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerManagerServerResponse.Actions">
            <summary>
            Gets or sets a list of RESTful operations that a user has permissions to perform on the artifact.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerRequest">
            <summary>
            Represents a request for updating a worker server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerRequest.WorkerDesignatedWork">
            <summary>
            Gets or sets a list of designated work assigned to the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the resource server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerRequest.Notes">
            <summary>
            Gets or sets an optional description or other information about the resource server.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerRequest.#ctor">
            <summary>
            Initializes an instance of a worker server with all properties set to their default values
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerRequest.#ctor(Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerResponse)">
            <summary>
            Initializes an instance of a worker server with a response object, which is useful for chaining commands.
            </summary>
            <param name="response">Response object to convert to a request.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerRequest.op_Implicit(Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerResponse)~Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerRequest">
            <summary>
            Allows a response object to be implicitly converted to a request object.
            </summary>
            <param name="response">Response object to convert to a request.</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerResponse">
            <summary>
            Gets or sets the server name of the worker server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerResponse.Type">
            <summary>
            Gets or sets type of the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerResponse.WorkerWorkStationID">
            <summary>
            Gets or sets identifier of the workstation of the worker server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerResponse.WorkerStatus">
            <summary>
            Gets or sets status of the worker.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerResponse.IsWorkerLicensedForProcessing">
            <summary>
            Gets or sets boolean value representing whether the worker server is licensed for processing.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerResponse.WorkerRunningThreads">
            <summary>
            Gets or sets count of threads running on the worker server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerResponse.WorkerTotalThreads">
            <summary>
            Gets or sets total count of threads on the worker server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerResponse.WorkerManagerServer">
            <summary>
            Gets or sets information about the worker manager server this worker server is assigned to.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerResponse.WorkerDesignatedWork">
            <summary>
            Gets or sets a list of designated work assigned to the server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerResponse.Status">
            <summary>
            Gets or sets the status of the worker server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerResponse.Version">
            <summary>
            Gets or sets version of the worker server.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerResponse.Keywords">
            <summary>
            Gets or sets any keywords associated with the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerResponse.Notes">
            <summary>
            Gets or sets an optional description or other information about the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerResponse.CreatedOn">
            <summary>
            Gets or sets the date and time when the artifact was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerResponse.CreatedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who created the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerResponse.LastModifiedBy">
            <summary>
            Gets or sets the Artifact ID and name of the user who recently updated the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerResponse.LastModifiedOn">
            <summary>
            Gets or sets the date and time when the artifact was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerResponse.Meta">
            <summary>
            Gets or sets a list of unsupported and read-only properties on the current artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.ResourceServer.Models.WorkerServerResponse.Actions">
            <summary>
            Gets or sets a list of RESTful operations that a user has permissions to perform on the artifact.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Script.IScriptManager">
            <summary>
            Exposes methods for creating, reading, updating, importing, and deleting scripts, as well as various helper methods. 
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.Script.IScriptManager.ImportAsync(System.Int32,Relativity.Services.Interfaces.Scripts.Models.ScriptImportRequest)">
            <summary>
            Imports a script from the library to the workspace.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the script should be imported to.</param>
            <param name="scriptImportRequest">A request object containing the data used to import the script from the script library.</param>
            <returns>The Artifact ID of the imported script in the workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Script.IScriptManager.CreateAsync(System.Int32,Relativity.Services.Interfaces.Scripts.Models.ScriptRequest)">
            <summary>
            Adds a script to relativity.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the script should be imported to.</param>
            <param name="scriptRequest">A request object containing the data used to create the script.</param>
            <returns>The Artifact ID of the new script.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Script.IScriptManager.ReadAsync(System.Int32,System.Int32)">
            <summary>
            Retrieves basic metadata for a script, including its name, body and other properties.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the script should be imported to.</param>
            <param name="scriptID">The Artifact ID of the script.</param>
            <returns>An  object containing data about the requested script.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Script.IScriptManager.ReadAsync(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves basic metadata for a script, including its name, body and other properties.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the script should be imported to.</param>
            <param name="scriptID">The Artifact ID of the script.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended script metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user of this script.</param>
            <returns>An  object containing data about the requested script.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Script.IScriptManager.UpdateAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Scripts.Models.ScriptRequest)">
            <summary>
            Modifies the properties of a script.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the script should be imported to.</param>
            /// <param name="scriptID">The Artifact ID of the script.</param>
            <param name="scriptRequest">A request object containing the data used to update the script.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Script.IScriptManager.UpdateAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.Scripts.Models.ScriptRequest,System.DateTime)">
            <summary>
            Restricts updates to the properties of the script to the date that it was last modified
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the script should be imported to.</param>
            /// <param name="scriptID">The Artifact ID of the script.</param>
            <param name="scriptRequest">A request object containing the data used to update the script.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the script.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Script.IScriptManager.DeleteAsync(System.Int32,System.Int32)">
            <summary>
            Deletes a script.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the script should be imported to.</param>
            <param name="scriptID">The Artifact ID of the script.</param>
            <returns>T</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Script.IScriptManager.GetScriptParametersAsync(System.Int32,System.Int32)">
            <summary>
            Gets a detailed list of parameters for a given script.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the script exists.</param>
            <param name="scriptID">The ArtifactID of the script.</param>
            <returns>List of parameters with details.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Script.IScriptManager.PreviewScriptAsync(System.Int32,System.Int32,System.Collections.Generic.List{Relativity.Services.Interfaces.Scripts.Models.ScriptInput})">
            <summary>
            Gives a preview of what the exact SQL the script will run given a set of parameters.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the script exists.</param>
            <param name="scriptID">The ArtifactID of the script to preview.</param>
            <param name="inputs">Inputs and their values for the script.</param>
            <returns>SQL statement with the parameters inserted into it.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Script.IScriptManager.PreviewScriptAsync(System.Int32,System.Int32,System.Collections.Generic.List{Relativity.Services.Interfaces.Scripts.Models.ScriptInput},System.Double)">
            <summary>
            Gives a preview of what the exact SQL the script will run given a set of parameters.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the script exists.</param>
            <param name="scriptID">The ArtifactID of the script to preview.</param>
            <param name="inputs">Inputs and their values for the script.</param>
            <param name="timeZoneOffset">The time zone offset for the script in hours.</param>
            <returns>SQL statement with the parameters inserted into it.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Script.IScriptManager.PreviewScriptAsync(System.Int32,System.Int32,System.Collections.Generic.List{Relativity.Services.Interfaces.Scripts.Models.ScriptInput},System.TimeSpan)">
            <summary>
            Gives a preview of what the exact SQL the script will run given a set of parameters.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the script exists.</param>
            <param name="scriptID">The ArtifactID of the script to preview.</param>
            <param name="inputs">Inputs and their values for the script.</param>
            <param name="timeZoneSpan">The time zone offset for the script.</param>
            <returns>SQL statement with the parameters inserted into it.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Script.IScriptManager.EnqueueRunJobAsync(System.Int32,System.Int32,System.Collections.Generic.List{Relativity.Services.Interfaces.Scripts.Models.ScriptInput},System.Double)">
            <summary>
            Enqueues a script run job.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the script exists and should be executed.</param>
            <param name="scriptID">The ArtifactID of the script to execute.</param>
            <param name="inputs">Inputs and their values for the script.</param>
            <param name="timeZoneOffset">The time zone offset for the script.</param>
            <returns>An <see cref="T:Relativity.Services.Interfaces.Scripts.Models.EnqueueRunJobResponse"/> describing the queued job.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Script.IScriptManager.ReadRunJobAsync(System.Int32,System.Guid)">
            <summary>
            Retrieves a script run job.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the script exists and was executed.</param>
            <param name="runJobID">The ID of the script run job.</param>
            <returns>A <see cref="T:Relativity.Services.Interfaces.Scripts.Models.RunJob"/> describing the script run job.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Script.IScriptManager.QueryActionJobResultsAsync(System.Int32,System.Guid,System.Int32,Relativity.Services.Interfaces.Scripts.Models.ActionQueryRequest,System.Int32,System.Int32)">
            <summary>
            Queries the results of a completed action job.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the script exists and was executed.</param>
            <param name="runJobID">The ID of the script run job.</param>
            <param name="actionIndex">The index of the action. This is the numeric index of the action in the script starting at 0.</param>
            <param name="actionQueryRequest">The query to execute.</param>
            <param name="start">The result cursor.</param>
            <param name="length">The maximum length of results to return.</param>
            <returns>The action query's result in the form of an <see cref="T:Relativity.Services.Interfaces.Scripts.Models.ActionResultsQueryResponse"/>.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Script.IScriptManager.ExportActionResultsAsync(System.Int32,System.Guid,System.Int32,Relativity.Services.Interfaces.Scripts.Models.ExportActionResultsRequest)">
            <summary>
            Returns the stream of a completed script action export job.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the script exists and was executed.</param>
            <param name="runJobID">The ID of the script run job.</param>
            <param name="actionIndex">The index of the action. This is the numeric index of the action in the script starting at 0.</param>
            <param name="actionExportRequest">The details of the action export.</param>
            <returns>An <see cref="T:Relativity.Kepler.Transport.IKeplerStream"/>.</returns>
            <remarks>In this version of the API, 'csv' is the only supporte file type.</remarks>
        </member>
        <member name="M:Relativity.Services.Interfaces.Script.IScriptManager.ExportActionResultsAsync(System.Int32,System.Guid,System.Int32,Relativity.Services.Interfaces.Scripts.Models.ExportActionResultsRequest,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Returns the stream of a completed script action export job.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the script exists and was executed.</param>
            <param name="runJobID">The ID of the script run job.</param>
            <param name="actionIndex">The index of the action. This is the numeric index of the action in the script starting at 0.</param>
            <param name="actionExportRequest">The details of the action export.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>An <see cref="T:Relativity.Kepler.Transport.IKeplerStream"/>.</returns>
            <remarks>In this version of the API, 'csv' is the only supporte file type.</remarks>
        </member>
        <member name="M:Relativity.Services.Interfaces.Script.IScriptManager.ExportActionResultsAsync(System.Int32,System.Guid,System.Int32,Relativity.Services.Interfaces.Scripts.Models.ExportActionResultsRequest,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Returns the stream of a completed script action export job.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the script exists and was executed.</param>
            <param name="runJobID">The ID of the script run job.</param>
            <param name="actionIndex">The index of the action. This is the numeric index of the action in the script starting at 0.</param>
            <param name="actionExportRequest">The details of the action export.</param>
            <param name="cancel">A request to cancel the execution of a query for an object. </param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>An <see cref="T:Relativity.Kepler.Transport.IKeplerStream"/>.</returns>
            <remarks>In this version of the API, 'csv' is the only supporte file type.</remarks>
        </member>
        <member name="M:Relativity.Services.Interfaces.Script.IScriptManager.ExportScriptReportAsync(System.Int32,System.Guid,Relativity.Services.Interfaces.Scripts.Models.ExportScriptReportRequest)">
            <summary>
            Returns the stream of a completed script report export job.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the script exists and was executed.</param>
            <param name="runJobID">The ID of the script run job.</param>
            <param name="scriptExportRequest">The details of script export.</param>
            <returns>An <see cref="T:Relativity.Kepler.Transport.IKeplerStream"/>.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Script.IScriptManager.ExportScriptReportAsync(System.Int32,System.Guid,Relativity.Services.Interfaces.Scripts.Models.ExportScriptReportRequest,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Returns the stream of a completed script report export job.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the script exists and was executed.</param>
            <param name="runJobID">The ID of the script run job.</param>
            <param name="scriptExportRequest">The details of script export.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>An <see cref="T:Relativity.Kepler.Transport.IKeplerStream"/>.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Script.IScriptManager.ExportScriptReportAsync(System.Int32,System.Guid,Relativity.Services.Interfaces.Scripts.Models.ExportScriptReportRequest,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Returns the stream of a completed script report export job.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the script exists and was executed.</param>
            <param name="runJobID">The ID of the script run job.</param>
            <param name="scriptExportRequest">The details of script export.</param>
            <param name="cancel">A request to cancel the execution of a query for an object. </param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>An <see cref="T:Relativity.Kepler.Transport.IKeplerStream"/>.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Script.IScriptManager.CleanupRunJobAsync(System.Int32,System.Guid)">
            <summary>
            Deletes all data for the specified script run job.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the script exists and was executed.</param>
            <param name="runJobID">The ID of the script run.</param>
        </member>
        <member name="T:Relativity.Services.Interfaces.Script.IScriptModule">
            <summary>
            Script Module
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Script.ScriptConstants">
            <summary>
            Provides routing information about URLs used by the Script Manager service.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Script.ScriptConstants.MODULE_PREFIX">
            <summary>
            The prefix used for module called during service requests.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Script.ScriptConstants.SERVICE_MODULE_NAME">
            <summary>
            The name of the module called during service requests.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Script.ScriptConstants.SERVICE_NAME">
            <summary>
            The name of the service.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Script.ScriptConstants.SERVICE_ROUTE">
            <summary>
            The name of a route in the URL used in a request to the service.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Script.ScriptConstants.BASE_SERVICE_ROUTE">
            <summary>
            The base URI path for the service.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Scripts.Models.ActionColumn">
            <summary>
            Represents a column returned as part of the results of a script action.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ActionColumn.Name">
            <summary>
            The column name.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ActionColumn.DataType">
            <summary>
            The data type of the column.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Scripts.Models.ActionColumnDataType">
            <summary>
            Represents the available action column data types.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Scripts.Models.ActionJob">
            <summary>
            Represents a script action job.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ActionJob.Name">
            <summary>
            The name of the action.
            </summary>
            <remarks>
            This value is optional and is declared in the script definition.
            </remarks>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ActionJob.ReturnType">
            <summary>
            The return type of the action.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ActionJob.AllowHtmlTagsInOutput">
            <summary>
            Gets or sets if html tags should be rendered by the browser.
            </summary>
            <remarks>
            If set to "true", allows HTML tags to be interpreted by the browser instead of rendered as markup.
            </remarks>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ActionJob.ErrorMessage">
            <summary>
            The error message when an error.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ActionJob.Columns">
            <summary>
            The column information when the <see cref="P:Relativity.Services.Interfaces.Scripts.Models.ActionJob.ReturnType"/> is <see cref="F:Relativity.Services.Interfaces.Scripts.Models.ActionReturnType.Table"/>.
            </summary>
            <remarks>
            This property will only be set when the <see cref="P:Relativity.Services.Interfaces.Scripts.Models.ActionJob.ReturnType"/> is <see cref="F:Relativity.Services.Interfaces.Scripts.Models.ActionReturnType.Table"/>.
            This property will only be set when the action has completed successfully.
            </remarks>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ActionJob.RowsAffected">
            <summary>
            The number of rows affected by the completed action when the <see cref="P:Relativity.Services.Interfaces.Scripts.Models.ActionJob.ReturnType"/> is <see cref="F:Relativity.Services.Interfaces.Scripts.Models.ActionReturnType.Status"/>.
            </summary>
            <remarks>
            This property will only be set when the <see cref="P:Relativity.Services.Interfaces.Scripts.Models.ActionJob.ReturnType"/> is <see cref="F:Relativity.Services.Interfaces.Scripts.Models.ActionReturnType.Status"/>.
            This property will only be set when the action has completed sucessfully.
            </remarks>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ActionJob.Status">
            <summary>
            The current status of the job.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ActionJob.Actions">
            <summary>
            Gets or sets a list of RESTful operations that a user has permissions to perform on the script action job.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ActionJob.Meta">
            <summary>
            Gets or sets a list of unsupported and read-only properties on the script action job.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Scripts.Models.ActionJobStatus">
            <summary>
            The available statuses for a script action job.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Scripts.Models.ActionJobStatus.Queued">
            <summary>
            The job has been successfully submitted and is queued to be run.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Scripts.Models.ActionJobStatus.InProgress">
            <summary>
            The job is actively being run.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Scripts.Models.ActionJobStatus.Completed">
            <summary>
            The job has successfully completed without error.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Scripts.Models.ActionJobStatus.Errored">
            <summary>
            The job has been run and has errored.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Scripts.Models.ActionResultRow">
            <summary>
            Represents the values of a single row of a completed script action job.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ActionResultRow.Values">
            <summary>
            The values for the action result row.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Scripts.Models.ActionResultsQueryResponse">
            <summary>
            Represents the results that are returned as part of an <see cref="T:Relativity.Services.Interfaces.Scripts.Models.ActionQueryRequest"/>.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ActionResultsQueryResponse.TotalCount">
            <summary>
            Gets or sets the total number of rows returned by the query.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ActionResultsQueryResponse.Rows">
            <summary>
            Gets or sets the list of objects in the read results from the query.
            </summary>
            <value>The rows.</value>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ActionResultsQueryResponse.Columns">
            <summary>
            Gets or sets the list of columns returned.
            </summary>
            <value>The columns.</value>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ActionResultsQueryResponse.CurrentStartIndex">
            <summary>
            Gets or sets the starting index for a result item in a query result set.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ActionResultsQueryResponse.ResultCount">
            <summary>
            Gets the number of result rows returned by the current query.
            </summary>
            <value>The count.</value>
        </member>
        <member name="T:Relativity.Services.Interfaces.Scripts.Models.ActionReturnType">
            <summary>
            The available return types of a script action.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Scripts.Models.ActionReturnType.Status">
            <summary>
            The action will return the number of rows affected by the query.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Scripts.Models.ActionReturnType.Table">
            <summary>
            The action will return the output of the query in tabular form.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Scripts.Models.EnqueueRunJobResponse">
            <summary>
            Represents the result of enqueuing a script to be run.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.EnqueueRunJobResponse.RunJobID">
            <summary>
            Gets or sets the ID of the script run job.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.EnqueueRunJobResponse.Actions">
            <summary>
            Gets or sets a list of RESTful operations that a user has permissions to perform on the enqueued job.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Scripts.Models.ExportActionResultsRequest">
            <summary>
            Represents a request to export the results of a completed script action.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ExportActionResultsRequest.QueryRequest">
            <summary>
            The query to apply to the results prior to exporting.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Scripts.Models.ExportFileType">
            <summary>
            The available file types that can be exported.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Scripts.Models.ExportFileTypeHelper">
            <summary>
            Extends the <see cref="T:Relativity.Services.Interfaces.Scripts.Models.ExportFileType"></see> enum.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.Scripts.Models.ExportFileTypeHelper.ToDescriptionString(Relativity.Services.Interfaces.Scripts.Models.ExportFileType)">
            <summary>
            Gets the string value representation of the enum.
            </summary>
            <param name="val">The enum value.</param>
            <returns>The string value representation of the enum.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.Scripts.Models.ExportScriptReportRequest">
            <summary>
            Represents a request to export the results of a completed script.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ExportScriptReportRequest.FileType">
            <summary>
            The file type to export.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Scripts.Models.MultipleScriptInput">
            <summary>
            Represents the input to a Relativity script.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.MultipleScriptInput.Value">
            <summary>
            Gets or sets the value of the input.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Scripts.Models.ReportJobStatus">
            <summary>
            Represents the available statuses of a report job.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Scripts.Models.ReportJobStatus.Queued">
            <summary>
            The job has been successfully submitted and is queued to be run.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Scripts.Models.ReportJobStatus.InProgress">
            <summary>
            The job is actively being run.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Scripts.Models.ReportJobStatus.Completed">
            <summary>
            The job has successfully completed without error.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Scripts.Models.ReportJobStatus.Errored">
            <summary>
            The job has been run and has errored.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Scripts.Models.RunJob">
            <summary>
            Represents a script run job.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.RunJob.Status">
            <summary>
            The current status of the job.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.RunJob.ActionJobs">
            <summary>
            The script actions that are associated with this run job.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.RunJob.ErrorMessage">
            <summary>
            The error message when a script run errors.
            </summary>
            <remarks>
            This error is only populated when there is an error with the script run job.
            Action errors will listed with the associated <see cref="T:Relativity.Services.Interfaces.Scripts.Models.ActionJob"/> as part of the <see cref="P:Relativity.Services.Interfaces.Scripts.Models.RunJob.ActionJobs"/> property.
            </remarks>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.RunJob.Actions">
            <summary>
            Gets or sets a list of RESTful operations that a user has permissions to perform on the script run job.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.RunJob.Meta">
            <summary>
            Gets or sets a list of unsupported and read-only properties on the script run job.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Scripts.Models.RunJobStatus">
            <summary>
            Represents the available statuses of a script run job.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Scripts.Models.RunJobStatus.Queued">
            <summary>
            The job has been successfully submitted and is queued to be run.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Scripts.Models.RunJobStatus.InProgress">
            <summary>
            The job is actively being run.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Scripts.Models.RunJobStatus.Completed">
            <summary>
            All actions have been run and completed without error.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Scripts.Models.RunJobStatus.CompletedWithErrors">
            <summary>
            All actions have been run and one or more have errored.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Scripts.Models.RunJobStatus.FailedToComplete">
            <summary>
            The job failed to complete.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Scripts.Models.RunJobStatus.AgentHasNotCheckedIn">
            <summary>
            The Agent has missed multiple consecutive check-ins.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Scripts.Models.ScriptDisplayType">
            <summary>
            Represents what data type the output should be when the script is run.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Scripts.Models.ScriptDisplayType.Table">
            <summary>
            Outputs data as a standard item list.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Scripts.Models.ScriptDisplayType.Report">
            <summary>
            Outputs data as a PDF report.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Scripts.Models.ActionColumnSort">
            <summary>
            Represents sorting information for query results.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ActionColumnSort.ColumnName">
            <summary>
            Gets or sets the name of the column to sort.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ActionColumnSort.Direction">
            <summary>
            Gets or sets the sort order as either ascending or descending. See <see cref="T:Relativity.Services.SortEnum">SortEnum</see>.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Scripts.Models.ScriptImportRequest">
            <summary>
            Represents a DTO used as a request for importing a script.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptImportRequest.LibraryScript">
            <summary>
            Gets or sets the identifiers of script being imported from the admin script library.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptImportRequest.RelativityApplications">
            <summary>
            Gets or sets a list of identifiers of associated Relativity Applications for the script.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Scripts.Models.ScriptInput">
            <summary>
            Represents the input to a Relativity script.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptInput.ID">
            <summary>
            Gets or sets the identifier of the input.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Scripts.Models.ScriptParameterDetails">
            <summary>
            Details about a Relativity script parameter.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptParameterDetails.Name">
            <summary>
            Gets or sets the display name of the parameter.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptParameterDetails.Id">
            <summary>
            Gets or sets the ID of the parameter.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptParameterDetails.IsRequired">
            <summary>
            Gets or sets whether the parameter is required or not.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptParameterDetails.Type">
            <summary>
            Gets or sets the type of the parameter.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptParameterDetails.Attributes">
            <summary>
            Gets or sets the attributes the parameter can have.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptParameterDetails.PossibleValues">
            <summary>
            Gets or sets the possible values the parameter can have. Only applicable to User, Timezone, Field, SavedSearch, SearchProvider, Sql, and Object types.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Scripts.Models.ScriptParameterType">
            <summary>
            Enum to represent the different types of script parameters.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Scripts.Models.ScriptParameterType.Date">
            <summary>
            Indicates the date parameter type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Scripts.Models.ScriptParameterType.DateTime">
            <summary>
            Indicates the datetime parameter type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Scripts.Models.ScriptParameterType.Number">
            <summary>
            Indicates the number parameter type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Scripts.Models.ScriptParameterType.Text">
            <summary>
            Indicates the text parameter type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Scripts.Models.ScriptParameterType.User">
            <summary>
            Indicates the user parameter type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Scripts.Models.ScriptParameterType.Timezone">
            <summary>
            Indicates the time zone parameter type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Scripts.Models.ScriptParameterType.Field">
            <summary>
            Indicates the field parameter type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Scripts.Models.ScriptParameterType.SavedSearch">
            <summary>
            Indicates the saved search parameter type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Scripts.Models.ScriptParameterType.SearchProvider">
            <summary>
            Indicates the search provider parameter type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Scripts.Models.ScriptParameterType.Sql">
            <summary>
            Indicates the sql parameter type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Scripts.Models.ScriptParameterType.Object">
            <summary>
            Indicates the object parameter type.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Scripts.Models.ScriptParameterValue">
            <summary>
            Represents a possible value for a script parameter. Either can be used when specifying a script input.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptParameterValue.Identifier">
            <summary>
            Gets or sets the identifier name or artifact ID of the parameter.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptParameterValue.DisplayValue">
            <summary>
            Gets or sets the display value of the parameter.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Scripts.Models.ActionQueryRequest">
            <summary>
            Describes conditions and sorts to be returned for a Script result query call.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ActionQueryRequest.Condition">
            <summary>
            Gets or sets the search criteria. It can be a simple, single-field condition or a complex expression made by combining conditions.
            </summary>
            <value>The condition.</value>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ActionQueryRequest.Sorts">
            <summary>
            Gets or sets the sort order for view results specified as a collection of Sort objects. See <see cref="T:Relativity.Services.Interfaces.Scripts.Models.ActionColumnSort"/>.
            </summary>
            <value>The sorts.</value>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ActionQueryRequest.ColumnNames">
            <summary>
            Gets or sets the names of the columns to include in the results.
            </summary>
            <value>The column names.</value>
        </member>
        <member name="T:Relativity.Services.Interfaces.Scripts.Models.ScriptRequest">
            <summary>
            Represents a DTO used as a request for creating or updating a script.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptRequest.ScriptBody">
            <summary>
            Gets or sets the body of the script that will be executed. It must include the name property.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptRequest.RelativityApplications">
            <summary>
            Gets or sets a list of identifiers of associated Relativity Applications for the script.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Scripts.Models.ScriptResponse">
            <summary>
            Represents the results of a read operation on a script.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptResponse.Category">
            <summary>
            Gets a string used to define the script type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptResponse.Description">
            <summary>
            Gets the description of the script.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptResponse.IsLinkedScript">
            <summary>
            Gets whether the script is imported from the admin script library.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptResponse.Key">
            <summary>
            Gets the value used to lock a script within Relativity. A locked script cannot be modified
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptResponse.ReportGroupURL">
            <summary>
            Gets a custom page URL that can be used to create new tabs for displaying scripts of the same category. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptResponse.ScriptBody">
            <summary>
            Gets or sets the body of the script that will be executed. It must include the name property.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptResponse.DisplayType">
            <summary>
            Gets or sets the display type of the script.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptResponse.DisplayWarning">
            <summary>
            Gets or sets whether or not the UI should display a warning before running the script.
            </summary>
            <remarks>
            If set to "true", allows a pop-up warning message to appear when running the script.
            </remarks>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptResponse.Version">
            <summary>
            Gets the internal script version.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptResponse.RelativityApplications">
            <summary>
            Gets or sets a list of identifiers of associated Relativity Applications for the script.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptResponse.CreatedOn">
            <summary>
            Gets the date and time when the object type was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptResponse.CreatedBy">
            <summary>
            Gets the Artifact ID and name of the user who created the script.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptResponse.LastModifiedBy">
            <summary>
            Gets the Artifact ID and name of the user who recently updated the script.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptResponse.LastModifiedOn">
            <summary>
            Gets the date and time when the object type was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptResponse.Meta">
            <summary>
            Gets a list of unsupported and read-only properties on the current script.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptResponse.Actions">
            <summary>
            Gets a list of RESTful operations that a user has permissions to perform on the script.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Scripts.Models.ScriptResultField">
            <summary>
            Represents a column of the script result.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptResultField.Name">
            <summary>
            Gets or sets the identifier of the script result field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.ScriptResultField.FieldType">
            <summary>
            Gets or sets the type of a Relativity field, such as fixed-length text, date, single object, or others. 
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Scripts.Models.SingleScriptInput">
            <summary>
            Represents the input to a Relativity script.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Scripts.Models.SingleScriptInput.Value">
            <summary>
            Gets or sets the value of the input.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Scripts.Serialization.ScriptInputSerializer">
            <summary>
            Provides method for serializing and deserializing ScriptInput objects. 
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.Scripts.Serialization.ScriptInputSerializer.TransformForDeserialize(System.Object)">
            <summary>
            Converts the specified Object into a ScriptInput object. 
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Scripts.Serialization.ScriptInputSerializer.TransformForSerialize(Relativity.Services.Interfaces.Scripts.Models.ScriptInput)">
            <summary>
            Converts the specified ScriptInput object into an Object. 
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.SearchProvider.ISearchProviderManager.CreateAsync(System.Int32,Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderRequest)">
            <summary>
            Create a search provider
            </summary>
            <param name="workspaceID"></param>
            <param name="searchProvider"></param>
            <returns>ArtifactID of the created search provider</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.SearchProvider.ISearchProviderManager.ReadAsync(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Get a search provider
            </summary>
            <param name="workspaceID"></param>
            <param name="searchProviderArtifactID"></param>
            <param name="includeMetadata"></param>
            <param name="includeActions"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.SearchProvider.ISearchProviderManager.ReadAsync(System.Int32,System.Int32)">
            <summary>
            Get a search provider
            </summary>
            <param name="workspaceID"></param>
            <param name="searchProviderArtifactID"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.SearchProvider.ISearchProviderManager.UpdateAsync(System.Int32,System.Int32,Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderRequest)">
            <summary>
            Update a search provider
            </summary>
            <param name="workspaceID"></param>
            <param name="searchProviderArtifactID"></param>
            <param name="searchProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.SearchProvider.ISearchProviderManager.DeleteAsync(System.Int32,System.Int32)">
            <summary>
            Delete a search provider
            </summary>
            <param name="workspaceID"></param>
            <param name="searchProviderArtifactID"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.SearchProvider.ISearchProviderManager.GetDependencyList(System.Int32,System.Int32)">
            <summary>
            Gets a list of all dependencies for an existing search provider.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the requested search provider exists.</param>
            <param name="searchProviderArtifactID">The ArtifactID of the search provider to view dependent objects.</param>
            <returns>All the objects that are dependent on the given search provider.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.SearchProvider.ISearchProviderModule">
            <summary>
            Search Provider Module Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderDTO">
            <summary>
            Search Provider data object used to send data between the various layers of relativity
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderDTO.Active">
            <summary>
            Get or set if the Search Provider object is active 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderDTO.AvailableForSearching">
            <summary>
            Get or set if the Search Provider object is available for searching 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderDTO.ArtifactID">
            <summary>
            Gets the artifact id for the given search provider. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderDTO.RankCacheMultiplier">
            <summary>
            Gets the current search provider ranking multiplier for the given search provider. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderDTO.MinRank">
            <summary>
            Gets the minimum rank returned for the given search provider. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderDTO.MaxRank">
            <summary>
            Gets the minimum rank returned for the given search provider. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderDTO.Order">
            <summary>
            Get or set the order for the given search provider. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderDTO.Name">
            <summary>
            Gets or sets the name for the given search provider. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderDTO.DLL">
            <summary>
            Gets the dll name for the given search provider. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderDTO.Parameters">
            <summary>
            Gets the parameters for the given search provider. 
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderDTO.#ctor">
            <summary>
            Default constructor. Defaults all values to null.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderRequest">
            <summary>
            Represents a dto for creating or updating search providers.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderRequest.Active">
            <summary>
            Gets or sets if the Search Provider object is active 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderRequest.AvailableForSearching">
            <summary>
            Gets or sets if the Search Provider object is available for searching 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderRequest.RankCacheMultiplier">
            <summary>
            Gets or sets the current search provider ranking multiplier for the given search provider. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderRequest.MinRank">
            <summary>
            Gets or sets the minimum rank returned for the given search provider. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderRequest.MaxRank">
            <summary>
            Gets or sets the minimum rank returned for the given search provider. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderRequest.Order">
            <summary>
            Get or set the order for the given search provider. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderRequest.Name">
            <summary>
            Gets or sets the name for the given search provider. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderRequest.DLL">
            <summary>
            Gets or sets the dll name for the given search provider. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderRequest.Parameters">
            <summary>
            Gets or sets the parameters for the given search provider. 
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderRequest.#ctor">
            <summary>
            Default constructor. Defaults all values to null.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderResponse">
            <summary>
            Stores information returned from a read request.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderResponse.Active">
            <summary>
            Get or set if the Search Provider object is active 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderResponse.AvailableForSearching">
            <summary>
            Get or set if the Search Provider object is available for searching 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderResponse.ArtifactID">
            <summary>
            Gets the artifact id for the given search provider. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderResponse.RankCacheMultiplier">
            <summary>
            Gets the current search provider ranking multiplier for the given search provider. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderResponse.MinRank">
            <summary>
            Gets the minimum rank returned for the given search provider. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderResponse.MaxRank">
            <summary>
            Gets the minimum rank returned for the given search provider. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderResponse.Order">
            <summary>
            Get or set the order for the given search provider. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderResponse.Name">
            <summary>
            Gets or sets the name for the given search provider. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderResponse.DLL">
            <summary>
            Gets the dll name for the given search provider. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderResponse.Parameters">
            <summary>
            Gets the parameters for the given search provider. 
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.SearchProvider.Models.SearchProviderResponse.#ctor">
            <summary>
            Default constructor. Defaults all values to null.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.SearchProvider.SearchProviderConstants.MODULE_PREFIX">
            <summary>
            The Search Provider module name from the url path for Search Providers Kepler services
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.SearchProvider.SearchProviderConstants.SERVICE_ROUTE">
            <summary>
            The Search Provider route name from the url path for Search Providers Kepler services
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Shared.Models.Action">
            <summary>
            An action that can be performed on the given static object
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Models.Action.Name">
            <summary>
            The action the user has permission to perform on the given static object
            </summary>
            <remarks>
            For example, "Delete" means this object can be deleted, "Update" means this object can be updated
            </remarks>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Models.Action.Href">
            <summary>
            The url for the Kepler service that performs this action
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Models.Action.Verb">
            <summary>
            The HTTP verb to use when calling the Kepler service to perform the action
            </summary>
            <remarks>
            For example, "DELETE" to delete the object, "PUT" to update the object
            </remarks>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Models.Action.IsAvailable">
            <summary>
            Whether or not the action is available on the given static object
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Models.Action.Reason">
            <summary>
            Reasons the action may not be available
            </summary>
            <remarks>
            For example, the given static object may not be available for update or deletion because it is part of a locked application
            </remarks>
        </member>
        <member name="T:Relativity.Services.Interfaces.Shared.Models.IHaveCreatedAndModified">
            <summary>
            Represents a DTO with information about the creation and modification of an object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Models.IHaveCreatedAndModified.CreatedOn">
            <summary>
            Gets the date and time when the artifact was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Models.IHaveCreatedAndModified.CreatedBy">
            <summary>
            Gets the Artifact ID and name of the user who created the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Models.IHaveCreatedAndModified.LastModifiedBy">
            <summary>
            Gets the Artifact ID and name of the user who recently updated the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Models.IHaveCreatedAndModified.LastModifiedOn">
            <summary>
            Gets the date and time when the artifact was most recently updated.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Shared.Models.IHaveKeywordsAndNotes">
            <summary>
            Represents a DTO with Keywords and Notes properties.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Models.IHaveKeywordsAndNotes.Keywords">
            <summary>
            Gets or sets any keywords associated with the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Models.IHaveKeywordsAndNotes.Notes">
            <summary>
            Gets or sets an optional description or other information about the artifact.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Shared.Models.IHaveMetaAndActions">
            <summary>
            Represents a DTO with Meta and Actions properties.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Models.IHaveMetaAndActions.Meta">
            <summary>
            Gets a list of unsupported and read-only properties on the current artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Models.IHaveMetaAndActions.Actions">
            <summary>
            Gets a list of RESTful operations that a user has permissions to perform on the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Models.IPagedResponse.CurrentStartIndex">
            <summary>
            Gets the start index for the current result set.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Models.IPagedResponse.ResultCount">
            <summary>
            Gets the count of records returned in the current result set.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Models.IPagedResponse.TotalCount">
            <summary>
            Gets the total count of all records for the request.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Models.IPagedResponse.FirstPage">
            <summary>
            Gets a RESTful operation that requests the first set of results.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Models.IPagedResponse.PreviousPage">
            <summary>
            Gets a RESTful operation that requests the previous set of results.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Models.IPagedResponse.NextPage">
            <summary>
            Gets a RESTful operation that requests the next set of results.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Models.IPagedResponse.LastPage">
            <summary>
            Gets a RESTful operation that requests the last set of results.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Shared.Models.KeyboardShortcutCombination">
            <summary>
            Represents a keyboard shortcut.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Models.KeyboardShortcutCombination.Shift">
            <summary>
            Gets or sets Shift for the keyboard shortcut.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Models.KeyboardShortcutCombination.Ctrl">
            <summary>
            Gets or sets Ctrl/Command for the keyboard shortcut.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Models.KeyboardShortcutCombination.Alt">
            <summary>
            Gets or sets Alt for the keyboard shortcut.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Models.KeyboardShortcutCombination.Key">
            <summary>
            Gets or sets Key for the keyboard shortcut.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Shared.Models.MassOperationResult">
            <summary>
            Represents a result of a mass operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Models.MassOperationResult.Succeeded">
            <summary>
            Gets or sets the operation success flag.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Models.MassOperationResult.Exception">
            <summary>
            Gets or sets exception thrown during the operation.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Shared.Models.Meta">
            <summary>
            A collection of information about fields on a given static object that may have restrictions
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Models.Meta.Unsupported">
            <summary>
            A list of fields on the static object that are not supported on the given object instance
            </summary>
            <remarks>
            For example, only workspace Tabs can be linked to a Relativity Application. The Meta information for an admin Tab will list its RelativityApplications field as Unsupported
            </remarks>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Models.Meta.ReadOnly">
            <summary>
            A list of fields on the given static object that can't be updated
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier.#ctor">
            <summary>
            Initializes an instance of the ObjectIdentifier class with all properties set to their default values.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier.#ctor(Relativity.Services.Interfaces.Shared.Models.ObjectIdentifier)">
            <summary>
            Initializes an instance of the ObjectIdentifier class as a copy of the given ObjectIdentifier
            </summary>
            <param name="toCopy"></param>
        </member>
        <member name="T:Relativity.Services.Interfaces.Shared.Dependency">
            <summary>
            Represents an object dependent on another object selected for deletion.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Dependency.ObjectType">
            <summary>
            Gets or sets a string indicating the type of the Relativity object dependent on the object selected for deletion.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Dependency.Action">
            <summary>
            Get or sets a string indicating whether a dependent object is deleted or unlinked when a specific object is deleted.
            </summary>
            <remarks>
            For example, this will have a value of "Delete" if the dependent object will be be deleted, or "Unlink" if the dependent object will be modified
            </remarks>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Dependency.Count">
            <summary>
            Get or sets the number of objects with a dependency on a specific object selected for deletion.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Dependency.Connection">
            <summary>
            Get or sets a string indicating whether the object for deletion is a parent, or a field on a single or multiple object field.
            </summary>
            <remarks>
            For example, the Connection property has a value of Parent when the dependent object is a child, and a value of
            Field: {field name} when the dependent object is a field on a single or multiple object field.
            </remarks>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Dependency.HierarchicLevel">
            <summary>
            Get or sets the degree of dependency between object types.
            </summary>
            <remarks>
            The hierarchical level helps to differentiate between the fields and views associated with a child object type and those directly
            associated with the object for deletion. For example, an object type selected for deletion has a child object type. The fields
            and views associated with the child object type have a dependency with a hierarchical level of 1. The fields and views directly
            associated with this object for deletion have a hierarchical level of 0. 
            </remarks>
        </member>
        <member name="T:Relativity.Services.Interfaces.Shared.NameIDPair">
            <summary>
            A reference to an object through its Name and Artifact ID
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.NameIDPair.Name">
            <summary>
            The Name of the object
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.NameIDPair.ID">
            <summary>
            The unique identifier of the object
            </summary>
            <remarks>
            What ID is will depend on what object this is representing. For example, the ID value may be the 'Artifact ID' or the 'Artifact Type ID'.
            </remarks>
        </member>
        <member name="T:Relativity.Services.Interfaces.Shared.Securable`1">
            <summary>
            Generic class that indicates whether or not the given value is secured from the current user
            </summary>
            <typeparam name="T">The type of the value that may be secured. The type should be nullable.</typeparam>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Securable`1.Secured">
            <summary>
            Whether or not the current user has permission to view the given value
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.Securable`1.Value">
            <summary>
            The value that may or may not be secured
            </summary>
            <remarks>
            If the value is secured, Value will be null.
            </remarks>
        </member>
        <member name="T:Relativity.Services.Interfaces.Shared.SecurableList`1">
            <summary>
            Generic class that indicates whether a list has items secured from the current user
            </summary>
            <typeparam name="T">The type of the value that may be secured. The type should be nullable.</typeparam>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.SecurableList`1.HasSecuredItems">
            <summary>
            Whether or not there are any number of items secured away from the user.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Shared.SecurableList`1.ViewableItems">
            <summary>
            List of items that are accessible to the user.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Shared.Constants.RouteConstants">
            <summary>
            Names used in the url paths for static object Kepler services
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Shared.Constants.RouteConstants.WORKSPACE_ROUTE">
            <summary>
            The workspace route name from the url path for static object Kepler services
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.SystemArtifact.ISystemArtifactManager">
            <summary>
            Exposes the methods for working with System Artifacts.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.SystemArtifact.ISystemArtifactModule">
            <summary>
            System Artifact Module Interface.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Tab.ITabManager">
            <summary>
            Exposes the methods for working with Tab objects.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.Tab.ITabManager.CreateAsync(System.Int32,Relativity.Services.Interfaces.Tab.Models.TabRequest)">
            <summary>
            Create a tab.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the tab should be created. Use -1 to indicate the admin workspace.</param>
            <param name="tab">The data about the tab being created.</param>
            <returns>ArtifactID of the created Tab.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Tab.ITabManager.ReadAsync(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Reads a tab.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the tab exists. Use -1 to indicate the admin workspace.</param>
            <param name="tabID">ArtifactID of the tab to read.</param>
            <param name="includeMetadata">Whether or not to include additional metadata about the tab in the returned payload.</param>
            <param name="includeActions">Whether or not to include a list of RESTful actions available for this tab in the returned payload.</param>
            <returns>An object containing data about the requested tab.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Tab.ITabManager.ReadAsync(System.Int32,System.Int32)">
            <summary>
            Reads a tab.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the tab exists. Use -1 to indicate the admin workspace.</param>
            <param name="tabID">ArtifactID of the tab to read.</param>
            <returns>An object containing data about the requested tab.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Tab.ITabManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.Tab.Models.TabRequest)">
            <summary>
            Updates a tab.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the tab exists. Use -1 to indicate the admin workspace.</param>
            <param name="tab">Data about the tab being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Tab.ITabManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.Tab.Models.TabRequest,System.DateTime)">
            <summary>
            Updates a tab. The request will only succeed if the supplied LastModifiedOn date matches the LastModifiedOn date for the tab within the system.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the tab exists. Use -1 to indicate the admin workspace.</param>
            <param name="tab">Data about the tab being updated.</param>
            <param name="lastModifiedOn">Date to check against.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Tab.ITabManager.DeleteAsync(System.Int32,System.Int32)">
            <summary>
            Deletes a tab.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the tab exists. Use -1 to indicate the admin workspace.</param>
            <param name="tabID">ArtifactID of the tab.</param>
            <returns>An object that contains the result of the delete operation.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Tab.ITabManager.GetMetaAsync(System.Int32)">
            <summary>
            Gets workspace level metadata about the Tab object type.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace to view metadata about the Tab object type. Use -1 to indicate the admin workspace.</param>
            <returns>Workspace level metadata about the Tab object type.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Tab.ITabManager.GetAvailableParentsAsync(System.Int32)">
            <summary>
            Gets a list of all available parents for a new tab.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace to view all parent tabs. Use -1 to indicate the admin workspace.</param>
            <returns>All available parents for a new tab within the workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Tab.ITabManager.GetAvailableObjectTypesAsync(System.Int32)">
            <summary>
            Gets a list of all available object types for a new tab.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace to view object types that can be used for a new tabs.</param>
            <returns>All available object types for a new tab within the workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Tab.ITabManager.GetAvailableObjectTypesAsync(System.Int32,System.Int32)">
            <summary>
            Gets a list of all available object types for an existing tab.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the requested tab exists. Use -1 to indicate the admin workspace.</param>
            <param name="tabID">ArtifactID of the tab.</param>
            <returns>All available object types for the given tab within the workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Tab.ITabManager.GetViewOrderList(System.Int32)">
            <summary>
            Gets a list of all tabs and their order for a given workspace.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace to view all the tab and their order. Use -1 to indicate the admin workspace.</param>
            <returns>All tabs and their respective orders and parents data in a workspace</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Tab.ITabManager.GetDependencyList(System.Int32,System.Int32)">
            <summary>
            Gets a list of all dependencies for an existing tab.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the requested tab exists. Use -1 to indicate the admin workspace.</param>
            <param name="tabID">The ArtifactID of the tab to view dependent objects.</param>
            <returns>All the objects that are dependent on the given tab.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Tab.ITabManager.GetAllNavigationTabs(System.Int32)">
            <summary>
            Gets a list of all tabs in a workspace that a user has permissions to access.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace the requested tabs are a part of. Use -1 to indicate the admin workspace.</param>
            <returns>A <see cref="T:Relativity.Services.Interfaces.Tab.Models.NavigationTabResponse"/> for each tab in the workspace the requesting user has permissions to access.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.Tab.ITabModule">
            <summary>
            Tab Module Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Tab.Models.NavigationTabResponse">
            <summary>
            Represents a tab as returned by the <see cref="M:Relativity.Services.Interfaces.Tab.ITabManager.GetAllNavigationTabs(System.Int32)"/> endpoint.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.NavigationTabResponse.Order">
            <summary>
            Gets the order of the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.NavigationTabResponse.IsDefault">
            <summary>
            Gets the default flag value of the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.NavigationTabResponse.IsVisible">
            <summary>
            Gets the visible flag value of the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.NavigationTabResponse.IsShownInSidebar">
            <summary>
            Gets if the tab is shown in the sidebar.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.NavigationTabResponse.Url">
            <summary>
            Gets the relative URL of the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.NavigationTabResponse.ObjectTypeIdentifier">
            <summary>
            Gets the <see cref="P:Relativity.Services.Interfaces.Tab.Models.NavigationTabResponse.ObjectTypeIdentifier"/> for the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.NavigationTabResponse.Parent">
            <summary>
            Gets the Name and ArtifactID of the parent tab for the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.NavigationTabResponse.LinkType">
            <summary>
            Gets the link type of the Tab
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.Tab.Models.NavigationTabResponse.#ctor">
            <summary>
            Constructs a new <see cref="T:Relativity.Services.Interfaces.Tab.Models.NavigationTabResponse"/> object.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Tab.Models.TabLinkTypeEnum">
            <summary>
            Idenitfies the link type of the tab.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Tab.Models.TabLinkTypeEnum.Unknown">
            <summary>
            Represents unknown link type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Tab.Models.TabLinkTypeEnum.Object">
            <summary>
            Represents object link type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Tab.Models.TabLinkTypeEnum.Link">
            <summary>
            Represents link link type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Tab.Models.TabLinkTypeEnum.Parent">
            <summary>
            Represents parent link type.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Tab.Models.TabRequest">
            <summary>
            Represents a request to create or update a Tab in a Workspace. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.TabRequest.Name">
            <summary>
            Gets or Sets the name of the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.TabRequest.Order">
            <summary>
            Gets or Sets the order of the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.TabRequest.ObjectType">
            <summary>
            Gets or Sets the identifier for object type of the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.TabRequest.Link">
            <summary>
            Gets or Sets the link for the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.TabRequest.IsDefault">
            <summary>
            Gets or Sets the default flag of the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.TabRequest.IsVisible">
            <summary>
            Gets or Sets the visible flag of the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.TabRequest.RelativityApplications">
            <summary>
            Gets or Sets a list of identifiers of associated Relativity Applications for the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.TabRequest.LinkType">
            <summary>
            Gets or Sets the link type of the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.TabRequest.Parent">
            <summary>
            Gets or Sets the identifier for parent of the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.TabRequest.ArtifactID">
            <summary>
            Gets or Sets artifact ID of the Tab.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.Tab.Models.TabRequest.#ctor">
            <summary>
            Initializes an instance of the TabRequest class with all properties set to their default values.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.Tab.Models.TabRequest.#ctor(Relativity.Services.Interfaces.Tab.Models.TabResponse)">
            <summary>
            Initializes an instance of the TabRequest class with a response object, which is useful for chaining commands.
            </summary>
            <param name="response"></param>
        </member>
        <member name="T:Relativity.Services.Interfaces.Tab.Models.TabResponse">
            <summary>
            Holds response information returned from a request.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.TabResponse.Order">
            <summary>
            Gets the order of the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.TabResponse.Link">
            <summary>
            Gets the link of the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.TabResponse.IsDefault">
            <summary>
            Gets the default flag value of the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.TabResponse.IsVisible">
            <summary>
            Gets the visible flag value of the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.TabResponse.RelativityApplications">
            <summary>
            Gets the list of all Relativity applications contain the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.TabResponse.LinkType">
            <summary>
            Gets the link type of the Tab
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.TabResponse.CreatedOn">
            <summary>
            Gets the time the Tab was created.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.TabResponse.CreatedBy">
            <summary>
            Gets the name and id of who created the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.TabResponse.LastModifiedBy">
            <summary>
            Gets the name and id of who last modified the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.TabResponse.Meta">
            <summary>
            Gets the meta data associated with the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.TabResponse.Actions">
            <summary>
            Gets the list of RESTful actions available for the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.TabResponse.ObjectType">
            <summary>
            Gets the name and artifact id of the object type for the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.TabResponse.Parent">
            <summary>
            Gets the name and artifact id of the parent tab for the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.TabResponse.LastModifiedOn">
            <summary>
            Gets the time the Tab was last modified.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Tab.Models.TabViewOrder">
            <summary>
            Represents the View Order of the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.TabViewOrder.ArtifactID">
            <summary>
            Gets the artifact id of the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.TabViewOrder.Name">
            <summary>
            Gets the name of the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.TabViewOrder.Parent">
            <summary>
            Gets the name of the parent tab of the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.TabViewOrder.ParentArtifactID">
            <summary>
            Gets the artifact id of the parent tab of the Tab.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Tab.Models.TabViewOrder.Order">
            <summary>
            Gets the order of the Tab.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Tab.TabRouteConstants">
            <summary>
            Names used in the url paths for Tab Kepler services
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Tab.TabRouteConstants.TAB_MODULE">
            <summary>
            The Tab module name from the url path for Tab Kepler services
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.Tab.TabRouteConstants.TAB_ROUTE">
            <summary>
            The Tab route name from the url path for Tab Kepler services
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.UserInfo.IUserInfoManager">
            <summary>
            Exposes the methods for retrieving information about Relativity users.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.IUserInfoManager.CreateAsync(Relativity.Services.Interfaces.UserInfo.Models.UserRequest)">
            <summary>
            Adds a single user to Relativity.
            </summary>
            <param name="userRequest">A request object containing the data used to create the user.</param>
            <returns>An object containing data about the new user.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.IUserInfoManager.ReadAsync(System.Int32)">
            <summary>
            Retrieves all metadata for a user, including its Relativity access, name, email, and other properties.
            </summary>
            <param name="userID">The Artifact ID of the user.</param>
            <returns>An object containing data about the requested user.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.IUserInfoManager.ReadAsync(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves advanced metadata for a user, including their Relativity access, name, email, and other properties.
            </summary>
            <param name="userID">The Artifact ID of the user.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended user metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user of this user.</param>
            <returns>An object containing data about the requested user.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.IUserInfoManager.ReadSettingsAsync">
            <summary>
            Retrieves settings for the current user, including their name, email, and other properties.
            </summary>
            <returns>An object containing data about the current user.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.IUserInfoManager.ReadSettingsAsync(System.Boolean,System.Boolean)">
            <summary>
            Retrieves settings for the current user, including their name, email, and other properties.
            </summary>
            <param name="includeMetadata">A Boolean value indicating whether to return extended user setting metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations available to the current user for their settings.</param>
            <returns>An object containing data about the current user.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.IUserInfoManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.UserInfo.Models.UserRequest)">
            <summary>
            Modifies the properties of a user.
            </summary>
            <param name="userID">The Artifact ID of the user.</param>
            <param name="userRequest">The data about the user being updated.</param>
            <returns>An object containing data about the updated user.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.IUserInfoManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.UserInfo.Models.UserRequest,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Modifies the properties of a user.
            </summary>
            <param name="userID">The Artifact ID of the user.</param>
            <param name="userRequest">The data about the user being updated.</param>
            <param name="progress">A callback that reports the progress of the operation.</param>
            <returns>An object containing data about the updated user.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.IUserInfoManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.UserInfo.Models.UserRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the properties of a user.
            </summary>
            <param name="userID">The Artifact ID of the user.</param>
            <param name="userRequest">The data about the user being updated.</param>
            <param name="cancel">A request to cancel the execution of the operation.</param>
            <returns>An object containing data about the updated user.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.IUserInfoManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.UserInfo.Models.UserRequest,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Modifies the properties of a user.
            </summary>
            <param name="userID">The Artifact ID of the user.</param>
            <param name="userRequest">The data about the user being updated.</param>
            <param name="cancel">A request to cancel the execution of the operation.</param>
            <param name="progress">A callback that reports the progress of the operation.</param>
            <returns>An object containing data about the updated user.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.IUserInfoManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.UserInfo.Models.UserRequest,System.DateTime)">
            <summary>
            Modifies the properties of a user.
            </summary>
            <param name="userID">The Artifact ID of the user.</param>
            <param name="userRequest">The data about the user being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the user.</param>
            <returns>An object containing data about the updated user.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.IUserInfoManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.UserInfo.Models.UserRequest,System.DateTime,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Modifies the properties of a user.
            </summary>
            <param name="userID">The Artifact ID of the user.</param>
            <param name="userRequest">The data about the user being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the user.</param>
            <param name="progress">A callback that reports the progress of the operation.</param>
            <returns>An object containing data about the updated user.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.IUserInfoManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.UserInfo.Models.UserRequest,System.DateTime,System.Threading.CancellationToken)">
            <summary>
            Modifies the properties of a user.
            </summary>
            <param name="userID">The Artifact ID of the user.</param>
            <param name="userRequest">The data about the user being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the user.</param>
            <param name="cancel">A request to cancel the execution of the operation.</param>
            <returns>An object containing data about the updated user.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.IUserInfoManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.UserInfo.Models.UserRequest,System.DateTime,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Modifies the properties of a user.
            </summary>
            <param name="userID">The Artifact ID of the user.</param>
            <param name="userRequest">The data about the user being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the user.</param>
            <param name="cancel">A request to cancel the execution of the operation.</param>
            <param name="progress">A callback that reports the progress of the operation.</param>
            <returns>An object containing data about the updated user.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.IUserInfoManager.UpdateSettingsAsync(Relativity.Services.Interfaces.UserInfo.Models.UserSettingRequest)">
            <summary>
            Modifies the user setting properties of the current user.
            </summary>
            <param name="userSettingRequest">The data about the user settings being updated.</param>
            <returns>An object containing data about the updated user.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.IUserInfoManager.UpdateSettingsAsync(Relativity.Services.Interfaces.UserInfo.Models.UserSettingRequest,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Modifies the user setting properties of the current user.
            </summary>
            <param name="userSettingRequest">The data about the user settings being updated.</param>
            <param name="progress">A callback that reports the progress of the operation.</param>
            <returns>An object containing data about the updated user.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.IUserInfoManager.UpdateSettingsAsync(Relativity.Services.Interfaces.UserInfo.Models.UserSettingRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the user setting properties of the current user.
            </summary>
            <param name="userSettingRequest">The data about the user settings being updated.</param>
            <param name="cancel">A request to cancel the execution of the operation.</param>
            <returns>An object containing data about the updated user.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.IUserInfoManager.UpdateSettingsAsync(Relativity.Services.Interfaces.UserInfo.Models.UserSettingRequest,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Modifies the user setting properties of the current user.
            </summary>
            <param name="userSettingRequest">The data about the user settings being updated.</param>
            <param name="cancel">A request to cancel the execution of the operation.</param>
            <param name="progress">A callback that reports the progress of the operation.</param>
            <returns>An object containing data about the updated user.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.IUserInfoManager.UpdateSettingsAsync(Relativity.Services.Interfaces.UserInfo.Models.UserSettingRequest,System.DateTime)">
            <summary>
            Modifies the user setting properties of the current user.
            </summary>
            <param name="userSettingRequest">The data about the user settings being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the user settings.</param>
            <returns>An object containing data about the updated user.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.IUserInfoManager.UpdateSettingsAsync(Relativity.Services.Interfaces.UserInfo.Models.UserSettingRequest,System.DateTime,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Modifies the user setting properties of the current user.
            </summary>
            <param name="userSettingRequest">The data about the user settings being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the user settings.</param>
            <param name="progress">A callback that reports the progress of the operation.</param>
            <returns>An object containing data about the updated user.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.IUserInfoManager.UpdateSettingsAsync(Relativity.Services.Interfaces.UserInfo.Models.UserSettingRequest,System.DateTime,System.Threading.CancellationToken)">
            <summary>
            Modifies the user setting properties of the current user.
            </summary>
            <param name="userSettingRequest">The data about the user settings being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the user settings.</param>
            <param name="cancel">A request to cancel the execution of the operation.</param>
            <returns>An object containing data about the updated user.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.IUserInfoManager.UpdateSettingsAsync(Relativity.Services.Interfaces.UserInfo.Models.UserSettingRequest,System.DateTime,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Modifies the user setting properties of the current user.
            </summary>
            <param name="userSettingRequest">The data about the user settings being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the user settings.</param>
            <param name="cancel">A request to cancel the execution of the operation.</param>
            <param name="progress">A callback that reports the progress of the operation.</param>
            <returns>An object containing data about the updated user.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.IUserInfoManager.DeleteAsync(System.Int32)">
            <summary>
            Deletes a user.
            </summary>
            <param name="userID">The Artifact ID of the user to delete.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.IUserInfoManager.DeleteAsync(System.Int32,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Deletes a user.
            </summary>
            <param name="userID">The Artifact ID of the user to delete.</param>
            <param name="progress">A callback that reports the progress of the operation.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.IUserInfoManager.DeleteAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Deletes a user.
            </summary>
            <param name="userID">The Artifact ID of the user to delete.</param>
            <param name="cancel">A request to cancel the execution of the operation.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.IUserInfoManager.DeleteAsync(System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Deletes a user.
            </summary>
            <param name="userID">The Artifact ID of the user to delete.</param>
            <param name="cancel">A request to cancel the execution of the operation.</param>
            <param name="progress">A callback that reports the progress of the operation.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.IUserInfoManager.GetAvailableTypesAsync">
            <summary>
            Gets all possible types for the User
            </summary>
            <returns>A list of possible choices for a user's type.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.IUserInfoManager.RetrieveAll(System.Int32)">
            <summary>
            Gets a list of all users and their information for a given workspace.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace used to retrieve a list of all users. Use -1 to retrieve users from the admin-level context.</param>
            <returns>All users and their information for a given workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.IUserInfoManager.RetrieveUsersBy(System.Int32,Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32)">
            <summary>
            Gets a list of users and their information, and supports filtering, ordering, and paging these results.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace used to retrieve a list of users. Use -1 to retrieve users from the admin-level context.</param>
            <param name="query">A QueryRequest object containing conditions, sorting order, and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned UserInfoQueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <returns>Returns the user and related information as results of the executed query.</returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.UserInfo.IUserInfoModule">
            <summary>
            User Information Module Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.UserInfo.Models.DocumentViewer">
            <summary>
            Enum of the different document viewer modes a user can access.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.UserInfo.Models.DocumentViewer.Default">
            <summary>
            Use default value for the DocumentViewer property.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.UserInfo.Models.DocumentViewer.HTML">
            <summary>
            Use the HTML viewer to review documents.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.UserInfo.Models.DocumentViewer.ActiveX">
            <summary>
            Use the ActiveX viewer to review documents.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.UserInfo.Models.DocumentViewer.RelativityReview">
            <summary>
            Use the Relativity Review Interface to review documents.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.UserInfo.Models.DocumentViewerFileType">
            <summary>
            Enum of all the possible file types for the default viewer mode.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.UserInfo.Models.DocumentViewerFileType.Default">
            <summary>
            Use default value for the DocumentViewerFileType property.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.UserInfo.Models.DocumentViewerFileType.Viewer">
            <summary>
            Viewer file type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.UserInfo.Models.DocumentViewerFileType.Image">
            <summary>
            Image file type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.UserInfo.Models.DocumentViewerFileType.LongText">
            <summary>
            Long Text file type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.UserInfo.Models.DocumentViewerFileType.Native">
            <summary>
            Native file type.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.UserInfo.Models.DocumentViewerFileType.Production">
            <summary>
            Production file type.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.UserInfo.Models.DocumentViewerProperties">
            <summary>
            Represents properties that are related to the document viewer.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.DocumentViewerProperties.AllowDocumentViewerChange">
            <summary>
            Gets or sets a Boolean value indicating whether the user will be able to change the document viewer modes.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.DocumentViewerProperties.AllowKeyboardShortcuts">
            <summary>
            Gets or sets a Boolean value indicating whether the user can see the keyboard shortcuts icon in the core reviewer interface.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.DocumentViewerProperties.AllowDocumentSkipPreferenceChange">
            <summary>
            Gets or sets whether the user has the ability to change their preference to skip documents during review that no longer meet the original conditions of a view due to propagation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.DocumentViewerProperties.DefaultSelectedFileType">
            <summary>
            Gets or sets the default viewer mode.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.DocumentViewerProperties.DocumentViewer">
            <summary>
            Gets or sets the which viewer the user can access when reviewing documents.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.DocumentViewerProperties.SkipDefaultPreference">
            <summary>
            Gets or sets a Boolean value indicating whether the user advances to the next document in the queue that matches the defined view conditions when the user clicks Save and Next.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.UserInfo.Models.EmailPreference">
            <summary>
            Enum of all the possible email preferences for the user's email preference.
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.UserInfo.Models.EmailPreference.Default">
            <summary>
            Use default value for EmailPreference property
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.UserInfo.Models.EmailPreference.All">
            <summary>
            Receive all emails
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.UserInfo.Models.EmailPreference.ErrorOnly">
            <summary>
            Receive emails on errors only
            </summary>
        </member>
        <member name="F:Relativity.Services.Interfaces.UserInfo.Models.EmailPreference.None">
            <summary>
            Receive no emails
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.UserInfo.Models.UserInfo">
            <summary>
            Represents information about a user obtain from the admin-level context.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserInfo.ArtifactID">
            <summary>
            Gets or sets the ArtifactID field of a User object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserInfo.FullName">
            <summary>
            Gets or sets the FullName field of a User object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserInfo.Email">
            <summary>
            Gets or sets the EmailAddress field of a User object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserInfo.LastLoginDate">
            <summary>
            Gets or sets the LastLoginDate field of a User object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserInfo.RelativityAccess">
            <summary>
            Gets or sets the RelativityAccess field of a User object.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.UserInfo.Models.UserInfoQueryResultSet">
            <summary>
            Represents a list of users matching the conditions specified in a query.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserInfoQueryResultSet.DataResults">
            <summary>
            Gets or sets the results of the query as a list of UserInfo objects.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserInfoQueryResultSet.ResultCount">
            <summary>
            Gets or sets the number of objects returned by the current query.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserInfoQueryResultSet.TotalResultCount">
            <summary>
            Gets or sets the total number of objects in Relativity that meet the criteria of the query. Due to paging, this count may be larger than the number of objects returned in the ResultCount property.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserInfoQueryResultSet.CurrentStartIndex">
            <summary>
            Gets or sets the index of the first artifact in the result set.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.UserInfo.Models.UserRequest">
            <summary>
            Represents a DTO used as a request for creating or updating a user.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserRequest.AllowSettingsChange">
            <summary>
            Gets or sets a Boolean value indicating whether the user will be able to change a limited number of their settings.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserRequest.Client">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> identifier for the client associated with the user
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserRequest.DefaultFilterVisibility">
            <summary>
            Gets or sets a Boolean value indicating whether filters on all columns are visible by default.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserRequest.DocumentViewerProperties">
            <summary>
            Gets or sets user properties that are related to the document viewer.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserRequest.DisableOnDate">
            <summary>
            Gets or sets the date when the user's Relativity access will be auto-disabled.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserRequest.EmailAddress">
            <summary>
            Gets or sets the user's email address in the format name@domain.extension.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserRequest.EmailPreference">
            <summary>
            Gets or sets the user's preference for email notifications when adding or deleting Users or Groups.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserRequest.FirstName">
            <summary>
            Gets or sets the user's first name.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserRequest.ItemListPageLength">
            <summary>
            Gets or sets the default list length for all view in Relativity for the user.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserRequest.LastName">
            <summary>
            Gets or sets the user's last name.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserRequest.RelativityAccess">
            <summary>
            Gets or sets whether the user can to log in to Relativity and be considered for billing under your Relativity license.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserRequest.SavedSearchDefaultsToPublic">
            <summary>
            Gets or sets a Boolean value indicating whether saved searches are public or private by default.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserRequest.TrustedIPs">
            <summary>
            Gets or sets an IP address or addresses that are valid locations from which the user can log in from.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserRequest.Type">
            <summary>
            Gets or sets the user's type. Type is for reference purposes only and has no impact on access or billing.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the user.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserRequest.Notes">
            <summary>
            Gets or sets an optional description or other information about the user.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.Models.UserRequest.#ctor">
            <summary>
            Initializes an instance of the UserRequest class with all properties set to their default values.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.Models.UserRequest.#ctor(Relativity.Services.Interfaces.UserInfo.Models.UserResponse)">
            <summary>
            Initializes an instance of the UserRequest class with a response object, which is useful for chaining commands. 
            </summary>
            <param name="userResponse">User response to convert to a request.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.Models.UserRequest.op_Implicit(Relativity.Services.Interfaces.UserInfo.Models.UserResponse)~Relativity.Services.Interfaces.UserInfo.Models.UserRequest">
            <summary>
            Allows a UserResponse to be implicitly converted to a UserRequest
            </summary>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.UserInfo.Models.UserResponse">
            <summary>
            Represents the results of a read operation on a user.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserResponse.AllowSettingsChange">
            <summary>
            Gets or sets a Boolean value indicating whether the user will be able to change a limited number of their settings.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserResponse.Client">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> identifier for the client associated with the user.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserResponse.DefaultFilterVisibility">
            <summary>
            Gets or sets a Boolean value indicating whether filters on all columns are visible by default.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserResponse.DisableOnDate">
            <summary>
            Gets or sets the date when the user's Relativity access will be auto-disabled.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserResponse.DocumentViewerProperties">
            <summary>
            Gets or sets user properties that are related to the document viewer.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserResponse.EmailAddress">
            <summary>
            Gets or sets the user's email address in the format name@domain.extension.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserResponse.EmailPreference">
            <summary>
            Gets or sets the user's preference for email notifications when adding or deleting Users or Groups.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserResponse.FirstName">
            <summary>
            Gets or sets the user's first name.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserResponse.ItemListPageLength">
            <summary>
            Gets or sets the default list length for all view in Relativity for the user.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserResponse.LastName">
            <summary>
            Gets or sets the user's last name.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserResponse.RelativityAccess">
            <summary>
            Gets or sets whether the user can to log in to Relativity and be considered for billing under your Relativity license.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserResponse.SavedSearchDefaultsToPublic">
            <summary>
            Gets or sets a Boolean value indicating whether saved searches are public or private by default.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserResponse.TrustedIPs">
            <summary>
            Gets or sets an IP address or addresses that are valid locations from which the user can log in from.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserResponse.Type">
            <summary>
            Gets or sets the user's type. Type is for reference purposes only and has no impact on access or billing.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserResponse.Keywords">
            <summary>
            Gets or sets any keywords associated with the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserResponse.Notes">
            <summary>
            Gets or sets an optional description or other information about the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserResponse.CreatedOn">
            <summary>
            Gets the date and time when the artifact was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserResponse.CreatedBy">
            <summary>
            Gets the Artifact ID and name of the user who created the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserResponse.LastModifiedBy">
            <summary>
            Gets the Artifact ID and name of the user who recently updated the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserResponse.LastModifiedOn">
            <summary>
            Gets the date and time when the artifact was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserResponse.Meta">
            <summary>
            Gets a list of unsupported and read-only properties on the current artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserResponse.Actions">
            <summary>
            Gets a list of RESTful operations that a user has permissions to perform on the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserResponse.LastLoginDate">
            <summary>
            Gets or sets the date when the user last logged in.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.UserInfo.Models.UserSettingRequest">
            <summary>
            Represents a request for updating a user's settings.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserSettingRequest.DefaultFilterVisibility">
            <summary>
            Gets or sets a Boolean value indicating whether filters on all columns are visible by default.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserSettingRequest.DefaultSelectedFileType">
            <summary>
            Gets or sets the default viewer mode.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserSettingRequest.EmailAddress">
            <summary>
            Gets or sets the user's email address in the format name@domain.extension.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserSettingRequest.EmailPreference">
            <summary>
            Gets or sets the user's preference for email notifications when adding or deleting Users or Groups.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserSettingRequest.FirstName">
            <summary>
            Gets or sets the user's first name.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserSettingRequest.ItemListPageLength">
            <summary>
            Gets or sets the default list length for all view in Relativity for the user.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserSettingRequest.LastName">
            <summary>
            Gets or sets the user's last name.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserSettingRequest.SavedSearchDefaultsToPublic">
            <summary>
            Gets or sets a Boolean value indicating whether saved searches are public or private by default.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserSettingRequest.SkipDefaultPreference">
            <summary>
            Gets or sets a Boolean value indicating whether the user advances to the next document in the queue that matches the defined view conditions when the user clicks Save and Next.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.Models.UserSettingRequest.#ctor">
            <summary>
            Initializes an instance of the UserSettingsRequest class with all properties set to their default values.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.Models.UserSettingRequest.#ctor(Relativity.Services.Interfaces.UserInfo.Models.UserSettingResponse)">
            <summary>
            Initializes an instance of the UserSettingsRequest class with a response object, which is useful for chaining commands. 
            </summary>
            <param name="userSettingResponse">User Settings response to convert to a request.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.UserInfo.Models.UserSettingRequest.op_Implicit(Relativity.Services.Interfaces.UserInfo.Models.UserSettingResponse)~Relativity.Services.Interfaces.UserInfo.Models.UserSettingRequest">
            <summary>
            Allows a UserSettingResponse to be implicitly converted to a UserSettingRequest
            </summary>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.UserInfo.Models.UserSettingResponse">
            <summary>
            Represents the results of a read operation on a user's settings.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserSettingResponse.Actions">
            <summary>
            Gets a list of RESTful operations that a user has permissions to perform on the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserSettingResponse.DefaultFilterVisibility">
            <summary>
            Gets or sets a Boolean value indicating whether filters on all columns are visible by default.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserSettingResponse.DefaultSelectedFileType">
            <summary>
            Gets or sets the default viewer mode.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserSettingResponse.EmailAddress">
            <summary>
            Gets or sets the user's email address in the format name@domain.extension.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserSettingResponse.EmailPreference">
            <summary>
            Gets or sets the user's preference for email notifications when adding or deleting Users or Groups.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserSettingResponse.FirstName">
            <summary>
            Gets or sets the user's first name.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserSettingResponse.ItemListPageLength">
            <summary>
            Gets or sets the default list length for all view in Relativity for the user.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserSettingResponse.LastName">
            <summary>
            Gets or sets the user's last name.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserSettingResponse.Meta">
            <summary>
            Gets a list of unsupported and read-only properties on the current artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserSettingResponse.SavedSearchDefaultsToPublic">
            <summary>
            Gets or sets a Boolean value indicating whether saved searches are public or private by default.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.UserInfo.Models.UserSettingResponse.SkipDefaultPreference">
            <summary>
            Gets or sets a Boolean value indicating whether the user advances to the next document in the queue that matches the defined view conditions when the user clicks Save and Next.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Workspace.IWorkspaceManager">
            <summary>
            Exposes the methods for working with workspace objects.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.CreateAsync(Relativity.Services.Interfaces.Workspace.Models.WorkspaceRequest)">
            <summary>
            Adds a workspace to Relativity.
            </summary>
            <param name="workspaceRequest">A request object containing the data used to create the workspace.</param>
            <returns>An object containing data about the new workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.CreateAsync(Relativity.Services.Interfaces.Workspace.Models.WorkspaceRequest,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Adds a workspace to Relativity.
            </summary>
            <param name="workspaceRequest">A request object containing the data used to create the workspace.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>An object containing data about the new workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.CreateAsync(Relativity.Services.Interfaces.Workspace.Models.WorkspaceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds a workspace to Relativity.
            </summary>
            <param name="workspaceRequest">A request object containing the data used to create the workspace.</param>
            <param name="cancel">A request to cancel the execution of a query for an object. </param>
            <returns>An object containing data about the new workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.CreateAsync(Relativity.Services.Interfaces.Workspace.Models.WorkspaceRequest,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Adds a workspace to Relativity.
            </summary>
            <param name="workspaceRequest">A request object containing the data used to create the workspace.</param>
            <param name="cancel">A request to cancel the execution of a query for an object. </param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>An object containing data about the new workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.ReadAsync(System.Int32)">
            <summary>
            Retrieves all metadata for a workspace.
            </summary>
            <param name="workspaceID">The Artifact ID of workspace.</param>
            <returns>An object containing data about the requested workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.ReadAsync(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Retrieves advanced metadata for a workspace, including information about additional actions eligible.
            </summary>
            <param name="workspaceID">The Artifact ID of the workspace.</param>
            <param name="includeMetadata">A Boolean value indicating whether to return extended workspace metadata in the response.</param>
            <param name="includeActions">A Boolean value indicating whether to return a list of operations eligible to the current user of this workspace.</param>
            <returns>An object containing data about the requested workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.Workspace.Models.WorkspaceRequest)">
            <summary>
            Modifies the properties of a workspace.
            </summary>
            <param name="workspaceID">The Artifact ID of the workspace.</param>
            <param name="workspaceRequest">The data about the workspace being updated.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.UpdateAsync(System.Int32,Relativity.Services.Interfaces.Workspace.Models.WorkspaceRequest,System.DateTime)">
            <summary>
            Modifies the properties of a workspace.
            </summary>
            <param name="workspaceID">The Artifact ID of the workspace.</param>
            <param name="workspaceRequest">The data about the workspace being updated.</param>
            <param name="lastModifiedOn">The date and time used for comparison with the last modified date assigned to the workspace.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.DeleteAsync(System.Int32)">
            <summary>
            Deletes a workspace.
            </summary>
            <param name="workspaceID">The Artifact ID of the workspace to delete.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.DeleteAsync(System.Int32,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Deletes a workspace.
            </summary>
            <param name="workspaceID">The Artifact ID of the workspace to delete.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.DeleteAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Deletes a workspace.
            </summary>
            <param name="workspaceID">The Artifact ID of the workspace to delete.</param>
            <param name="cancel">A request to cancel the execution of a query for an object. </param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.DeleteAsync(System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Deletes a workspace.
            </summary>
            <param name="workspaceID">The Artifact ID of the workspace to delete.</param>
            <param name="cancel">A request to cancel the execution of a query for an object. </param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.GetMetaAsync">
            <summary>
            Get Meta Information for workspace creation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.GetDefaultDownloadHandlerURLAsync">
            <summary>
            Get Default Download Handler URL.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.QueryWorkspaceByGroupAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Int32)">
            <sumary>
            Retrieves the list of workspaces where the given group is a member.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="groupID">The Artifact ID of the group.</param>
            <returns>Returns the results of the executed query that contains visible workspaces where the group is a member.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.QueryWorkspaceByGroupAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Int32,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <sumary>
            Retrieves the list of workspaces where the given group is a member.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="groupID">The Artifact ID of the group.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query that contains visible workspaces where the group is a member.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.QueryWorkspaceByGroupAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <sumary>
            Retrieves the list of workspaces where the given group is a member.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="groupID">The Artifact ID of the group.</param>
            <param name="cancel">A request to cancel the execution of a query for an object. </param>
            <returns>Returns the results of the executed query that contains visible workspaces where the group is a member.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.QueryWorkspaceByGroupAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <sumary>
            Retrieves the list of workspaces where the given group is a member.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="groupID">The Artifact ID of the group.</param>
            <param name="cancel">A request to cancel the execution of a query for an object. </param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query that contains visible workspaces where the group is a member.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.GetEligibleResourcePoolsAsync">
            <summary>
            Retrieves a list of resource pools that are eligible for a workspace's ResourcePool property.
            </summary>
            <returns>A list of identifiers for resource pools.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.GetEligibleFileRepositoriesAsync(System.Int32)">
            <summary>
            Retrieves a list of file repository servers that are eligible for a workspace's DefaultFileRepository and DataGridFileRepository properties.
            </summary>
            <param name="resourcePoolID">The artifactID of the resource pool where the servers must be a member.</param>
            <returns>A list of identifiers for file repositories in the provided resource pool.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.GetEligibleCacheLocationsAsync(System.Int32)">
            <summary>
            Retrieves a list of cache locations that are eligible for a workspace's DefaultCacheLocation property.
            </summary>
            <param name="resourcePoolID">The artifactID of the resource pool where the servers must be a member.</param>
            <returns>A list of identifiers for cache locations in the provided resource pool.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.GetEligibleSqlServersAsync(System.Int32)">
            <summary>
            Retrieves a list of SQL servers that are eligible for a workspace's SqlServer property.
            </summary>
            <param name="resourcePoolID">The artifactID of the resource pool where the servers must be a member.</param>
            <returns>A list of identifiers for sql servers in the provided resource pool.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.GetEligibleAzureCredentialsAsync(System.Int32)">
            <summary>
            Retrieves a list of azure credentials that are eligible for a workspace's Azure Credentials property.
            </summary>
            <param name="resourcePoolID">The artifactID of the resource pool where the servers must be a member.</param>
            <returns>A list of identifiers for workspace statuses</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.GetEligibleAzureFileSystemCredentialsAsync(System.Int32)">
            <summary>
            Retrieves a list of azure file system credentials that are eligible for a workspace's Azure File System Credentials property.
            </summary>
            <param name="resourcePoolID">The artifactID of the resource pool where the servers must be a member.</param>
            <returns>A list of identifiers for workspace statuses</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.QueryEligibleClientsAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32)">
            <sumary>
            Retrieves a list of clients that are eligible for a workspace's Client property.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <returns>Returns the results of the executed query that contains visible clients.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.QueryEligibleClientsAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <sumary>
            Retrieves a list of clients that are eligible for a workspace's Client property.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query that contains visible clients.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.QueryEligibleClientsAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <sumary>
            Retrieves a list of clients that are eligible for a workspace's Client property.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="cancel">A request to cancel the execution of a query for an object.</param>
            <returns>Returns the results of the executed query that contains visible clients.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.QueryEligibleClientsAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <sumary>
            Retrieves a list of clients that are eligible for a workspace's Client property.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="cancel">A request to cancel the execution of a query for an object.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query that contains visible clients.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.QueryEligibleGroupsAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32)">
            <sumary>
            Retrieves a list of groups that are eligible to be members of a workspace.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <returns>Returns the results of the executed query that contains visible groups.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.QueryEligibleGroupsAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <sumary>
            Retrieves a list of groups that are eligible to be members of a workspace.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query that contains  visible groups.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.QueryEligibleGroupsAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <sumary>
            Retrieves a list of groups that are eligible to be members of a workspace.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="cancel">A request to cancel the execution of a query for an object.</param>
            <returns>Returns the results of the executed query that contains visible groups.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.QueryEligibleGroupsAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <sumary>
            Retrieves a list of groups that are eligible to be members of a workspace.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="cancel">A request to cancel the execution of a query for an object.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query that contains visible groups.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.QueryEligibleMattersAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32)">
            <sumary>
            Retrieves a list of matters that are eligible for a workspace's Matter property.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <returns>Returns the results of the executed query that contains visible matters for the given client.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.QueryEligibleMattersAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <sumary>
            Retrieves a list of matters that are eligible for a workspace's Matter property.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query that contains visible matters for the given client.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.QueryEligibleMattersAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <sumary>
            Retrieves a list of matters that are eligible for a workspace's Matter property.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="cancel">A request to cancel the execution of a query for an object.</param>
            <returns>Returns the results of the executed query that contains visible matters for the given client.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.QueryEligibleMattersAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <sumary>
            Retrieves a list of matters that are eligible for a workspace's Matter property.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="cancel">A request to cancel the execution of a query for an object.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query that contains visible matters for the given client.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.QueryEligibleSavedSearchesAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Int32)">
            <sumary>
            Retrieves a list of saved searches that are eligible for a workspace's ProductionRestrictions property.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="workspaceID">The Artifact ID of the workspace.</param>
            <returns>Returns the results of the executed query that contains visible saved searches in the workspace..</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.QueryEligibleSavedSearchesAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Int32,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <sumary>
            Retrieves a list of saved searches that are eligible for a workspace's ProductionRestrictions property.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="workspaceID">The Artifact ID of the workspace.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query that contains visible saved searches in the workspace..</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.QueryEligibleSavedSearchesAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <sumary>
            Retrieves a list of saved searches that are eligible for a workspace's ProductionRestrictions property.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="workspaceID">The Artifact ID of the workspace.</param>
            <param name="cancel">A request to cancel the execution of a query for an object.</param>
            <returns>Returns the results of the executed query that contains visible saved searches in the workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.QueryEligibleSavedSearchesAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <sumary>
            Retrieves a list of saved searches that are eligible for a workspace's ProductionRestrictions property.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="workspaceID">The Artifact ID of the workspace.</param>
            <param name="cancel">A request to cancel the execution of a query for an object.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query that contains visible saved searches in the workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.QueryEligibleTemplatesAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32)">
            <sumary>
            Retrieves a list of workspaces that are eligible to for a new workspace's template property.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <returns>Returns the results of the executed query that contains visible workspaces.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.QueryEligibleTemplatesAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <sumary>
            Retrieves a list of workspaces that are eligible to for a new workspace's template property.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query that contains visible workspaces.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.QueryEligibleTemplatesAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <sumary>
            Retrieves a list of workspaces that are eligible to for a new workspace's template property.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="cancel">A request to cancel the execution of a query for an object. </param>
            <returns>Returns the results of the executed query that contains visible workspaces.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.QueryEligibleTemplatesAsync(Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <sumary>
            Retrieves a list of workspaces that are eligible to for a new workspace's template property.
            </sumary>
            <param name="request">A QueryRequest object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned QueryResultSet object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="cancel">A request to cancel the execution of a query for an object. </param>
            <param name="progress">A callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query that contains visible workspaces.</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.GetEligibleSqlFullTextLanguagesAsync">
            <summary>
            Retrieves a list of eligible languages for workspace's SQLFullTextLanguage property.
            </summary>
            <returns>A list of language names as strings</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.GetEligibleStatusesAsync">
            <summary>
            Retrieves a list of choices that are eligible to for a workspace's Status property.
            </summary>
            <returns>A list of identifiers for workspace statuses</returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.RetryFailedCreateEventHandlersAsync(System.Int32)">
            <summary>
            Retry Failed Create Event Handlers for specified workspace.
            </summary>
            <param name="workspaceID">The Artifact ID of workspace.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.GetWorkspaceSummaryAsync(System.Int32)">
            <summary>
            Retrieves statistics about the workspace.
            </summary>
            <param name="workspaceID">The Artifact ID of the workspace.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.IWorkspaceManager.MoveToColdStorageAsync(System.Int32)">
            <summary>
            Migrates a workspace to the Cold Storage
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Workspace.IWorkspaceModule">
            <summary>
            Workspace Module
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Workspace.Models.SqlFullTextLanguageOptions">
            <summary>
            Represents default and available Sql Full Text Languages for Workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.SqlFullTextLanguageOptions.DefaultLanguageLcid">
            <summary>
            Gets or sets the default language.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.SqlFullTextLanguageOptions.Languages">
            <summary>
            Gets or sets the available languages.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Workspace.Models.WorkspaceRequest">
            <summary>
            Represents a request for creating or updating a workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceRequest.DownloadHandlerUrl">
            <summary>
            Gets or sets the default URL for making downloaded files available to users.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceRequest.EnableDataGrid">
            <summary>
            Gets or sets whether or not the workspace can have fields that save to Data Grid
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceRequest.Matter">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> identifier for the case or legal action associated with the workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceRequest.Name">
            <summary>
            Gets or sets the name for the workspace
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceRequest.ProductionRestrictions">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> identifier for the saved searched used to exclude documents from new production sets.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceRequest.ResourcePool">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> identifier for resource pool used by the workspace for the other ResourceInformation properties.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceRequest.DefaultFileRepository">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> identifier for file repository for the physical location of the files (including document natives and images)
            associated with the workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceRequest.DataGridFileRepository">
            <summary>
            Gets or sets specifies the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> identifier for file repository for the physical location of the text files used by Data Grid.
            If no file repository is specified for this field, and Data Grid is enabled, Data Grid stores text in the default file repository.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceRequest.DefaultCacheLocation">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> identifier for Cache Location Server where the natives, images,
            productions, and other file types used by the viewer are temporarily stored.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceRequest.SqlServer">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> identifier for SQL server where the workspace database is stored.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceRequest.AzureCredentials">
            <summary>
             Gets or sets the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> identifier Azure credentials for workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceRequest.AzureFileSystemCredentials">
            <summary>
             Gets or sets the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> identifier Azure File System credentials for workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceRequest.SqlFullTextLanguage">
            <summary>
            Gets or sets the language used for determining the correct word-break characters used in the full text index inside the workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceRequest.Status">
            <summary>
            Gets or sets the workspace's status which can be added to views for filtering workspaces.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceRequest.Template">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> identifier for an existing workspace structure used to create the workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceRequest.WorkspaceAdminGroup">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> identifier for the group selected as admin of the workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceRequest.Keywords">
            <summary>
            Gets or sets any keywords associated with the workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceRequest.Notes">
            <summary>
            Gets or sets an optional description or other information about the workspace.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.Models.WorkspaceRequest.#ctor">
            <summary>
            Initializes an instance of the WorkspaceRequest class with all properties set to their default values.
            </summary>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.Models.WorkspaceRequest.#ctor(Relativity.Services.Interfaces.Workspace.Models.WorkspaceResponse)">
            <summary>
            Initializes an instance of the WorkspaceRequest class with a response object, which is useful for chaining commands.
            </summary>
            <param name="workspaceResponse">User response to convert to a request.</param>
        </member>
        <member name="M:Relativity.Services.Interfaces.Workspace.Models.WorkspaceRequest.op_Implicit(Relativity.Services.Interfaces.Workspace.Models.WorkspaceResponse)~Relativity.Services.Interfaces.Workspace.Models.WorkspaceRequest">
            <summary>
            Allows a WorkspaceResponse to be implicitly converted to a WorkspaceRequest
            </summary>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Interfaces.Workspace.Models.WorkspaceResponse">
            <summary>
            Represents the results of a read operation on a workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceResponse.Client">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> identifier for the client associated with the workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceResponse.ClientNumber">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> string for the client number associated with the workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceResponse.DownloadHandlerUrl">
            <summary>
            Gets or sets the default URL for making downloaded files available to users.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceResponse.EnableDataGrid">
            <summary>
            Gets or sets whether or not the workspace can have fields that save to Data Grid
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceResponse.Matter">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> identifier for the case or legal action associated with the workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceResponse.MatterNumber">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> string for the matter number associated with the workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceResponse.ProductionRestrictions">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> identifier for the saved searched used to exclude documents from new production sets.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceResponse.ResourcePool">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> identifier for resource pool used by the workspace for the other ResourceInformation properties.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceResponse.DefaultFileRepository">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> identifier for file repository for the physical location of the files (including document natives and images)
            associated with the workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceResponse.DataGridFileRepository">
            <summary>
            Gets or sets specifies the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> identifier for file repository for the physical location of the text files used by Data Grid.
            If no file repository is specified for this field, and Data Grid is enabled, Data Grid stores text in the default file repository.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceResponse.DefaultCacheLocation">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> identifier for Cache Location Server where the natives, images,
            productions, and other file types used by the viewer are temporarily stored.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceResponse.SqlServer">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> identifier for SQL server where the workspace database is stored.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceResponse.AzureCredentials">
            <summary>
             Gets or sets the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> identifier Azure credentials for workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceResponse.AzureFileSystemCredentials">
            <summary>
             Gets or sets the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> identifier Azure File System credentials for workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceResponse.SqlFullTextLanguage">
            <summary>
            Gets or sets the language used for determining the correct word-break characters used in the full text index inside the workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceResponse.Status">
            <summary>
            Gets or sets the workspace's status which can be added to views for filtering workspaces.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceResponse.WorkspaceAdminGroup">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Interfaces.Shared.Securable`1"/> identifier for the group selected as admin of the workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceResponse.Keywords">
            <summary>
            Gets or sets any keywords associated with the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceResponse.Notes">
            <summary>
            Gets or sets an optional description or other information about the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceResponse.CreatedOn">
            <summary>
            Gets the date and time when the artifact was added to Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceResponse.CreatedBy">
            <summary>
            Gets the Artifact ID and name of the user who created the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceResponse.LastModifiedBy">
            <summary>
            Gets the Artifact ID and name of the user who recently updated the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceResponse.LastModifiedOn">
            <summary>
            Gets the date and time when the artifact was most recently updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceResponse.Meta">
            <summary>
            Gets a list of unsupported and read-only properties on the current artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceResponse.Actions">
            <summary>
            Gets a list of RESTful operations that a user has permissions to perform on the artifact.
            </summary>
        </member>
        <member name="T:Relativity.Services.Interfaces.Workspace.Models.WorkspaceSummary">
            <summary>
            This class represents the workspace summary.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceSummary.DocumentCount">
            <summary>
            The count of documents in the workspace.
            </summary>
        </member>
        <member name="P:Relativity.Services.Interfaces.Workspace.Models.WorkspaceSummary.FileSize">
            <summary>
            Size of the workspace file.
            </summary>
        </member>
        <member name="T:Relativity.Services.Client.IClientModule">
            <summary>
            Client Module Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.Client.IClientManager">
            <summary>
            IClientManager interface enables interaction with Relativity Client.
            </summary>
        </member>
        <member name="M:Relativity.Services.Client.IClientManager.CreateSingleAsync(Relativity.Services.Client.Client)">
            <summary>
            Asynchronously creates an instance of Client.
            </summary>
            <param name="clientDTO">Client DTO</param>
            <returns>ArtifactID of the created Client.</returns>
        </member>
        <member name="M:Relativity.Services.Client.IClientManager.QueryAsync(Relativity.Services.Query)">
            <summary>
            Asynchronously query for a collection of Client instances.
            </summary>
            <param name="query">Query</param>
            <returns>A ClientQueryResultSet</returns>
        </member>
        <member name="M:Relativity.Services.Client.IClientManager.QueryAsync(Relativity.Services.Query,System.Int32)">
            <summary>
            Asynchronously query for a collection of Client instances.
            </summary>
            <param name="query">Query</param>
            <param name="length">Number of results to return.</param>
            <returns>A ClientQueryResultSet</returns>
        </member>
        <member name="M:Relativity.Services.Client.IClientManager.QuerySubsetAsync(System.String,System.Int32,System.Int32)">
            <summary>
            Asynchronously query for a subset of a collection of Client instances.
            </summary>
            <param name="queryToken">Search Query Token</param>
            <param name="start">Starting index for this query.</param>
            <param name="length">Number of results to return.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Client.IClientManager.ReadSingleAsync(System.Int32)">
            <summary>
            Asynchronously read a instance of Client.
            </summary>
            <param name="clientArtifactID">ArtifactID of the Client to read.</param>
            <returns>A Client</returns>
        </member>
        <member name="M:Relativity.Services.Client.IClientManager.DeleteSingleAsync(System.Int32)">
            <summary>
            Asyncronously deletes an instance of a Client.
            </summary>
            <param name="clientArtifactID">ArtifactID of the Client to delete.</param>
        </member>
        <member name="M:Relativity.Services.Client.IClientManager.UpdateSingleAsync(Relativity.Services.Client.Client)">
            <summary>
            Asynchronously updates an instance of Client.
            </summary>
            <param name="clientDTO">Client to Update.</param>
        </member>
        <member name="M:Relativity.Services.Client.IClientManager.GetStatusChoicesForClientAsync">
            <summary>
            Get the available status choices.
            </summary>
            <returns>List of available status choices.</returns>
        </member>
        <member name="T:Relativity.Services.Client.ClientQueryResultSet">
            <summary>
            Client Query Result Set
            </summary>
        </member>
        <member name="T:Relativity.Services.ChoiceQuery.Choice">
            <summary>
            Represents a Choice in Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.ChoiceQuery.Choice.ArtifactID">
            <summary>
            Gets or sets Artifact ID of choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.ChoiceQuery.Choice.FullPath">
            <summary>
            Gets or sets FullPath in hierarchy of choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.ChoiceQuery.Choice.Name">
            <summary>
            Gets or sets Name of choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.ChoiceQuery.Choice.Order">
            <summary>
            Gets or sets Order of choice.
            </summary>
        </member>
        <member name="P:Relativity.Services.ChoiceQuery.Choice.ParentArtifactID">
            <summary>
            Gets or sets parent choice ArtifactID of choice. Null value is treated a top level choice in hierarchy.
            </summary>
        </member>
        <member name="T:Relativity.Services.DataContracts.DTOs.EmailNotifications.EmailNotificationRequest">
            <summary>
            	An object containing information about requested email notification.
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.EmailNotifications.EmailNotificationRequest.Sender">
            <summary>
            	Email from which is going to be an author of an email.
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.EmailNotifications.EmailNotificationRequest.Recipients">
            <summary>
            	List of recipient's email addresses.
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.EmailNotifications.EmailNotificationRequest.Subject">
            <summary>
            	Subject of an email.
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.EmailNotifications.EmailNotificationRequest.Body">
            <summary>
            	Body of an email.
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.EmailNotifications.EmailNotificationRequest.IsBodyHtml">
            <summary>
            	Parameter stating whether string passed as <see cref="P:Relativity.Services.DataContracts.DTOs.EmailNotifications.EmailNotificationRequest.Body" /> is HTML or not. Defaults to false.
            </summary>
        </member>
        <member name="T:Relativity.Services.DataContracts.DTOs.EmailNotifications.EmailNotificationResponse">
            <summary>
            	An object representing response payload containing information about sent emails.
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.EmailNotifications.EmailNotificationResponse.EmailNotifications">
            <summary>
            	Set of statuses of each email notification sent as a result of the request.
            </summary>
        </member>
        <member name="T:Relativity.Services.DataContracts.DTOs.EmailNotifications.EmailNotificationStatus">
            <summary>
            	Information about an attempt to send a single email.
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.EmailNotifications.EmailNotificationStatus.Recipient">
            <summary>
            	Recipient of the email notification.
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.EmailNotifications.EmailNotificationStatus.IsSent">
            <summary>
            	If SMTP immediately rejected an email (e.g. invalid email format, or SMTP misconfiguration), it returns false.
            	Otherwise returns true - but it does not mean that recipient received email with 100% guarantee. It means
            	SMTP attempted to send an email.
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.EmailNotifications.EmailNotificationStatus.Message">
            <summary>
            	Detailed information about email status (e.g. exception details if sending an email has failed). 
            </summary>
        </member>
        <member name="T:Relativity.Services.DataContracts.DTOs.ItemListView.DashboardDataForDropdown">
            <summary>
            Metadata for a dashboard, for summary display in dropdown widgets on the site.
            </summary>
        </member>
        <member name="M:Relativity.Services.DataContracts.DTOs.ItemListView.DashboardDataForDropdown.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Relativity.Services.DataContracts.DTOs.ItemListView.DashboardDataForDropdown"/> class.
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ItemListView.DashboardDataForDropdown.ArtifactId">
            <summary>
            ArtifactId identifier for the dashboard.
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ItemListView.DashboardDataForDropdown.Name">
            <summary>
            Dashboard name.
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ItemListView.DashboardDataForDropdown.Order">
            <summary>
            Sort order of the dashboard.
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ItemListView.DashboardDataForDropdown.Permissions">
            <summary>
            Permissions set for the dashboard.
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ItemListView.DashboardDataForDropdown.AssociatedLockedApplications">
            <summary>
            List of applications to which a dashboard is associated where the application is locked. Empty or has content; never null.
            </summary>
        </member>
        <member name="T:Relativity.Services.DataContracts.DTOs.ItemListView.PermissionSetForObjectType">
            <summary>
            Represents permisisons associated with an 
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ItemListView.PermissionSetForObjectType.View">
            <summary>
            Permission to view
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ItemListView.PermissionSetForObjectType.Edit">
            <summary>
            Permission to Edit
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ItemListView.PermissionSetForObjectType.Delete">
            <summary>
            Permission to Delete
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ItemListView.PermissionSetForObjectType.Secure">
            <summary>
            Permission to Secure
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ItemListView.PermissionSetForObjectType.Add">
            <summary>
            Permission to Add
            </summary>
        </member>
        <member name="T:Relativity.Services.DataContracts.DTOs.ItemListView.WorkspaceTabListPageUrl">
            <summary>
            Data requared in Fluid item list of workspaces to know if link to default tab of workspace is one of Fluid list page or not.
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ItemListView.WorkspaceTabListPageUrl.CanRedirectToListPage">
            <summary>
            Indicates if Url is a link to Fluid list page(True) or not(False)
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ItemListView.WorkspaceTabListPageUrl.Url">
            <summary>
            Link to Fluid list page or NULL(if CanRredirectToListPage = False)
            </summary>
        </member>
        <member name="T:Relativity.Services.DataContracts.DTOs.ProgressReport">
            <summary>
            Represents a snap shot report of progress in a Kepler service
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ProgressReport.Message">
            <summary>
            Detailed message describing the current state of progress.
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ProgressReport.CompletedSteps">
            <summary>
            Number of completed steps of the total service operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.ProgressReport.TotalSteps">
            <summary>
            Number of total steps of the total service operation.
            </summary>
        </member>
        <member name="T:Relativity.Services.DataContracts.DTOs.Results.ExportInitializationResults">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.Results.ExportInitializationResults.RunID">
            <summary>
            The UUID that identifies an active export run
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.Results.ExportInitializationResults.RecordCount">
            <summary>
            The number of records intialized and ready for export,
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.Results.ExportInitializationResults.FieldData">
            <summary>
            The list of fields to be exported
            </summary>
        </member>
        <member name="T:Relativity.Services.DataContracts.DTOs.Results.StaticObject.BrandingQueueStatus">
            <summary>
            Represents the status of Branding queue item with name
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.Results.StaticObject.BrandingQueueStatus.Id">
            <summary>
            Id of status
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.Results.StaticObject.BrandingQueueStatus.Name">
            <summary>
            Status name
            </summary>
        </member>
        <member name="T:Relativity.Services.DataContracts.DTOs.Results.StaticObject.BrandingQueueStatusEnum">
            <summary>
            Represents the status of Branding queue item
            </summary>
        </member>
        <member name="T:Relativity.Services.DataContracts.DTOs.Results.StaticObject.FailedApplicationInstall">
            <summary>
            Represents the failed application install info
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.Results.StaticObject.FailedApplicationInstall.ApplicationInstallID">
            <summary>
            Id of failed application install
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.Results.StaticObject.FailedApplicationInstall.ApplicationName">
            <summary>
            Name of failed application
            </summary>
        </member>
        <member name="T:Relativity.Services.DataContracts.DTOs.Results.StaticObject.OCRQueueStatus">
            <summary>
            Represents the status of OCR queue item with name
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.Results.StaticObject.OCRQueueStatus.Id">
            <summary>
            Id of status
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.Results.StaticObject.OCRQueueStatus.Name">
            <summary>
            Status name
            </summary>
        </member>
        <member name="T:Relativity.Services.DataContracts.DTOs.Results.StaticObject.WorkspaceUpgradeQueueCode">
            <summary>
            Represents the code used in Workspcae Upgrade Queue
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.Results.StaticObject.WorkspaceUpgradeQueueCode.Id">
            <summary>
            Id of code
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.Results.StaticObject.WorkspaceUpgradeQueueCode.Name">
            <summary>
            Code name
            </summary>
        </member>
        <member name="T:Relativity.Services.DataContracts.DTOs.Results.UniqueFieldValuesResult">
            <summary>
            Represents the results of a query for unique field values.
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.Results.UniqueFieldValuesResult.FieldName">
            <summary>
            Gets or sets the name of the field that was queried.
            </summary>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.Results.UniqueFieldValuesResult.MaxNumberOfValuesReached">
            <summary>
            Gets or sets a bool indicating whether the number of values returned by the query reaches the maximum.
            </summary>
            <remarks>
            The MaxNumberOfValuesReached property references the  number of values specified in the DistinctBuilderMaxValue instance setting. 
            This setting is located in the Relativity.Data section of the Instance Settings table.
            </remarks>
        </member>
        <member name="P:Relativity.Services.DataContracts.DTOs.Results.UniqueFieldValuesResult.UniqueValues">
            <summary>
            Gets or sets the unique values for the queried field.
            </summary>
        </member>
        <member name="T:Relativity.Services.Field.FieldMetadata">
            <summary>
            Represents basic Field data
            </summary>
        </member>
        <member name="P:Relativity.Services.Field.FieldMetadata.FieldType">
            <summary>
            The type of the field
            </summary>
        </member>
        <member name="T:Relativity.Services.Field.Models.ImportBehavior">
            <summary>
            Controls how blank values are handled when importing through the Relativity Desktop Client.
            </summary>
        </member>
        <member name="F:Relativity.Services.Field.Models.ImportBehavior.None">
            <summary>
            No Import Behavior selected.
            </summary>
        </member>
        <member name="F:Relativity.Services.Field.Models.ImportBehavior.LeaveBlankValuesUnchanged">
            <summary>
            Relativity imports the fields with blank values.
            </summary>
        </member>
        <member name="F:Relativity.Services.Field.Models.ImportBehavior.ReplaceBlankValuesWithIdentifier">
            <summary>
            Relativity updates the blank relational field with the document identifier.
            </summary>
        </member>
        <member name="T:Relativity.Services.Document.File">
            <summary>
            Represents a File in Relativity
            </summary>
        </member>
        <member name="P:Relativity.Services.Document.File.Guid">
            <summary>
            File's Guid
            </summary>
        </member>
        <member name="P:Relativity.Services.Document.File.Order">
            <summary>
            File's Order
            </summary>
        </member>
        <member name="P:Relativity.Services.Document.File.Type">
            <summary>
            File's Type
            </summary>
        </member>
        <member name="P:Relativity.Services.Document.File.DocumentArtifactID">
            <summary>
            File's Document ArtifactID
            </summary>
        </member>
        <member name="P:Relativity.Services.Document.File.Rotation">
            <summary>
            File's Rotation
            </summary>
        </member>
        <member name="P:Relativity.Services.Document.File.Identifier">
            <summary>
            File's Identifier
            </summary>
        </member>
        <member name="P:Relativity.Services.Document.File.Location">
            <summary>
            File's Location
            </summary>
        </member>
        <member name="P:Relativity.Services.Document.File.InRepository">
            <summary>
            Whether or not the file is in the Repository
            </summary>
        </member>
        <member name="P:Relativity.Services.Document.File.Size">
            <summary>
            File's Size
            </summary>
        </member>
        <member name="P:Relativity.Services.Document.File.Details">
            <summary>
            File's Details
            </summary>
        </member>
        <member name="T:Relativity.Services.HierarchyExtensions.HierarchyCollection`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyCollection`1.#ctor(System.Collections.Generic.IEnumerable{Relativity.Services.HierarchyExtensions.HierarchyNode{`0}})">
            <summary>
            
            </summary>
            <param name="hierarchy"></param>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyCollection`1.GetFlatChildren">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyCollection`1.GetAllItems">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.HierarchyExtensions.HierarchyExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyExtensions.AsHierarchy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``1})">
            <summary>
            Turns a flat list of items into a hierarchical data structure.  The root
            levels will be any object that have no value set for parentIdProperty. 
            </summary>
            <typeparam name="T">Type of the object</typeparam>
            <typeparam name="TProperty">The type of the Id property on the object</typeparam>
            <param name="allItems">Items to place in the hierarchy</param>
            <param name="idProperty">Used to get the objects Id</param>
            <param name="parentIdProperty">Used to get the objects parent Id</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyExtensions.ToNestedList``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``1},System.Func{``0,``1})">
            <summary>
            
            </summary>
            <param name="allItems"></param>
            <param name="idProperty"></param>
            <param name="parentIdProperty"></param>
            <param name="childProperty"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyExtensions.AsHierarchy``2(System.Collections.Generic.IEnumerable{``0},``0,System.Func{``0,``1},System.Func{``0,``1})">
            <summary>
            Returns a hierarchical data structure with the parent item as the root.
            </summary>
            <typeparam name="T">Type of the object</typeparam>
            <typeparam name="TProperty">The type of the Id property on the object</typeparam>
            <param name="allItems">Items to place in the hierarchy</param>
            <param name="idProperty">Used to get the objects Id</param>
            <param name="parentIdProperty">Used to get the objects parent Id</param>
            <param name="parent">Used to get the objects parent Id</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.HierarchyExtensions.HierarchyNode`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyNode`1.#ctor(`0,System.Collections.Generic.IEnumerable{Relativity.Services.HierarchyExtensions.HierarchyNode{`0}},System.Int32,System.Int64,System.Int64)">
            <summary>
            
            </summary>
            <param name="node"></param>
            <param name="childNodes"></param>
            <param name="depth"></param>
            <param name="left"></param>
            <param name="right"></param>
        </member>
        <member name="P:Relativity.Services.HierarchyExtensions.HierarchyNode`1.Node">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.HierarchyExtensions.HierarchyNode`1.Parent">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.HierarchyExtensions.HierarchyNode`1.ChildNodes">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.HierarchyExtensions.HierarchyNode`1.Depth">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.HierarchyExtensions.HierarchyNode`1.IsRoot">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.HierarchyExtensions.HierarchyNode`1.HasChildren">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.HierarchyExtensions.HierarchyNode`1.Left">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.HierarchyExtensions.HierarchyNode`1.Right">
            <summary>
            
            </summary>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyNode`1.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyNode`1.GetEnumerator1">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyNode`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyNode`1.GetFlatChildren">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyNode`1.GetParents">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyNode`1.GetParentsDescending">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyNode`1.Equals(Relativity.Services.HierarchyExtensions.HierarchyNode{`0})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyNode`1.Equals(`0)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchyNode`1.CompareTo(Relativity.Services.HierarchyExtensions.HierarchyNode{`0})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.HierarchyExtensions.HierarchySearcher`2">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TProperty"></typeparam>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchySearcher`2.#ctor(System.Collections.Generic.IEnumerable{`0},System.Func{`0,`1},System.Func{`0,`1})">
            <summary>
            
            </summary>
            <param name="items"></param>
            <param name="idProperty"></param>
            <param name="parentIdProperty"></param>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchySearcher`2.GetAllRoots">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchySearcher`2.GetChildren(`0)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.HierarchySearcher`2.GetItemsParent(`0)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.HierarchyExtensions.IHierarchical`1">
            <summary>
            
            </summary>
            <typeparam name="TProperty"></typeparam>
        </member>
        <member name="P:Relativity.Services.HierarchyExtensions.IHierarchical`1.ParentId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.HierarchyExtensions.IHierarchical`1.ItemId">
            <summary>
            
            </summary>
        </member>
        <member name="T:Relativity.Services.HierarchyExtensions.IHierarchyCollection`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Relativity.Services.HierarchyExtensions.IHierarchySearcher`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.IHierarchySearcher`1.GetAllRoots">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.IHierarchySearcher`1.GetChildren(`0)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.HierarchyExtensions.IHierarchySearcher`1.GetItemsParent(`0)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.HierarchyExtensions.INestedSet">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.HierarchyExtensions.INestedSet.Left">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.HierarchyExtensions.INestedSet.Right">
            <summary>
            
            </summary>
        </member>
        <member name="T:Relativity.Services.ItemListView.ItemListFieldRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.AllowHtml">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.AvfID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.ColumnName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.ConnectorFieldArtifactID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.SourceFieldArtifactGuids">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.DisplayName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.HeaderName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.TrueValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.FalseValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.FieldTypeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.FormatString">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.ItemListType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.IsLinked">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.IsFilterable">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.IsSortable">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.IsSystem">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.IsReflected">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.IsRelational">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.FriendlyName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.MaxLength">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.StaticText">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.Width">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.Wrapping">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.DataGridEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.FilterType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.IncludeInTextIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.PopupPickerView">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.FieldTreeView">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.AssociativeObjectTypeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.Category">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.AllowGroupBy">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.AllowPivot">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListFieldRef.IsVisible">
            <summary>
            
            </summary>
        </member>
        <member name="T:Relativity.Services.ItemListView.ItemListView">
            <summary>
            Represents Relativity View without any filter conditions.
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListView.Name">
            <summary>
            Name of the ItemListView
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListView.ArtifactId">
            <summary>
            ArtifactID of the ItemListView
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListView.Order">
            <summary>
            Order of the ItemListView
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListView.FieldsIds">
            <summary>
            Ordered array of field ids
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListView.Sorts">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListView.RenderLinks">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListView.HasConditions">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListView.HasPermissionToEdit">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ObjectRule.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ObjectRule.TypeId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ObjectRule.Action">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ObjectRule.ParentObjectArtifactTypeId">
            <summary>
            
            </summary>
        </member>
        <member name="T:Relativity.Services.ItemListView.View">
            <summary>
            Data required by Fluid List View to display the currently active view
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.View.Name">
            <summary>
            Name of the ItemListView
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.View.ArtifactId">
            <summary>
            ArtifactID of the ItemListView
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.View.FieldsIds">
            <summary>
            Ordered array of field ids
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.View.Sorts">
            <summary>
            List of sort conditions
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.View.RenderLinks">
            <summary>
            Whether links should be rendered or not
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.View.HasConditions">
            <summary>
            Whether the View has any criteria
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.View.GroupDefinitionFieldName">
            <summary>
            The name of the GroupDefinitionField associated with the view.
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.View.QueryHint">
            <summary>
            The query hint.
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.View.DashboardArtifactId">
            <summary>
            Artifact ID, if any, of the Dashboard associated with the view.
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.View.AllConditionCount">
            <summary>
            All view conditions count
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.View.SavedSearchConditionCount">
            <summary>
            SavedSearch condition count(condition with operator 'in')
            </summary>
        </member>
        <member name="T:Relativity.Services.ItemListView.ViewDataForDropdown">
            <summary>
            Data required by Fluid List View to appropriate populate the a view within the views dropdown.
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ViewDataForDropdown.Name">
            <summary>
            Name of the ItemListView
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ViewDataForDropdown.ArtifactId">
            <summary>
            ArtifactID of the ItemListView
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ViewDataForDropdown.Permissions">
            <summary>
            Relevant permissions on the View. 
            </summary>
        </member>
        <member name="T:Relativity.Services.ItemListView.ItemListViewResultSet">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListViewResultSet.Success">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListViewResultSet.Message">
            <summary>
            Populated with error message, if any.
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListViewResultSet.Views">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListViewResultSet.FieldCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ItemListViewResultSet.ViewFieldWidthCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ViewResultSet.ActiveView">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ViewResultSet.Views">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ViewResultSet.FieldCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Relativity.Services.ItemListView.ViewResultSet.ViewFieldWidthCollection">
            <summary>
            Gets or sets the view field width collection.
            </summary>
            <value>
            The view field width collection.
            </value>
        </member>
        <member name="T:Relativity.Services.Notifications.MOTDRef">
            <summary>
            Message of the Day Reference
            </summary>
        </member>
        <member name="P:Relativity.Services.Notifications.MOTDRef.Message">
            <summary>
            Actual message that will dispalyed to users upon login
            </summary>
        </member>
        <member name="P:Relativity.Services.Notifications.MOTDRef.Enabled">
            <summary>
            Whether Message of the Day is enabled or not
            </summary>
        </member>
        <member name="P:Relativity.Services.Notifications.MOTDRef.AllowDismiss">
            <summary>
            Whether Message of the Day is allowed to be dismissed or not
            </summary>
        </member>
        <member name="T:Relativity.Services.Notifications.INotificationsModule">
            <summary>
            Notifications Module
            </summary>
        </member>
        <member name="T:Relativity.Services.Notifications.INotificationsManager">
            <summary>
            Interface of the Notifaction Manager
            </summary>
        </member>
        <member name="M:Relativity.Services.Notifications.INotificationsManager.ReadMOTDAsync">
            <summary>
            Reads the Message of the Day
            </summary>
            <returns>A MOTD reference that includes the Message and whether or not it is enabled</returns>
        </member>
        <member name="M:Relativity.Services.Notifications.INotificationsManager.UpdateMOTDAsync(Relativity.Services.Notifications.MOTDRef)">
            <summary>
            Update the Message of the Day
            </summary>
            <param name="motd">MOTD reference that specifies the new message or whether or not it is enabled</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Notifications.INotificationsManager.DismissMOTDAsync(System.Int32)">
            <summary>
            Disable the Message of the Day for a user
            </summary>
            <param name="userId">UserId references the user identifier to disable the message of the day</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Notifications.INotificationsManager.HasDismissedMOTDAsync(System.Int32)">
            <summary>
            Determines if the passed userId has previously dismissed the MOTD
            </summary>
            <param name="userId">UserId references the user identifier to check if has dismissed the MOTD</param>
            <returns>A boolean of having dismissed or not</returns>
        </member>
        <member name="M:Relativity.Services.Notifications.INotificationsManager.IsTextOnlyMOTDAsync">
            <summary>
            Determines if the MOTD is set to be text-only
            </summary>
            <returns>A boolean representation of the MOTD text-only instance setting</returns>
        </member>
        <member name="T:Relativity.Services.ObjectQuery.Query">
            <summary>
            Describes conditions, sorts and fields to be returned for an ObjectQueryManager.Query call
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.Query.Fields">
            <summary>
            Fields to be included in the query results.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.Query.Condition">
            <summary>
            Gets or sets the search critera.  This can be a simple, single-field condition or a more complex criteria expression by combining conditions together.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.Query.Sorts">
            <summary>
            Represents an array of fields. You indicate the sort order by specifying ASC or DESC after the field name, such as Relativity Text Identifier ASC. By default, ASC is the sort order on a field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.Query.RelationalField">
            <summary>
            Represents a string identifying a relational field. A query containing a relational field returns any matching fields and all documents that share this field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.Query.RowCondition">
            <summary>
            Gets or sets the row condition criteria. This can be a simple, single-field condition or a more complex criteria expression by combining conditions together.
            This criteria will limit the result set returned after applying all other conditions and including the relational field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.Query.SearchProviderCondition">
            <summary>
            Contains the necessary parameters to execute a Search Provider search.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.Query.IsAdHocQuery">
            <summary>
            Determines whether or not the query is to be run as a built in saved search query or an ad hoc query.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.Query.ExecutingSavedSearchId">
            <summary>
            ID of the currently executing saved search.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.Query.ExecutingViewId">
            <summary>
            ID of the currently executing view.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.Query.ActiveArtifactId">
            <summary>
            Result page criterion to override start position if available in query results.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.Query.RankSortOrder">
            <summary>
            Sorting direction ASC or DESC of the Rank column
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.Query.QueryHint">
            <summary>
            Gets or sets the QueryHint of the currently executing search. It is used to optimize the view.
            </summary>
        </member>
        <member name="T:Relativity.Services.ObjectQuery.SearchProviderCondition">
            <summary>
            Contains the necessary parameters to execute a Search Provider search.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.SearchProviderCondition.SearchProviderArtifactId">
            <summary>
            Artifact ID of the Search Provider
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.SearchProviderCondition.Input">
            <summary>
            Value returned by the registered javascript function of a fully HTML UI Search Provider in order to retrieve the user's search parameters entered into the Search Provider's markup/form.
            This must be a valid value to be passed into the SearchProvider's ISearchProviderGateway.HydrateInputData() function.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataItemFieldResult.Name">
            <summary>
            Name of field
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataItemFieldResult.Value">
            <summary>
            Value of field for artifact.  This value could be one of many types depending on the field type.  For example dates, numbers, or list of other artifacts.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataItemFieldResult.ArtifactId">
            <summary>
            ArtifactId of field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataItemFieldResult.ArtifactGuids">
            <summary>
            List of Guids for the field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataItemFieldResult.FieldType">
            <summary>
            Field type (i.e. fixed-length text, multi-object). If the field is a reflected field, this value will represent the field type of the reflected field of the associated object.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataItemResult.ArtifactId">
            <summary>
            Artifact ID of artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataItemResult.ArtifactGuids">
            <summary>
            Artifact Guids of artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataItemResult.TextIdentifier">
            <summary>
            Text identifier of artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataItemResult.ArtifactTypeId">
            <summary>
            Artifact Type Id of the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataItemResult.ArtifactTypeGuids">
            <summary>
            List of Guids for the Artifact Type
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataItemResult.ArtifactTypeName">
            <summary>
            Name of the Artifact Type
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataItemResult.ParentArtifactId">
            <summary>
            The ArtifactId for the parent of the artifact
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataItemResult.WorkspaceId">
            <summary>
            The WorkspaceId related to the artifact.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataItemResult.Fields">
            <summary>
            List of fields and their values for this artifact.  Only fields provided are those explictly requested during query execution in the query.fields property.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.WorkspaceId">
            <summary>
            Id of the workspace which contains the query result artifacts.  If artifacts belong to the admin level, this value will equal -1.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.ArtifactTypeName">
            <summary>
            Name of artifact type of the query result artifacts.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.ArtifactTypeId">
            <summary>
            Id of artifact type of the query result artifacts.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.ArtifactTypeGuids">
            <summary>
            Guids for the artifact type of the query result artifacts.  Some artifact types will not have a GUID.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.ResultCount">
            <summary>
            Count of return artifacts returned for this call.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.TotalResultCount">
            <summary>
            Total count of return artifacts in the entire query (Including artifacts that were not returned in this call due to requeseted page size being smaller than TotalResultCount).
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.CurrentStartIndex">
            <summary>
            Start index of the results relative to the entire query result set.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.PreviousPage">
            <summary>
            Generated url of that can be used to retrieve the previous page of query results based on the provided start and pageSize parameters of the query execution.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.NextPage">
            <summary>
            Generated url of that can be used to retrieve the next page of query results based on the provided start and pageSize parameters of the query execution.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.QueryToken">
            <summary>
            Token that can be used to lookup a subset of the cached query.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.Sample">
            <summary>
            Token that can be used to persist an existing sample from one call to the next.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.DataResults">
            <summary>
            Query result artifacts.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.Window">
            <summary>
            Retrieves the set of IDs used to prime the review tool's session.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.RankWindow">
            <summary>
            Retrieves the set of Ranks used to prime the review tool's session.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.DataResult.Includes">
            <summary>
            Related items are included in the result set based on this field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.ObjectQueryResultSet.Success">
            <summary>
            True if object query execution was a success.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.ObjectQueryResultSet.Message">
            <summary>
            Exception details if the query exection fails due to a server side error.  Otherwise "SUCCESS".
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.ObjectQueryResultSet.Data">
            <summary>
            The query results.
            </summary>
        </member>
        <member name="T:Relativity.Services.ObjectQuery.ObjectQueryUniqueFieldValuesResult">
            <summary>
            Represents the results of a query for unique field values.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.ObjectQueryUniqueFieldValuesResult.FieldName">
            <summary>
            Gets or sets the name of the field that was queried.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.ObjectQueryUniqueFieldValuesResult.MaxNumberOfValuesReached">
            <summary>
            Gets or sets a bool indicating whether the number of values returned by the query reaches the maximum.
            </summary>
            <remarks>
            The MaxNumberOfValuesReached property references the  number of values specified in the DistinctBuilderMaxValue instance setting. This setting is located in the Relativity.Data section of the Instance Settings table.
            </remarks>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.ObjectQueryUniqueFieldValuesResult.UniqueValues">
            <summary>
            Gets or sets the unique values for the queried field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ObjectQuery.QueryDataItemResult.Permissions">
            <summary>
            List of granted permission types for this data item.
            </summary>
        </member>
        <member name="T:Relativity.Services.Pivot.PivotDateGrouping">
            <summary>
            Specifies how to summarize date-based data that is returned for a GroupBy or PivotOn field in a Pivot query.
            </summary>
            <remarks>
            To use a Date field for the PivotOn field, you must also use a Date field for the GroupBy field. In addition, to use the Month enumeration for a PivotOn field, you must use the Year enumeration for the GroupBy field.
            </remarks>
        </member>
        <member name="F:Relativity.Services.Pivot.PivotDateGrouping.Date">
            <summary>
            Summarizes data by calendar day, month, and year for a GroupBy or PivotOn field.
            </summary>
        </member>
        <member name="F:Relativity.Services.Pivot.PivotDateGrouping.Month">
            <summary>
            Summarizes data by calendar month for a GroupBy or PivotOn field.
            </summary>
        </member>
        <member name="F:Relativity.Services.Pivot.PivotDateGrouping.Year">
            <summary>
            Summarizes data by calendar year for a GroupBy or PivotOn field.
            </summary>
        </member>
        <member name="F:Relativity.Services.Pivot.PivotDateGrouping.YearMonth">
            <summary>
            Summarizes data by calendar month and year for a GroupBy or PivotOn field.
            </summary>
        </member>
        <member name="F:Relativity.Services.Pivot.PivotDateGrouping.Week">
            <summary>
            Summarizes data by each week for a GroupBy or PivotOn field.
            </summary>
        </member>
        <member name="F:Relativity.Services.Pivot.PivotDateGrouping.TwoWeeks">
            <summary>
            Summarizes data by each two weeks for a GroupBy or PivotOn field.
            </summary>
        </member>
        <member name="T:Relativity.Services.Pivot.PivotSettings">
            <summary>
            Represents the settings to use for a Pivot query.
            </summary>
        </member>
        <member name="M:Relativity.Services.Pivot.PivotSettings.#ctor">
            <summary>
            Initializes a new instance of the PivotSettings class.
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotSettings.ObjectSetQuery">
            <summary>
            Gets or sets a query that defines the base set of documents or objects to run a Pivot query against.
            </summary>
            <remarks>
            This property is helpful if you want to run a Pivot query against only a subset, instead of all, objects or documents in a workspace. By using this property, you can reference a Query object that specifies any conditions that documents or objects must meet to be queried by a Pivot query.
            </remarks>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotSettings.ArtifactTypeID">
            <summary>
            Gets or sets the Relativity Artifact Type identifier (Artifact.ArtifactTypeID property) for the type of DTO to run a Pivot query against.
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotSettings.GroupBy">
            <summary>
            Gets or sets the field to use as the Group By value in a Pivot query and result set. Grouping functionality (Field.AllowGroupBy property) must be enabled for a field before the field can be used as a GroupBy field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotSettings.PivotOn">
            <summary>
            Gets or sets the field to use as the Pivot On value in a Pivot query and result set. Pivot functionality (Field.AllowPivotOn property) must be enabled for a field before the field can be used as a PivotOn field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotSettings.GroupByDateGrouping">
            <summary>
            Gets or sets the time interval to use when calculating results for a GroupBy field, if the GroupBy field is a Date field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotSettings.PivotOnDateGrouping">
            <summary>
            Gets or sets the time interval to use when calculating results for a PivotOn field, if the PivotOn field is a Date field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotSettings.MaximumNumberOfColumns">
            <summary>
            Gets or sets the maximum number of columns that a Pivot query can return.
            </summary>
            <remarks>
            If no value is specified, the query uses the configuration value for the database. If the query attempts to return more than the maximum number of columns, an error occurs.
            </remarks>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotSettings.MaximumNumberOfRows">
            <summary>
            Gets or sets the maximum number of rows that a Pivot query can return.
            </summary>
            <remarks>
            If no value is specified, the query uses the configuration value for the database. If the query attempts to return more than the maximum number of rows, an error occurs.
            </remarks>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotSettings.Timeout">
            <summary>
            Gets or sets the maximum amount of time, in seconds, for running a Pivot query and calculating the results before timing out.
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotSettings.RawDataOnly">
            <summary>
            Gets or sets a value that indicates whether to apply a Pivot view to the data returned by a Pivot query or to return only the data. If the value is true, only the data is returned.
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotSettings.ConvertNumberFieldValuesToString">
            <summary>
            Gets or sets a Boolean value indicating whether to convert the numbers returned in the pivot to text. 
            </summary>
        </member>
        <member name="T:Relativity.Services.Pivot.PivotExportResult">
            <summary>
            Represents results of a pivot export.
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotExportResult.ContentType">
            <summary>
            Gets or sets the type of the content.
            </summary>
            <value>
            The type of the content.
            </value>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotExportResult.Content">
            <summary>
            Gets or sets the content that is encoded with base-64 digits.
            </summary>
            <value>
            The content encoded with base-64 digits.
            </value>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotExportResult.Success">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Relativity.Services.Pivot.PivotExportResult"/> is success.
            </summary>
            <value>
              <c>true</c> if success; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Relativity.Services.Pivot.PivotResultSet">
            <summary>
            Represents the results of a Pivot query. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotResultSet.Results">
            <summary>
            Provides a collection of data that meets the criteria specified in a Pivot query.
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotResultSet.TotalCount">
            <summary>
            Gets the total number of rows returned by a Pivot query.
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotResultSet.QueryToken">
            <summary>
            Reserved for internal use and not intended to be used.
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotResultSet.Success">
            <summary>
            Gets a value that indicates whether a Pivot query ran successfully.
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotResultSet.Message">
            <summary>
            Gets a message that indicates the status of a Pivot query, after the query stops running. If the query failed, the message contains information about the errors that occurred.
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotResultSet.MessageType">
            <summary>
            Gets a message type that indicates the status of the Pivot error after the query stops. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Pivot.PivotResultSet.PivotIdToDisplayValueMap">
            <summary>
            N-by-2 2D array of strings where N is the distict list of pivot "column" values, each individual array[0] is the pivot "id" value and array[1] is the pivot "display" value
            </summary>
        </member>
        <member name="T:Relativity.Services.Pivot.IPivotManager">
            <summary>
            IPivotManager interface enables interaction with Relativity Pivot. 
            </summary>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.ExecuteAsync(System.Int32,Relativity.Services.Pivot.PivotSettings)">
            <summary>
            Asynchronously executes a Pivot query.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query.</param>
            <param name="settings">The PivotSettings object that defines the settings to use for the Pivot query.</param>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.ExecuteAsync(System.Int32,Relativity.Services.Pivot.PivotSettings,System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes a Pivot query and implements cancellation support for the query.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query.</param>
            <param name="settings">The PivotSettings object that defines the settings to use for the Pivot query.</param>
            <param name="cancel">The CancellationTokenSource object that defines the token for cancelling the query.</param>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.ExecuteAsync(System.Int32,Relativity.Services.Pivot.PivotSettings,System.IProgress{System.String})">
            <summary>
            Asynchronously executes a Pivot query and implements a progress indicator for the query.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query.</param>
            <param name="settings">The PivotSettings object that defines the settings to use for the Pivot query.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the status of the query while the query is running.</param>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.ExecuteAsync(System.Int32,Relativity.Services.Pivot.PivotSettings,System.Threading.CancellationToken,System.IProgress{System.String})">
            <summary>
            Asynchronously executes a Pivot query and implements cancellation support and a progress indicator for the query.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query.</param>
            <param name="settings">The PivotSettings object that defines the settings to use for the Pivot query.</param>
            <param name="cancel">The CancellationTokenSource object that defines the token for cancelling the query.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the status of the query while the query is running.</param>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.ExecuteExportAsync(System.Int32,Relativity.Services.PivotProfile.Dashboard,Relativity.Services.Query)">
            <summary>
            Asynchronously exports into the Excel file a Dashboard Pivot queries.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query.</param>
            <param name="dashboard">The dashboard.</param>
            <param name="objectSetQuery">A Query object that defines one or more conditions that a document or object must meet to be queried by the Pivot query.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.ExecuteExportAsync(System.Int32,Relativity.Services.PivotProfile.Dashboard,Relativity.Services.Query,System.Threading.CancellationToken)">
            <summary>
            Asynchronously exports into the Excel file a Dashboard Pivot queries and implements cancellation support for the export.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query.</param>
            <param name="dashboard">The dashboard.</param>
            <param name="objectSetQuery">A Query object that defines one or more conditions that a document or object must meet to be queried by the Pivot query.</param>
            <param name="cancel">The CancellationTokenSource object that defines the token for cancelling the query.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.ExecuteExportAsync(System.Int32,Relativity.Services.PivotProfile.Dashboard,Relativity.Services.Query,System.IProgress{System.String})">
            <summary>
            Asynchronously exports into the Excel file a Dashboard Pivot queries and implements a progress indicator for the query.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query.</param>
            <param name="dashboard">The dashboard.</param>
            <param name="objectSetQuery">A Query object that defines one or more conditions that a document or object must meet to be queried by the Pivot query.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the status of the query while the query is running.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.ExecuteExportAsync(System.Int32,Relativity.Services.PivotProfile.Dashboard,Relativity.Services.Query,System.Threading.CancellationToken,System.IProgress{System.String})">
            <summary>
            Asynchronously exports into the Excel file a Dashboard Pivot queries and implements cancellation support and a progress indicator for the query.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query.</param>
            <param name="dashboard">The dashboard.</param>
            <param name="objectSetQuery">A Query object that defines one or more conditions that a document or object must meet to be queried by the Pivot query.</param>
            <param name="cancel">The CancellationTokenSource object that defines the token for cancelling the query.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the status of the query while the query is running.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.ExecutePivotProfileAsync(System.Int32,System.Int32,Relativity.Services.Query)">
            <summary>
            Asynchronously executes a Pivot query based on the settings of a specified Pivot profile.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace that contains both the Pivot profile to use and the documents or objects to query.</param>
            <param name="pivotProfileId">The Artifact identifier of the Pivot profile to use for the Pivot query.</param>
            <param name="objectSetQuery">A Query object that defines one or more conditions that a document or object must meet to be queried by the Pivot query.</param>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.ExecutePivotProfileAsync(System.Int32,System.Int32,Relativity.Services.Query,System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes a Pivot query based on the settings of a specified Pivot profile and implements cancellation support for the query.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace that contains both the Pivot profile to use and the documents or objects to query.</param>
            <param name="pivotProfileId">The Artifact identifier of the Pivot profile to use for the Pivot query.</param>
            <param name="objectSetQuery">A Query object that defines one or more conditions that documents or objects must meet to be queried by the Pivot query.</param>
            <param name="cancel">The CancellationTokenSource object that defines the token for cancelling the query.</param>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.ExecutePivotProfileAsync(System.Int32,System.Int32,Relativity.Services.Query,System.IProgress{System.String})">
            <summary>
            Asynchronously executes a Pivot query based on the settings of a specified Pivot profile and implements a progress indicator for the query.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace that contains both the Pivot profile to use and the documents or objects to query.</param>
            <param name="pivotProfileId">The Artifact identifier of the Pivot profile to use for the Pivot query.</param>
            <param name="objectSetQuery">A Query object that defines one or more conditions that documents or objects must meet to be queried by the Pivot query.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the status of the query while the query is running.</param>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.ExecutePivotProfileAsync(System.Int32,System.Int32,Relativity.Services.Query,System.Threading.CancellationToken,System.IProgress{System.String})">
            <summary>
            Asynchronously executes a Pivot query based on the settings of a specified Pivot profile and implements cancellation support and a progress indicator for the query.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace that contains both the Pivot profile to use and the document or objects to query.</param>
            <param name="pivotProfileId">The Artifact identifier of the Pivot profile to use for the Pivot query.</param>
            <param name="objectSetQuery">A Query object that defines one or more conditions that documents or objects must meet to be queried by the Pivot query.</param>
            <param name="cancel">The CancellationTokenSource object that defines the token for cancelling the query.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the status of the query while the query is running.</param>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.GetFieldsForGroupByAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously returns all fields that can be used to group data (Field.AllowGroupBy property) in a Pivot query. 
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace that contains the fields.</param>
            <param name="artifactTypeId">The Artifact Type identifier of the DTO that the fields apply to. This is typically "10", which is the identifier for the Document object.</param>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.GetFieldsForPivotOnAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously returns all fields that can be used to pivot data (Field.AllowPivotOn property) in a Pivot query. 
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace that contains the fields.</param>
            <param name="artifactTypeId">The Artifact Type identifier of the DTO that the fields apply to. This is typically "10", which is the identifier for the Document object.</param>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.UpdateProfileAsync(System.Int32,Relativity.Services.PivotProfile.PivotProfileRef)">
            <summary>
            Asynchronously update a pivot profile. 
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace that contains the fields.</param>
            <param name="profile">The Artifact Type identifier of the DTO that the fields apply to. This is typically "10", which is the identifier for the Document object.</param>
        </member>
        <member name="M:Relativity.Services.Pivot.IPivotManager.CreateProfileAsync(System.Int32,Relativity.Services.PivotProfile.PivotProfileRef)">
            <summary>
            Asynchronously Create a pivot profile. 
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace that contains the fields.</param>
            <param name="profile">The Artifact Type identifier of the DTO that the fields apply to. This is typically "10", which is the identifier for the Document object.</param>
        </member>
        <member name="T:Relativity.Services.Pivot.IPivotModule">
            <summary>
            Pivot Manager Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.Agent.AgentQueryResultSet">
            <summary>
            Agent Query Result Set
            </summary>
        </member>
        <member name="T:Relativity.Services.Folder.FolderMoveResultSet">
            <summary>
            Represents the output of a folder move operation, including status information.
            </summary>
        </member>
        <member name="P:Relativity.Services.Folder.FolderMoveResultSet.TotalOperations">
            <summary>
            Gets the number of operations needed to be executed to move the folder and its contents.
            </summary>
        </member>
        <member name="T:Relativity.Services.Folder.FolderResultSet">
            <summary>
            The output of a call to a mass process method.
            </summary>
        </member>
        <member name="T:Relativity.Services.Folder.IFolderModule">
            <summary>
            Folder Module Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.Folder.IFolderManager">
            <summary>
            IFolderManager interface enables interaction with Folders.
            </summary>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.CreateSingleAsync(System.Int32,Relativity.Services.Folder.Folder)">
            <summary>
            Asynchronously creates an instance of Folder.
            </summary>
            <param name="workspaceArtifactID">The workspace artifact identifier.</param>
            <param name="model">The folder DTO.</param>
            <returns>
            ArtifactID of the created Folder.
            </returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.UpdateSingleAsync(System.Int32,Relativity.Services.Folder.Folder)">
            <summary>
            Asynchronously updates an instance of Folder.
            </summary>
            <param name="workspaceArtifactID">The workspace artifact identifier.</param>
            <param name="model">The model.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.QueryAsync(System.Int32,Relativity.Services.Query)">
            <summary>
            Asynchronously query for a collection of Folder instances.
            </summary>
            <param name="query">Query</param>
            <param name="workspaceArtifactID">Query</param>
            <returns>A FolderResultSet</returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.QueryAsync(System.Int32,Relativity.Services.Query,System.Int32)">
            <summary>
            Asynchronously query for a collection of Folder instances.
            </summary>
            <param name="query">Query</param>
            <param name="length">Number of results to return.</param>
            <param name="workspaceArtifactID">Number of results to return.</param>
            <returns>A FolderResultSet</returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.QuerySubsetAsync(System.String,System.Int32,System.Int32)">
            <summary>
            Asynchronously query for a subset of a collection of Folder instances.
            </summary>
            <param name="queryToken">Search Query Token</param>
            <param name="start">Starting index for this query.</param>
            <param name="length">Number of results to return.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.GetWorkspaceRootAsync(System.Int32)">
            <summary>
            Retrieves a workplace root folder
            </summary>
            <param name="workspaceArtifactID">ArtifactID of the workspace</param>
            <returns>Folder</returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.GetChildrenAsync(System.Int32,System.Int32)">
            <summary>
            Returns all child elements of the specified Folder
            </summary>
            <param name="workspaceArtifactID">ArtifactID of the workspace</param>
            <param name="parentId">ArtifactID of the parent</param>
            <returns>List of child Folders</returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.GetFullPathListAsync(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Retrieves the full path list.
            </summary>
            <param name="workspaceArtifactID">ArtifactID of the workspace</param>
            <param name="artifactIDs">The List of ArtifactID.</param>
            <returns>
            List of Folder path
            </returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.GetFolderTreeAsync(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Returns the folder structure with expanded nodes
            </summary>
            <param name="workspaceArtifactId">ArtifactID of the workspace</param>
            <param name="expandedNodes">ArrayList of ArtifactIDs of folders that are expanded</param>
            <returns>List of folders</returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.GetFolderTreeAsync(System.Int32,System.Collections.Generic.List{System.Int32},System.Int32)">
            <summary>
            Returns the folder structure with expanded nodes
            </summary>
            <param name="workspaceArtifactId">ArtifactID of the workspace</param>
            <param name="expandedNodes">ArrayList of ArtifactIDs of folders that are expanded</param>
            <param name="selectedFolderId">ArtifactID of the selected folder</param>
            <returns>List of folders</returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.GetFilteredFolderTreeAsync(System.Int32,System.String)">
            <summary>
            Asynchronously gets the tree of folders matching the search condition specified as a query string.
            </summary>
            <param name="workspaceArtifactId">Workspace the tree of Search Containers is under.</param>
            <param name="searchCondition">Search keyword for tree nodes to be matched against.</param>
            <returns>A collection of Folder nodes matching provided search conditions.</returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.DeleteUnusedFoldersAsync(System.Int32)">
            <summary>
            Asynchronously deletes any folders in the workspace which do not contain any documents or sub-folders with documents.
            </summary>
            <param name="workspaceArtifactID">ArtifactID of the workspace</param>
            <returns>FolderResultSet of the folders which were deleted.</returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.DeleteUnusedFoldersAsync(System.Int32,System.IProgress{Relativity.Services.ProcessStateProgress})">
            <summary>
            Asynchronously deletes any folders in the workspace which do not contain any documents or sub-folders with documents while reporting progress.
            </summary>
            <param name="workspaceArtifactID">ArtifactID of the workspace</param>
            <returns>FolderResultSet of the folders which were deleted.</returns>
            <param name="progress">Progress object.</param>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.GetFolderTreeWithAncestorsAsync(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Returns expanded folder structer 
            </summary>
            <param name="workspaceArtifactID"></param>
            <param name="artifactIDs"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.GetAccessStatusAsync(System.Int32,System.Int32)">
            <summary>
            Returns folder status: folder exists, hasn't moved and has view permission.
            </summary>
            <param name="workspaceArtifactID">Current workspace artifact ID.</param>
            <param name="artifactID">Folder artifact ID</param>
            <returns>Returns object of FolderStatus type, where Exists property will be true if folder with artifactID exists and CanView will be true 
            if current user still have view permission.</returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.MoveFolderAsync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves an existing folder and its children, including subfolders and documents.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the folder.</param>
            <param name="artifactID">The Artifact ID of folder to be moved.</param>
            <param name="destinationFolderID">The Artifact ID of the destination folder.</param>
            <returns>A FolderMoveResultSet object containing status information about the folder being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.MoveFolderAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Moves an existing folder and its children, including subfolders and documents.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the folder.</param>
            <param name="artifactID">The Artifact ID of folder to be moved.</param>
            <param name="destinationFolderID">The Artifact ID of the destination folder.</param>
            <param name="cancel">The CancellationToken object that defines the token for cancelling the move.</param>
            <returns>A FolderMoveResultSet object containing status information about the folder being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.MoveFolderAsync(System.Int32,System.Int32,System.Int32,System.IProgress{Relativity.Services.MoveProcessStateProgress})">
            <summary>
            Moves an existing folder and its children, including subfolders and documents.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the folder.</param>
            <param name="artifactID">The Artifact ID of folder to be moved.</param>
            <param name="destinationFolderID">The Artifact ID of the destination folder.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the progress while the folder is moving.</param>
            <returns>A FolderMoveResultSet object containing status information about the folder being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Folder.IFolderManager.MoveFolderAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.MoveProcessStateProgress})">
            <summary>
            Moves an existing folder and its children, including subfolders and documents.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the folder.</param>
            <param name="artifactID">The Artifact ID of folder to be moved.</param>
            <param name="destinationFolderID">The Artifact ID of the destination folder.</param>
            <param name="cancel">The CancellationToken object that defines the token for cancelling the move.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the progress while the folder is moving.</param>
            <returns>A FolderMoveResultSet object containing status information about the folder being moved.</returns>
        </member>
        <member name="T:Relativity.Services.Result.MassProcessResultSetBase">
            <summary>
            Represents the output of a move operation, including status information.
            </summary>
        </member>
        <member name="P:Relativity.Services.Result.MassProcessResultSetBase.ProcessState">
            <summary>
            Gets the state of the mass process.
            </summary>
        </member>
        <member name="P:Relativity.Services.Result.MassProcessResultSetBase.TotalOperations">
            <summary>
            Gets the number of operations needed to be executed to move the object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Result.MassProcessResultSetBase.OperationsCompleted">
            <summary>
            Gets the number of operations that have been executed.
            </summary>
        </member>
        <member name="T:Relativity.Services.Matter.MatterQueryResultSet">
            <summary>
            Matter Query Result Set
            </summary>
        </member>
        <member name="T:Relativity.Services.Matter.IMatterModule">
            <summary>
            Matter Module Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.Matter.IMatterManager">
            <summary>
            IMatterManager interface enables interaction with Matter.
            </summary>
        </member>
        <member name="M:Relativity.Services.Matter.IMatterManager.CreateSingleAsync(Relativity.Services.Matter.Matter)">
            <summary>
            Asynchronously creates an instance of Matter.
            </summary>
            <param name="matterDTO">Matter DTO</param>
            <returns>ArtifactID of the created Matter.</returns>
        </member>
        <member name="M:Relativity.Services.Matter.IMatterManager.QueryAsync(Relativity.Services.Query)">
            <summary>
            Asynchronously query for a collection of Matter instances.
            </summary>
            <param name="query">Query</param>
            <returns>A MatterQueryResultSet</returns>
        </member>
        <member name="M:Relativity.Services.Matter.IMatterManager.QueryAsync(Relativity.Services.Query,System.Int32)">
            <summary>
            Asynchronously query for a collection of Matter instances.
            </summary>
            <param name="query">Query</param>
            <param name="length">Number of results to return.</param>
            <returns>A MatterQueryResultSet</returns>
        </member>
        <member name="M:Relativity.Services.Matter.IMatterManager.QuerySubsetAsync(System.String,System.Int32,System.Int32)">
            <summary>
            Asynchronously query for a subset of a collection of Matter instances.
            </summary>
            <param name="queryToken">Search Query Token</param>
            <param name="start">Starting index for this query.</param>
            <param name="length">Number of results to return.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Matter.IMatterManager.ReadSingleAsync(System.Int32)">
            <summary>
            Asynchronously read a instance of Matter.
            </summary>
            <param name="matterArtifactID">ArtifactID of the Matter to read.</param>
            <returns>A Matter</returns>
        </member>
        <member name="M:Relativity.Services.Matter.IMatterManager.DeleteSingleAsync(System.Int32)">
            <summary>
            Asynchronously deletes an instance of Matter.
            </summary>
            <param name="matterArtifactID">ArtifactID of the Matter to delete.</param>
        </member>
        <member name="M:Relativity.Services.Matter.IMatterManager.UpdateSingleAsync(Relativity.Services.Matter.Matter)">
            <summary>
            Asynchronously updates an instance of Matter.
            </summary>
            <param name="matterDTO">Matter to Update.</param>
        </member>
        <member name="M:Relativity.Services.Matter.IMatterManager.GetStatusChoicesForMatterAsync">
            <summary>
            Get the available status choices.
            </summary>
            <returns>List of available status choices.</returns>
        </member>
        <member name="M:Relativity.Services.Matter.IMatterManager.GetClientsForMatterAsync">
            <summary>
            Get the available clients.
            </summary>
            <returns>List of the available clients.</returns>
        </member>
        <member name="F:Relativity.Services.Matter.MatterConstants.MODULE_PREFIX">
            <summary>
            The prefix used for module called during service requests.
            </summary>
        </member>
        <member name="F:Relativity.Services.Matter.MatterConstants.SERVICE_MODULE_NAME">
            <summary>
            The name of the module called during service requests.
            </summary>
        </member>
        <member name="F:Relativity.Services.Matter.MatterConstants.SERVICE_NAME">
            <summary>
            The name of the service.
            </summary>
        </member>
        <member name="F:Relativity.Services.Matter.MatterConstants.SERVICE_ROUTE">
            <summary>
            The name of a route in the URL used in a request to the service.
            </summary>
        </member>
        <member name="F:Relativity.Services.Matter.MatterConstants.BASE_SERVICE_ROUTE">
            <summary>
            The base URI path for the service.
            </summary>
        </member>
        <member name="T:Relativity.Services.ResourcePool.ResourcePoolQueryResultSet">
            <summary>
            Resource Pool Query Result Set
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.AdvancedSearchViewInfo">
            <summary>
            Fields required by advanced search filtering
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.AdvancedSearchViewInfo.HasViewPermission">
            <summary>
            Determines whether the current user has read permissions to current view.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.AdvancedSearchViewInfo.FieldNames">
            <summary>
            Avalable Field names in current view.
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.AnalyticsSearchQueryResultSet">
            <summary>
            Analytics Search Query Result Set
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.DataGridSearchQueryResultSet">
            <summary>
            DataGrid Search Query Result Set
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.dtSearchQueryResultSet">
            <summary>
            dtSearch Query Result Set
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.KeywordSearchQueryResultSet">
            <summary>
            Keyword Search Query Result Set
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.SavedSearchMoveResultSet">
            <summary>
            Represents the output of a saved search move operation, including status information.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SavedSearchMoveResultSet.TotalOperations">
            <summary>
            Gets the number of operations needed to be executed to move the saved search.
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.SearchAccessStatus">
            <summary>
            Provides information on existence and actions which can be taken on the Saved Search.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchAccessStatus.Exists">
            <summary>
            Gets or sets a value indicating whether Saved Search exists.
            </summary>
            <value>
              <c>true</c> if exists; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Relativity.Services.Search.SearchAccessStatus.CanView">
            <summary>
            Gets or sets a value indicating whether Saved Search can be viewed.
            </summary>
            <value>
              <c>true</c> if Saved Search can be viewed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Relativity.Services.Search.SearchAccessStatus.CanAccessSearchProvider">
            <summary>
            Gets or sets a value indicating whether Search Provider of Saved Search can be accessed.
            </summary>
            <value>
            <c>true</c> if Search Provider of Saved Search can be accessed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Relativity.Services.Search.SearchAccessStatus.CanViewCriteriaFields">
            <summary>
            Gets or sets a value  whether Saved Search criteria fields can be viewed.
            </summary>
            <value>
            <c>true</c> if all Saved Search criteria fields can be viewed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Relativity.Services.Search.SearchContainerItemCollection">
            <summary>
            SearchContainer tree information for a given SearchContainer.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.SearchContainerItemCollection.#ctor">
            <summary>
            SearchContainerItemCollection constructor.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchContainerItemCollection.SearchContainerItems">
            <summary>
            Collection of SearchContainerItems.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchContainerItemCollection.SavedSearchContainerItems">
            <summary>
            Collection of SavedSearchContainerItems.
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.SearchContainerItem">
            <summary>
            SearchContainerItem information.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchContainerItem.SearchContainer">
            <summary>
            SearchContainer reference.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchContainerItem.Secured">
            <summary>
            Does this SearchContainer have item level security.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchContainerItem.HasChildren">
            <summary>
            Flag indicating if this SearchContainerItem has any children.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchContainerItem.ParentContainer">
            <summary>
            Parent Search Container this SearchContainerItem belongs to.
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.SavedSearchContainerItem">
            <summary>
            SavedSearchContainerItem information.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SavedSearchContainerItem.SavedSearch">
            <summary>
            SavedSearch reference.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SavedSearchContainerItem.Secured">
            <summary>
            Does this SavedSearch have item level security.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SavedSearchContainerItem.Personal">
            <summary>
            Does this SavedSearch belong to the current owner.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SavedSearchContainerItem.ParentContainer">
            <summary>
            Parent Search Container this SavedSearch belongs to.
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.SavedSearchContainerItemPermissions">
            <summary>
            Permission for saved search item
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.SearchContainerItemPermissions">
            <summary>
            Permissions for search folder item
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.SearchContainerMoveResultSet">
            <summary>
            Represents the output of a search container move operation, including status information.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchContainerMoveResultSet.TotalOperations">
            <summary>
            Gets the number of operations needed to be executed to move the search container.
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.SearchContainerQueryResultSet">
            <summary>
            Search Container Query Result Set
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.IAnalyticsSearchManager">
            <summary>
            IAnalyticsSearchManager interface enables interaction with Relativity analytics search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.CreateSingleAsync(System.Int32,Relativity.Services.Search.AnalyticsSearch)">
            <summary>
            Asynchronously creates an instance of analytics saved search in a workspace.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.ReadSingleAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously returns an instance of an analytics saved search as an AnalyticsSearch object.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.UpdateSingleAsync(System.Int32,Relativity.Services.Search.AnalyticsSearch)">
            <summary>
            Asynchronously updates an instance of a analytics saved search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves an existing analytics saved search. Specify the workspace, search, and destination folder by Artifact ID.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Moves an existing analytics saved search. Specify the workspace, search, and destination folder by Artifact ID. Specify the CancellationToken object to enable cancellation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <param name="cancel">The CancellationToken object that defines the token for cancelling the move.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.IProgress{Relativity.Services.MoveProcessStateProgress})">
            <summary>
            Moves an existing analytics saved search. Specify the workspace, search, and destination folder by Artifact ID. Specify the MoveProgressState object to display the progress of the operation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the progress while the saved search is moving.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.MoveProcessStateProgress})">
            <summary>
            Moves an existing analytics saved search. Specify the workspace, search, and destination folder by Artifact ID. Specify the MoveProgressState and CancellationToken objects to display progress and enable cancellation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <param name="cancel">The CancellationToken object that defines the token for cancelling the move.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the progress while the saved search is moving.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.DeleteSingleAsync(System.Int32,System.Int32)">
            <summary>
            Asyncronously deletes an instance of analytics saved search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.CopySingleAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously copies an instance of analytics saved search.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="searchArtifactID">The Artifact ID of saved search to be copied.</param>
            <returns>SavedSearchRef object containing reference data of the copied saved search.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.QueryAsync(System.Int32,Relativity.Services.Query)">
            <summary>
            Returns a result set of analytics saved search objects matching the specified query.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.QueryAsync(System.Int32,Relativity.Services.Query,System.Int32)">
            <summary>
            Returns a result set of analytics saved search objects matching the specified query.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.QuerySubsetAsync(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Returns a subset of a result set of analytics objects matching the specified query token.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.GetSearchOwnersAsync(System.Int32)">
            <summary>
            Asychronously returns all users in the workspace with permissions to view saved searches. Use to populate the AnalyticsSearch.Owners property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.GetSearchIncludesAsync(System.Int32)">
            <summary>
            Asychronously returns all relational fields available to the user in the workspace. Use to populate the AnalyticsSearch.Includes property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.GetSearchIndexesAsync(System.Int32)">
            <summary>
            Asychronously returns all analytics indexes available to the user in the workspace. Use to populate the AnalyticsSearch.SearchIndexID property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.GetFieldsForSearchResultViewAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns all workspace fields available to the user as the SearchResultViewFields.FieldsNotIncluded property. Use to populate the AnalyticsSearch.Fields property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.GetFieldsForSearchResultViewAsync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Asychronously returns all fields included in the search as SearchResultViewFields.FieldsIncluded property. Use to populate the AnalyticsSearch.Fields property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.GetFieldsForObjectCriteriaCollectionAsync(System.Int32,Relativity.Services.Field.FieldRef,System.Int32)">
            <summary>
            Asychronously returns all workspace fields available to the user that can be specified as a subcondition for a given field in a saved search condition. Use to populate field values for batch and multi-object conditions.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.GetFieldsForCriteriaConditionAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns all workspace fields available to the user that can be included in a saved search condition.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.GetEmailToLinkUrlAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns the email link to a specified analytics saved search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.GetReferencedSavedSearchesAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns all referenced saved search artifact id's for a given saved search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IAnalyticsSearchManager.GetAccessStatusAsync(System.Int32,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Asynchronously gets information about user's ability to access the saved search.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to get access to.</param>
            <param name="ancestorArtifactIDs">The list of Artifact ID of the ancestors of the saved search. This argument is used to verify that the position of the saved search in the tree has not been changed.</param>
            <returns>SearchAccessStatus object containing data related to user's ability to access the saved search.</returns>
        </member>
        <member name="T:Relativity.Services.Search.IDataGridSearchManager">
            <summary>
            IDataGridSearchManager interface enables interaction with Relativity DataGrid search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.CreateSingleAsync(System.Int32,Relativity.Services.Search.DataGridSearch)">
            <summary>
            Asynchronously creates an instance of DataGrid saved search in a workspace.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.ReadSingleAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously returns an instance of DataGrid saved search as a DataGridSearch object.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.UpdateSingleAsync(System.Int32,Relativity.Services.Search.DataGridSearch)">
            <summary>
            Asynchronously updates an instance of a DataGrid saved search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves an existing DataGrid saved search. Specify the workspace, search, and destination folder by Artifact ID.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Moves an existing DataGrid saved search. Specify the workspace, search, and destination folder by Artifact ID. Specify the CancellationToken object to enable cancellation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <param name="cancel">The CancellationToken object that defines the token for cancelling the move.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.IProgress{Relativity.Services.MoveProcessStateProgress})">
            <summary>
            Moves an existing DataGrid saved search. Specify the workspace, search, and destination folder by Artifact ID. Specify the MoveProgressState object to display the progress of the operation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the progress while the saved search is moving.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.MoveProcessStateProgress})">
            <summary>
            Moves an existing DataGrid saved search. Specify the workspace, search, and destination folder by Artifact ID. Specify the MoveProgressState and CancellationToken objects to display progress and enable cancellation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <param name="cancel">The CancellationToken object that defines the token for cancelling the move.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the progress while the saved search is moving.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.DeleteSingleAsync(System.Int32,System.Int32)">
            <summary>
            Asyncronously deletes an instance of DataGrid saved search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.CopySingleAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously copies an instance of DataGrid saved search.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="searchArtifactID">The Artifact ID of saved search to be copied.</param>
            <returns>SavedSearchRef object containing reference data of the copied saved search.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.QueryAsync(System.Int32,Relativity.Services.Query)">
            <summary>
            Returns a result set of DataGridSearch objects matching the specified query.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.QueryAsync(System.Int32,Relativity.Services.Query,System.Int32)">
            <summary>
            Returns a result set of DataGridSearch objects matching the specified query.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.QuerySubsetAsync(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Returns a subset of a result set of DataGridSearch objects matching the specified query token.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.GetSearchOwnersAsync(System.Int32)">
            <summary>
            Asychronously returns all users in the workspace with permissions to view saved searches. Use to populate the DataGridSearch.Owners property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.GetSearchIncludesAsync(System.Int32)">
            <summary>
            Asychronously returns all relational fields available to the user in the workspace. Use to populate the DataGridSearch.Includes property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.GetFieldsForSearchResultViewAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns all workspace fields available to the user as the SearchResultViewFields.FieldsNotIncluded property. Use to populate the DataGridSearch.Fields property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.GetFieldsForSearchResultViewAsync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Asychronously returns all fields included in the search as SearchResultViewFields.FieldsIncluded property. Use to populate the DataGridSearch.Fields property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.GetFieldsForObjectCriteriaCollectionAsync(System.Int32,Relativity.Services.Field.FieldRef,System.Int32)">
            <summary>
            Asychronously returns all workspace fields available to the user that can be specified as a subcondition for a given field in a saved search condition. Use to populate field values for batch and multi-object conditions.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.GetFieldsForCriteriaConditionAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns all workspace fields available to the user that can be included in a saved search condition.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.GetEmailToLinkUrlAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns the email link to a specified DataGrid saved search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.GetReferencedSavedSearchesAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns all referenced saved search artifact id's for a given saved search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IDataGridSearchManager.GetAccessStatusAsync(System.Int32,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Asynchronously gets information about user's ability to access the saved search.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to get access to.</param>
            <param name="ancestorArtifactIDs">The list of Artifact ID of the ancestors of the saved search. This argument is used to verify that the position of the saved search in the tree has not been changed.</param>
            <returns>SearchAccessStatus object containing data related to user's ability to access the saved search.</returns>
        </member>
        <member name="T:Relativity.Services.Search.IdtSearchManager">
            <summary>
            IdtSearchManager interface enables interaction with Relativity dtSearch.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.CreateSingleAsync(System.Int32,Relativity.Services.Search.dtSearch)">
            <summary>
            Asynchronously creates an instance of saved dtSearch in a workspace.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.ReadSingleAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously returns an instance of a saved dtSearch as a dtSearch object.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.UpdateSingleAsync(System.Int32,Relativity.Services.Search.dtSearch)">
            <summary>
            Asynchronously updates an instance of a saved dtSearch.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves an existing dtSearch. Specify the workspace, search, and destination folder by Artifact ID.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Moves an existing dtSearch. Specify the workspace, search, and destination folder by Artifact ID. Specify the CancellationToken object to enable cancellation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <param name="cancel">The CancellationToken object that defines the token for cancelling the move.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.IProgress{Relativity.Services.MoveProcessStateProgress})">
            <summary>
            Moves an existing dtSearch. Specify the workspace, search, and destination folder by Artifact ID. Specify the MoveProgressState object to display the progress of the operation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the progress while the saved search is moving.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.MoveProcessStateProgress})">
            <summary>
            Moves an existing dtSearch. Specify the workspace, search, and destination folder by Artifact ID. Specify the MoveProgressState and CancellationToken objects to display progress enable cancellation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <param name="cancel">The CancellationToken object that defines the token for cancelling the move.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the progress while the saved search is moving.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.DeleteSingleAsync(System.Int32,System.Int32)">
            <summary>
            Asyncronously deletes an instance of saved dtSearch.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.CopySingleAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously copies an instance of dtSearch saved search.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="searchArtifactID">The Artifact ID of saved search to be copied.</param>
            <returns>SavedSearchRef object containing reference data of the copied saved search.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.QueryAsync(System.Int32,Relativity.Services.Query)">
            <summary>
            Returns a result set of saved dtSearch objects matching the specified query.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.QueryAsync(System.Int32,Relativity.Services.Query,System.Int32)">
            <summary>
            Returns a result set of saved dtSearch objects matching the specified query.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.QuerySubsetAsync(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Returns a subset of a result set of analytics objects matching the specified query token.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.GetSearchOwnersAsync(System.Int32)">
            <summary>
            Asychronously returns all users in the workspace with permissions to view saved searches. Use to populate the dtSearch.Owners property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.GetSearchIncludesAsync(System.Int32)">
            <summary>
            Asychronously returns all relational fields available to the user in the workspace. Use to populate the dtSearch.Includes property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.GetSearchIndexesAsync(System.Int32)">
            <summary>
            Asychronously returns all dtSearch indexes available to the user in the workspace. Use to populate the dtSearch.SearchIndexID property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.GetFieldsForSearchResultViewAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns all workspace fields available to the user as the SearchResultViewFields.FieldsNotIncluded property. Use to populate the dtSearch.Fields property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.GetFieldsForSearchResultViewAsync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Asychronously returns all fields included in the search as SearchResultViewFields.FieldsIncluded property. Use to populate the dtSearch.Fields property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.GetFieldsForObjectCriteriaCollectionAsync(System.Int32,Relativity.Services.Field.FieldRef,System.Int32)">
            <summary>
            Asychronously returns all workspace fields available to the user that can be specified as a subcondition for a given field in a saved search condition. Use to populate field values for batch and multi-object conditions.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.GetFieldsForCriteriaConditionAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns all workspace fields available to the user that can be included in a saved search condition.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.GetEmailToLinkUrlAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns the email link to a specified saved dtSearch.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.GetReferencedSavedSearchesAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns all referenced saved search artifact id's for a given saved search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.GetAccessStatusAsync(System.Int32,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Asynchronously gets information about user's ability to access the saved search.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to get access to.</param>
            <param name="ancestorArtifactIDs">The list of Artifact ID of the ancestors of the saved search. This argument is used to verify that the position of the saved search in the tree has not been changed.</param>
            <returns>SearchAccessStatus object containing data related to user's ability to access the saved search.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IdtSearchManager.GetDictionarySearchResultsAsync(System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{Relativity.Services.Objects.DataContracts.WordListFieldCondition},Relativity.Services.Objects.DataContracts.WordListSort,System.Int32,System.Int32)">
            <summary>
            Asynchronously returns the dictionary search results matching the search.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the search provider</param>
            <param name="searchProviderID">Search provider ID the search should be run against</param>
            <param name="searchRequest">Term to search again dtSearch endpoint</param>
            <param name="fuzzinessLevel">Fuzzy search level for error tolerance (1-low, 10-high)</param>
            <param name="enableStemming">Toggle whether to apply stemming to search</param>
            <param name="conditions"><see cref="T:Relativity.Services.Objects.DataContracts.WordListFieldCondition"/></param>
            <param name="sort"><see cref="T:Relativity.Services.Objects.DataContracts.WordListSort"/></param>
            <param name="start"></param>
            <param name="length"></param>
            <returns>Response containing word list generated by dtSearch engine (maximum 2,000 terms) <see cref="T:Relativity.Services.Search.WordListDictionaryResponse"/></returns>
            <example>https://&lt;hostname&gt;/Relativity.REST/api/Relativity.Services.Search.ISearchModule/dtSearch%20Manager/GetDictionarySearchResultsAsync</example>
        </member>
        <member name="T:Relativity.Services.Search.IKeywordSearchManager">
            <summary>
            IdtSearchManager interface enables interaction with Relativity dtSearch.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.CreateSingleAsync(System.Int32,Relativity.Services.Search.KeywordSearch)">
            <summary>
            Asynchronously creates an instance of keyword saved search in a workspace.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.ReadSingleAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously returns an instance of keyword saved search as a KeywordSearch object.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.UpdateSingleAsync(System.Int32,Relativity.Services.Search.KeywordSearch)">
            <summary>
            Asynchronously updates an instance of a keyword saved search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves an existing keyword saved search. Specify the workspace, search, and destination folder by Artifact ID.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Moves an existing keyword saved search. Specify the workspace, search, and destination folder by Artifact ID. Specify the CancellationToken object to enable cancellation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <param name="cancel">The CancellationToken object that defines the token for cancelling the move.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.IProgress{Relativity.Services.MoveProcessStateProgress})">
            <summary>
            Moves an existing keyword saved search. Specify the workspace, search, and destination folder by Artifact ID. Specify the MoveProgressState object to display the progress of the operation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the progress while the saved search is moving.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.MoveProcessStateProgress})">
            <summary>
            Moves an existing keyword saved search. Specify the workspace, search, and destination folder by Artifact ID. Specify the MoveProgressState and CancellationToken objects to display progress and enable cancellation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination search container.</param>
            <param name="cancel">The CancellationToken object that defines the token for cancelling the move.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the progress while the saved search is moving.</param>
            <returns>A SavedSearchMoveResultSet object containing status information about the saved search being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.DeleteSingleAsync(System.Int32,System.Int32)">
            <summary>
            Asyncronously deletes an instance of keyword saved search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.CopySingleAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously copies an instance of keyword saved search.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="searchArtifactID">The Artifact ID of saved search to be copied.</param>
            <returns>SavedSearchRef object containing reference data of the copied saved search.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.QueryAsync(System.Int32,Relativity.Services.Query)">
            <summary>
            Returns a result set of KeywordSearch objects matching the specified query.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.QueryAsync(System.Int32,Relativity.Services.Query,System.Int32)">
            <summary>
            Returns a result set of KeywordSearch objects matching the specified query.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.QuerySubsetAsync(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Returns a subset of a result set of KeywordSearch objects matching the specified query token.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.GetSearchOwnersAsync(System.Int32)">
            <summary>
            Asychronously returns all users in the workspace with permissions to view saved searches. Use to populate the KeywordSearch.Owners property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.GetSearchIncludesAsync(System.Int32)">
            <summary>
            Asychronously returns all relational fields available to the user in the workspace. Use to populate the KeywordSearch.Includes property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.GetFieldsForSearchResultViewAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns all workspace fields available to the user as the SearchResultViewFields.FieldsNotIncluded property. Use to populate the KeywordSearch.Fields property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.GetFieldsForSearchResultViewAsync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Asychronously returns all fields included in the search as SearchResultViewFields.FieldsIncluded property. Use to populate the KeywordSearch.Fields property.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.GetFieldsForObjectCriteriaCollectionAsync(System.Int32,Relativity.Services.Field.FieldRef,System.Int32)">
            <summary>
            Asychronously returns all workspace fields available to the user that can be specified as a subcondition for a given field in a saved search condition. Use to populate field values for batch and multi-object conditions.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.GetFieldsForCriteriaConditionAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns all workspace fields available to the user that can be included in a saved search condition.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.GetEmailToLinkUrlAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns the email link to a specified keyword saved search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.GetReferencedSavedSearchesAsync(System.Int32,System.Int32)">
            <summary>
            Asychronously returns all referenced saved search artifact id's for a given saved search.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.GetAccessStatusAsync(System.Int32,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Asynchronously gets information about user's ability to access the saved search.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to get access to.</param>
            <param name="ancestorArtifactIDs">The list of Artifact ID of the ancestors of the saved search. This argument is used to verify that the position of the saved search in the tree has not been changed.</param>
            <returns>SearchAccessStatus object containing data related to user's ability to access the saved search.</returns>
        </member>
        <member name="M:Relativity.Services.Search.IKeywordSearchManager.GetAccessStatusAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously gets information about user's ability to access the saved search without checking for saved search position change in the tree.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the workspace containing the saved search.</param>
            <param name="artifactID">The Artifact ID of saved search to get access to.</param>
            <returns>SearchAccessStatus object containing data related to user's ability to access the saved search.</returns>
        </member>
        <member name="T:Relativity.Services.Search.ISearchContainerManager">
            <summary>
            Search Container Manager.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.CreateSingleAsync(System.Int32,Relativity.Services.Search.SearchContainer)">
            <summary>
            Asynchronously creates an instance of Search Container.
            </summary>
            <param name="workspaceArtifactID">Workspace the new Search Container belongs to.</param>
            <param name="searchContainer">The Search Container DTO to create.</param>
            <returns>Artifact ID of the new Search Container.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.UpdateSingleAsync(System.Int32,Relativity.Services.Search.SearchContainer)">
            <summary>
            Asynchronously updates a Search Container.
            </summary>
            <param name="workspaceArtifactID">Workspace the search contianer is under.</param>
            <param name="searchContainer">The Search Container DTO to update.</param>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.DeleteSingleAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously delets a Search Container and its children.
            </summary>
            <param name="workspaceArtifactID">Workspace the search contianer is under.</param>
            <param name="searchContainerArtifactID">ID of the Search Container to delete.</param>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.QueryAsync(System.Int32,Relativity.Services.Query,System.Int32)">
            <summary>
            Asynchronously queries for Search Containers.
            </summary>
            <param name="workspaceArtifactID">Workspace the search contianer is under.</param>
            <param name="query">Query</param>
            <param name="length">Number of results to return.</param>
            <returns>A SearchContainerResultSet containing query results.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.QueryAsync(System.Int32,Relativity.Services.Query)">
            <summary>
            Asynchronously queries for Search Containers.
            </summary>
            <param name="workspaceArtifactID">Workspace the search contianer is under.</param>
            <param name="query">Query</param>
            <returns>A SearchContainerResultSet containing query results.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.QuerySubsetAsync(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Asynchronously queries for a subset of a collection of Search Container instances.
            </summary>
            <param name="workspaceArtifactID">Workspace the search contianer is under.</param>
            <param name="queryToken">Search Query Token.</param>
            <param name="start">Starting index for this query.</param>
            <param name="length">Number of results to return.</param>
            <returns>A SearchContainerResultSet containing query results.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.ReadSingleAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously read a single Search Container instance.
            </summary>
            <param name="workspaceArtifactID">Workspace the search contianer is under</param>
            <param name="searchContainerArtifactID">ID of the Search Container to Read</param>
            <returns>A Search Container DTO.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.GetSearchContainerItemsAsync(System.Int32,Relativity.Services.Search.SearchContainerRef)">
            <summary>
            Asynchronously get items stored within a Search Container.
            </summary>
            <param name="workspaceArtifactID">Workspace the Search Container is under.</param>
            <param name="searchContainer">Search Container</param>
            <returns>A collection of Search Container and Saved Search nodes within the provided Search Container.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.GetChildSearchContainersAsync(System.Int32,Relativity.Services.Search.SearchContainerRef)">
            <summary>
            Asynchronously gets child Search Containers without search items.
            </summary>
            <param name="workspaceArtifactID">Workspace the Search Container is under.</param>
            <param name="searchContainer">Search Container</param>
            <returns>A collection of Search Container nodes within the provided Search Container.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.GetSearchContainerTreeAsync(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Asynchronously gets tree of Search Containers and Saved Searches with specified nodes expanded.
            </summary>
            <param name="workspaceArtifactID">Workspace the tree of Search Containers is under</param>
            <param name="expandedNodes">List of node IDs to be expanded in returned tree</param>
            <returns>A collection of Search Container nodes matching expanded nodes list with contained Saved Search nodes.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.GetSearchContainerTreeAsync(System.Int32,System.Collections.Generic.List{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Asynchronously gets tree of Search Containers and Saved Searches with specified nodes expanded, auto-expanding full path to the selected node.
            </summary>
            <param name="workspaceArtifactID">Workspace the tree of Search Containers is under.</param>
            <param name="expandedNodes">List of node IDs to be expanded in returned tree.</param>
            <param name="selectedNode">ID of the node to be included in the expand chain.</param>
            <returns>A collection of Search Container nodes matching expanded nodes list with contained Saved Search nodes.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.GetFilteredSearchContainerTreeAsync(System.Int32,System.String)">
            <summary>
            Asynchronously gets the tree of search containers and saved searches matching the search condition specified as a query string.
            </summary>
            <param name="workspaceArtifactId">Workspace the tree of Search Containers is under.</param>
            <param name="searchCondition">Search keyword for tree nodes to be matched against.</param>
            <returns>A collection of Search Container and Saved Search nodes matching provided search conditions.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.GetFilteredWithAdvancedOptionsSearchContainerTreeAsync(System.Int32,Relativity.Services.DataContracts.DTOs.Search.SearchContainerTreeFilter)">
            <summary>
            Asynchronously gets the tree of search containers and saved searches matching the search condition specified as a SearchContainerTreeFilter object.
            </summary>
            <param name="workspaceArtifactID">Workspace the tree of Search Containers is under.</param>
            <param name="filter">Search fields(CreatedBy, LastModifiedBy, Owner and etc.) for tree nodes to be matched against.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.MoveAsync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves an existing saved search folder (search container) and its children, including subfolders and saved searches. Specify the workspace, source folder, and destination folder by Artifact ID.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the Workspace containing the Search Container.</param>
            <param name="artifactID">The Artifact ID of Search Container to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination Search Container.</param>
            <returns>A SearchContainerMoveResultSet object containing status information about the Search Container being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Moves an existing saved search folder (search container) and its children, including subfolders and saved searches. Specify the workspace, source folder, and destination folder by Artifact ID. Specify the CancellationToken object to enable cancellation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the Workspace containing the Search Container.</param>
            <param name="artifactID">The Artifact ID of Search Container to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination Search Container.</param>
            <param name="cancel">The CancellationToken object that defines the token for cancelling the move.</param>
            <returns>A SearchContainerMoveResultSet object containing status information about the Search Container being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.IProgress{Relativity.Services.MoveProcessStateProgress})">
            <summary>
            Moves an existing saved search folder (search container) and its children, including subfolders and saved searches. Specify the workspace, source folder, and destination folder by Artifact ID. Specify the MoveProgressState object to display the progress of the operation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the Workspace containing the Search Container.</param>
            <param name="artifactID">The Artifact ID of Search Container to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination Search Container.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the progress while the Search Container is moving.</param>
            <returns>A SearchContainerMoveResultSet object containing status information about the Search Container being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.MoveAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.MoveProcessStateProgress})">
            <summary>
            Moves an existing saved search folder (search container) and its children, including subfolders and saved searches. Specify the workspace, source folder, and destination folder by Artifact ID. Specify the MoveProgressState and CancellationToken objects to display progress and enable cancellation.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the Workspace containing the Search Container.</param>
            <param name="artifactID">The Artifact ID of Search Container to be moved.</param>
            <param name="destinationContainerID">The Artifact ID of the destination Search Container.</param>
            <param name="cancel">The CancellationToken object that defines the token for cancelling the move.</param>
            <param name="progress">The IProgress object that defines the provider for reporting the progress while the Search Container is moving.</param>
            <returns>A SearchContainerMoveResultSet object containing status information about the Search Container being moved.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.GetAdvancedSearchViewInfoAsync(System.Int32)">
            <summary>
            Asynchronously gets the fields of Advanced Search browser View, if user has read permissions for view. 
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the Workspace.</param>
            <returns>A AdvancedSearchViewInfo object containing information for advanced search filtering</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.GetAdvancedSearchViewUniqueOwnersAsync(System.Int32)">
            <summary>
            Asynchronously gets the users that are owners of at least one of saved searches in workspace.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the Workspace.</param>
            <returns>A collection of users that are owners of at least one saved search in the workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.GetAdvancedSearchViewUniqueCreatedByAsync(System.Int32)">
            <summary>
            Asynchronously gets the users that have created at least one of saved searches in workspace.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the Workspace.</param>
            <returns>A collection of users that have created at least one saved search in the workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchContainerManager.GetAdvancedSearchViewUniqueModifiedByAsync(System.Int32)">
            <summary>
            Asynchronously gets the users that have modified at least one of saved searches in workspace.
            </summary>
            <param name="workspaceArtifactID">The Artifact ID of the Workspace.</param>
            <returns>A collection of users that have modified at least one saved search in the workspace.</returns>
        </member>
        <member name="T:Relativity.Services.Search.ISearchProviderManager">
            <summary>
            ISearchProviderManager interface enables querying for search providers and their markup within a Relativity workspace.
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.ISearchProviderManager.GetActiveHtmlSearchProvidersAsync(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Retrieve all the active search providers that support a fully HTML UI.
            </summary>
            <param name="workspaceId">WorkspaceID of the workspace which contains the search providers.</param>
            <param name="artifactTypeId">ArtifactTypeId of the object that the search providers will search against.</param>
            <param name="useAdvancedSearch">If true, the markup returned will be the search provider's advanced markup. Otherwise, it will be the basic markup.</param>
            <returns>Returns the search providers that are active and supported through a fully HTML UI, along with a collection of the markup used by the search providers.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchProviderManager.GetActiveHtmlSearchProvidersAsync(System.Int32,System.Int32,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Retrieve all the active search providers that support a fully HTML UI.
            </summary>
            <param name="workspaceId">WorkspaceID of the workspace which contains the search providers.</param>
            <param name="artifactTypeId">ArtifactTypeId of the object that the search providers will search against.</param>
            <param name="useAdvancedSearch">If true, the markup returned will be the search provider's advanced markup. Otherwise, it will be the basic markup.</param>
            <param name="cancellationToken">Used to request cancel of the search provider service execution.</param>
            <returns>Returns the search providers that are active and supported through a fully HTML UI, along with a collection of the markup used by the search providers.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchProviderManager.GetActiveHtmlSearchProvidersAsync(System.Int32,System.Int32,System.Boolean,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Retrieve all the active search providers that support a fully HTML UI.
            </summary>
            <param name="workspaceId">WorkspaceID of the workspace which contains the search providers.</param>
            <param name="artifactTypeId">ArtifactTypeId of the object that the search providers will search against.</param>
            <param name="useAdvancedSearch">If true, the markup returned will be the search provider's advanced markup. Otherwise, it will be the basic markup.</param>
            <param name="progress">Contains a callback that will report service execution progress.</param>
            <returns>Returns the search providers that are active and supported through a fully HTML UI, along with a collection of the markup used by the search providers.</returns>
        </member>
        <member name="M:Relativity.Services.Search.ISearchProviderManager.GetActiveHtmlSearchProvidersAsync(System.Int32,System.Int32,System.Boolean,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Retrieve all the active search providers that support a fully HTML UI.
            </summary>
            <param name="workspaceId">WorkspaceID of the workspace which contains the search providers.</param>
            <param name="artifactTypeId">ArtifactTypeId of the object that the search providers will search against.</param>
            <param name="useAdvancedSearch">If true, the markup returned will be the search provider's advanced markup. Otherwise, it will be the basic markup.</param>
            <param name="cancellationToken">Used to request cancel of the search provider service execution.</param>
            <param name="progress">Contains a callback that will report service execution progress.</param>
            <returns>Returns the search providers that are active and supported through a fully HTML UI, along with a collection of the markup used by the search providers.</returns>
        </member>
        <member name="T:Relativity.Services.Search.ISearchModule">
            <summary>
            Search Manager Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.SearchProvider">
            <summary>
            Represents an instance of a search provider
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchProvider.ArtifactId">
            <summary>
            The unique identifier for the search provider
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchProvider.Name">
            <summary>
            The display name for the search provider
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchProvider.MarkupId">
            <summary>
            The id that corresponds to the markup used by this search provider
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchProvider.BasicSearchMarkupId">
            <summary>
            The id that corresponds to the markup used by this search provider in basic search panel
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchProvider.Type">
            <summary>
            The type of the search provider
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.SearchProviderMarkup">
            <summary>
            Represents an instance of search provider markup 
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchProviderMarkup.Id">
            <summary>
            A unique string that will be replace SEARCHPROVIDERIDSUFFIX within the markup. This should be used as a suffix to all HTML ids declared within the markup to ensure uniqueness of ids.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchProviderMarkup.Markup">
            <summary>
            The HTML string that will be used for the markup
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.SearchProviderResultSet">
            <summary>
            Object that is returned when making calls to the Search Provider Manager service
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchProviderResultSet.Success">
            <summary>
            Boolean value indicating whether the service call was a success or not.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchProviderResultSet.Message">
            <summary>
            String that will contain error messages, if any.
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchProviderResultSet.SearchProviders">
            <summary>
            Collection of the available search providers
            </summary>
        </member>
        <member name="P:Relativity.Services.Search.SearchProviderResultSet.MarkupCollection">
            <summary>
            Collection of the distinct markup used by the search providers
            </summary>
        </member>
        <member name="T:Relativity.Services.Search.Serialization.CriteriaCollectionSerializer">
            <summary>
            Class that contains methods to serialize Saved Search Criteria
            </summary>
        </member>
        <member name="M:Relativity.Services.Search.Serialization.CriteriaCollectionSerializer.TransformForSerialize(Relativity.Services.Search.CriteriaCollection)">
            <summary>
            Transforms model for Serialization
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Search.Serialization.CriteriaCollectionSerializer.TransformForDeserialize(System.Object)">
            <summary>
            Transforms data for DeSerialzation
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Search.Serialization.CriteriaCollectionSerializer.GetCriteriaDateConditionDateTimeRangeEnum(System.Object)">
            <summary>
            Get a DateTimeRange Enum.
            </summary>
            <param name="value">Object Value</param>
            <returns>A DateTimeRange value.</returns>
        </member>
        <member name="M:Relativity.Services.Search.Serialization.CriteriaCollectionSerializer.GetMonthEnum(System.Object)">
            <summary>
            Get a DateTimeRange Enum.
            </summary>
            <param name="value">Object Value</param>
            <returns>A DateTimeRange value.</returns>
        </member>
        <member name="M:Relativity.Services.Search.Serialization.CriteriaCollectionSerializer.GetOperatorEnum(System.Object)">
            <summary>
            Get a CriteriaConditionEnum Enum.
            </summary>
            <param name="value">Object Value</param>
            <returns>A CriteriaConditionEnum value.</returns>
        </member>
        <member name="M:Relativity.Services.Search.Serialization.CriteriaCollectionSerializer.GetOperatorDateEnum(System.Object)">
            <summary>
            Get a CriteriaDateConditionEnum Enum.
            </summary>
            <param name="value">Object Value</param>
            <returns>A CriteriaConditionEnum value.</returns>
        </member>
        <member name="M:Relativity.Services.Search.Serialization.CriteriaCollectionSerializer.GetCriteriaBooleanOperatorEnum(System.Object)">
            <summary>
            Get a CriteriaDateConditionEnum Enum.
            </summary>
            <param name="value">Object Value</param>
            <returns>A CriteriaConditionEnum value.</returns>
        </member>
        <member name="T:Relativity.Services.StaticObject.BrandingQueueQueryResultSet">
            <summary>
            Represents the output of a Branding queue query operation
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.BrandingQueueQueryResultSet.DataResults">
            <summary>
            Query result items.
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.BrandingQueueQueryResultSet.ResultCount">
            <summary>
            Count of objects returned for this call.
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.BrandingQueueQueryResultSet.TotalResultCount">
            <summary>
            Total count of objects in the entire query (Including objects that were not returned in this call due to requested page size being smaller than TotalResultCount).
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.BrandingQueueQueryResultSet.CurrentStartIndex">
            <summary>
            Start index of the results relative to the entire query result set.
            </summary>
        </member>
        <member name="T:Relativity.Services.StaticObject.BrandingSetQueueSubmitter">
            <summary>
            Represents the output of a Branding set queue submitter
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.BrandingSetQueueSubmitter.UserID">
            <summary>
            UserID of submitter
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.BrandingSetQueueSubmitter.Name">
            <summary>
            Name of submitter
            </summary>
        </member>
        <member name="T:Relativity.Services.StaticObject.OCRQueueQueryResultSet">
            <summary>
            Represents the output of a OCR queue query operation
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.OCRQueueQueryResultSet.DataResults">
            <summary>
            Query result items.
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.OCRQueueQueryResultSet.ResultCount">
            <summary>
            Count of objects returned for this call.
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.OCRQueueQueryResultSet.TotalResultCount">
            <summary>
            Total count of objects in the entire query (Including objects that were not returned in this call due to requested page size being smaller than TotalResultCount).
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.OCRQueueQueryResultSet.CurrentStartIndex">
            <summary>
            Start index of the results relative to the entire query result set.
            </summary>
        </member>
        <member name="T:Relativity.Services.StaticObject.PermissionResultSet">
            <summary>
            User permissions for static objects
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.PermissionResultSet.CanChangeQueuePriority">
            <summary>
            Gets or sets if user has permission to change item priority in queue
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.PermissionResultSet.CanAccessServerTab">
            <summary>
            Gets or sets if user has permission to access Servers tab
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.PermissionResultSet.CanForceUserLogout">
            <summary>
            Gets or sets if user has permission to force user logout
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.PermissionResultSet.CanSendMessage">
            <summary>
            Gets or sets if user has permission to send a message
            </summary>
        </member>
        <member name="T:Relativity.Services.StaticObject.ProductionQueueQueryResultSet">
            <summary>
            Represents the output of a Production queue query operation
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.ProductionQueueQueryResultSet.DataResults">
            <summary>
            Query result artifacts.
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.ProductionQueueQueryResultSet.ResultCount">
            <summary>
            Count of return objects returned for this call.
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.ProductionQueueQueryResultSet.TotalResultCount">
            <summary>
            Total count of return objects in the entire query (Including objects that were not returned in this call due to requested page size being smaller than TotalResultCount).
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.ProductionQueueQueryResultSet.CurrentStartIndex">
            <summary>
            Start index of the results relative to the entire query result set.
            </summary>
        </member>
        <member name="T:Relativity.Services.StaticObject.ProductionSetQueueSubmitter">
            <summary>
            Represents the output of a Production set queue submitter
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.ProductionSetQueueSubmitter.UserID">
            <summary>
            UserID of submitter
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.ProductionSetQueueSubmitter.Name">
            <summary>
            Name of submitter
            </summary>
        </member>
        <member name="T:Relativity.Services.StaticObject.StartupInfoResultSet">
            <summary>
            Static Object startup info result set
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.StartupInfoResultSet.UserSettings">
            <summary>
            Sets or gets User settings. See <see cref="T:Relativity.Services.StaticObject.UserSettingsResult" /> for details
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.StartupInfoResultSet.Permissions">
            <summary>
            Gets or sets user permissions. See <see cref="T:Relativity.Services.StaticObject.PermissionResultSet"/> for details
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.StartupInfoResultSet.UserPreferences">
            <summary>
            Gets or sets user preferences unstructured data for static objects
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.StartupInfoResultSet.ViewFieldWidthCollection">
            <summary>
            Gets or sets the collection of field widths
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.StartupInfoResultSet.Toggles">
            <summary>
            Gets toggles for static pages
            </summary>
        </member>
        <member name="T:Relativity.Services.StaticObject.UserSettingsResult">
            <summary>
            Represents user settings for Static Object list view
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.UserSettingsResult.ItemListPageLength">
            <summary>
            Gets or sets number of items to display in page based on logged in user's setting
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.UserSettingsResult.ShowFilters">
            <summary>
            Gets or sets whether or not to show filters based on logged in user's setting
            </summary>
        </member>
        <member name="T:Relativity.Services.StaticObject.UserStatusQueryResultSet">
            <summary>
            Represents the output of a User status query operation
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.UserStatusQueryResultSet.DataResults">
            <summary>
            Query result items.
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.UserStatusQueryResultSet.ResultCount">
            <summary>
            Count of objects returned for this call.
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.UserStatusQueryResultSet.TotalResultCount">
            <summary>
            Total count of objects in the entire query (Including objects that were not returned in this call due to requested page size being smaller than TotalResultCount).
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.UserStatusQueryResultSet.CurrentStartIndex">
            <summary>
            Start index of the results relative to the entire query result set.
            </summary>
        </member>
        <member name="T:Relativity.Services.StaticObject.WorkerManagerQueueQueryResultSet">
            <summary>
            Represents the output of a Worker Manager Queue query operation
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.WorkerManagerQueueQueryResultSet.DataResults">
            <summary>
            Query result items.
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.WorkerManagerQueueQueryResultSet.ResultCount">
            <summary>
            Count of return objects returned for this call.
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.WorkerManagerQueueQueryResultSet.TotalResultCount">
            <summary>
            Total count of return objects in the entire query (Including objects that were not returned in this call due to requested page size being smaller than TotalResultCount).
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.WorkerManagerQueueQueryResultSet.CurrentStartIndex">
            <summary>
            Start index of the results relative to the entire query result set.
            </summary>
        </member>
        <member name="T:Relativity.Services.StaticObject.WorkspaceUpgradeQueueQueryResultSet">
            <summary>
            Represents the output of a Workspace Upgrade queue query operation
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.WorkspaceUpgradeQueueQueryResultSet.DataResults">
            <summary>
            Query result artifacts.
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.WorkspaceUpgradeQueueQueryResultSet.ResultCount">
            <summary>
            Count of return objects returned for this call.
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.WorkspaceUpgradeQueueQueryResultSet.TotalResultCount">
            <summary>
            Total count of return objects in the entire query (Including objects that were not returned in this call due to requested page size being smaller than TotalResultCount).
            </summary>
        </member>
        <member name="P:Relativity.Services.StaticObject.WorkspaceUpgradeQueueQueryResultSet.CurrentStartIndex">
            <summary>
            Start index of the results relative to the entire query result set.
            </summary>
        </member>
        <member name="T:Relativity.Services.View.ViewAccessStatus">
            <summary>
            Indicates whether a user has View permissions on the specified view, and whether a user has View permissions on all fields used in the search conditions on the view.
            </summary>
        </member>
        <member name="P:Relativity.Services.View.ViewAccessStatus.Exists">
            <summary>
            Gets or sets a value indicating whether View exists.
            </summary>
            <value>
              <c>true</c> if exists; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Relativity.Services.View.ViewAccessStatus.CanView">
            <summary>
            Gets or sets a value indicating whether View can be viewed.
            </summary>
            <value>
              <c>true</c> if View can be viewed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Relativity.Services.View.ViewAccessStatus.CanViewCriteriaFields">
            <summary>
            Gets or sets a value  whether View criteria fields can be viewed.
            </summary>
            <value>
            <c>true</c> if all View criteria fields can be viewed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Relativity.Services.View.IViewManager">
            <summary>
            Defines methods for managing Views.
            </summary>
        </member>
        <member name="M:Relativity.Services.View.IViewManager.ReadSingleAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously returns the current settings for properties on a view.
            </summary>
            <param name="workspaceArtifactID">Artifact ID of the workspace that contains the view.</param>
            <param name="viewArtifactID">Artifact ID of the view to read.</param>
            <returns>View settings as properties on a View object.</returns>
        </member>
        <member name="M:Relativity.Services.View.IViewManager.CreateSingleAsync(System.Int32,Relativity.Services.View.View)">
            <summary>
            Asynchronously creates an instance of View in a workspace.
            </summary>
            <param name="workspaceArtifactID">Artifact ID of the workspace where the view will be created.</param>
            <param name="viewDTO">An instance of a View object containing the property values used to create the view.</param>
            <returns>Artifact ID of the newly created view.</returns>
        </member>
        <member name="M:Relativity.Services.View.IViewManager.UpdateSingleAsync(System.Int32,Relativity.Services.View.View)">
            <summary>
            Asynchronously modifies properties on a view.
            </summary>
            <param name="workspaceArtifactID">Artifact ID of the workspace that contains the view.</param>
            <param name="viewDTO">An instance of View that contains properties on a view requiring updates.</param>
        </member>
        <member name="M:Relativity.Services.View.IViewManager.GetViewOwnersAsync(System.Int32)">
            <summary>
            Asynchronously returns workspace users who can be assigned ownership of a view. Users must have view permissions to the view.
            </summary>
            <param name="workspaceArtifactID">Artifact ID of the workspace.</param>
            <returns>List of UserRef objects representing users who can be assigned ownership of a view.</returns>
        </member>
        <member name="M:Relativity.Services.View.IViewManager.GetObjectTypesAsync(System.Int32)">
            <summary>
            Asychronously returns list of object types in a workspace.
            </summary>
            <param name="workspaceArtifactID">Artifact ID of the workspace.</param>
            <returns>List of object types as ObjectTypeRef objects.</returns>
        </member>
        <member name="M:Relativity.Services.View.IViewManager.GetAccessStatusAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously retrieves information about whether a user has View permissions to a view, and to the fields used in search conditions on the view.
            </summary>
            <param name="workspaceArtifactID">Artifact ID of the workspace that contains the view.</param>
            <param name="artifactID">Artifact ID of the view to get access status of.</param>
            <returns>ViewAccessStatus object that contains information about the user's ability to access the view.</returns>
        </member>
        <member name="M:Relativity.Services.View.IViewManager.GetIsViewLockedAsync(System.Int32,Relativity.Services.View.View)">
            <summary>
            Asynchronously returns whether the view is contained in a locked application.
            </summary>
            <param name="workspaceArtifactID">Artifact ID of the workspace that contains the view.</param>
            <param name="viewDTO">An instance of the View</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.View.IViewModule">
            <summary>
            View Interface.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.Exceptions.EventHandlerFailedException">
            <summary>
            The exception thrown when an event handler fails during an update operation performed through the Object Manager service.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.EventHandlerFailedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the EventHandlerFailedException class with a string.
            </summary>
            <param name="message">The message captured in the exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.EventHandlerFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the EventHandlerFailedException class with a string and inner exception.
            </summary>
            <param name="message">The message captured in the exception.</param>
            <param name="innerException">The inner exception captured.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.EventHandlerFailedException.#ctor(System.String,System.Exception,System.String,Relativity.Services.Objects.DataContracts.EventHandlerExecutionType,System.String,System.Nullable{System.Guid})">
            <summary>
            Initializes a new instance of the EventHandlerFailedException class with a string and inner exception.
            </summary>
            <param name="message">The message captured in the exception.</param>
            <param name="innerException">The inner exception captured.</param>
            <param name="className">The name of the class that defines the failed event handler.</param>
            <param name="eventHandlerType">The execution type of the failed event handler.</param>
            <param name="applicationName">The application name which the assembly containing the failed event handler is associated with.</param>
            <param name="applicationGuid">The application GUID which the assembly containing the failed event handler is associated with.</param>
        </member>
        <member name="P:Relativity.Services.Objects.Exceptions.EventHandlerFailedException.ClassName">
            <summary>
            Gets or Sets the name of the class that defines the failed event handler.
            </summary>
            <remarks>Is null when consumer does not have permission to view the associated application.</remarks>
        </member>
        <member name="P:Relativity.Services.Objects.Exceptions.EventHandlerFailedException.EventHandlerType">
            <summary>
            Gets or Sets the execution type of the failed event handler.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.Exceptions.EventHandlerFailedException.ApplicationName">
            <summary>
            Gets or Sets the application name which the assembly containing the
            failed event handler is associated with.
            </summary>
            <remarks>Is null when consumer does not have permission to view the associated application.</remarks>
        </member>
        <member name="P:Relativity.Services.Objects.Exceptions.EventHandlerFailedException.ApplicationGuid">
            <summary>
            Gets or Sets the application GUID which the assembly containing the
            failed event handler is associated with.
            </summary>
            <remarks>Is null when consumer does not have permission to view the associated application.</remarks>
        </member>
        <member name="T:Relativity.Services.Objects.Exceptions.ArtifactNotFoundException">
            <summary>
            Represents exceptions that occur when Object Manager can't find an artifact required for an operation.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.ArtifactNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the ArtifactNotFoundException class.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.ArtifactNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ArtifactNotFoundException class with an error message that describes the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.ArtifactNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ArtifactNotFoundException class with a message that describes the exception and a reference to the inner exception that caused the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
            <param name="innerException">Gets the Exception instance that caused the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.ArtifactNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ArtifactNotFoundException class with serialized data.
            </summary>
            <param name="info">Gets serialized object data about the current exception.</param>
            <param name="context">Gets information about the source or destination of the serialized stream and provides an additional caller-defined context.</param>
        </member>
        <member name="T:Relativity.Services.Objects.Exceptions.DuplicateArtifactException">
            <summary>
            Represents exceptions that occur when specifying a field or object more than once in Object Manager
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.DuplicateArtifactException.#ctor">
            <summary>
            Initializes a new instance of the DuplicateArtifactException class.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.DuplicateArtifactException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DuplicateArtifactException class with an error message that describes the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.DuplicateArtifactException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the DuplicateArtifactException class with a message that describes the exception and a reference to the inner exception that caused the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
            <param name="innerException">Gets the Exception instance that caused the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.DuplicateArtifactException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the DuplicateArtifactException class with serialized data.
            </summary>
            <param name="info">Gets serialized object data about the current exception.</param>
            <param name="context">Gets information about the source or destination of the serialized stream and provides an additional caller-defined context.</param>
        </member>
        <member name="T:Relativity.Services.Objects.Exceptions.InsufficientArgumentException">
            <summary>
            Represents exceptions that occur when a parameter does not have enough fields or values in Object Manager
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.InsufficientArgumentException.#ctor">
            <summary>
            Initializes a new instance of the InsufficientArgumentException class.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.InsufficientArgumentException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the InsufficientArgumentException class with an error message that describes the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.InsufficientArgumentException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the InsufficientArgumentException class with a message that describes the exception and a reference to the inner exception that caused the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
            <param name="innerException">Gets the Exception instance that caused the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.InsufficientArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the InsufficientArgumentException class with serialized data.
            </summary>
            <param name="info">Gets serialized object data about the current exception.</param>
            <param name="context">Gets information about the source or destination of the serialized stream and provides an additional caller-defined context.</param>
        </member>
        <member name="T:Relativity.Services.Objects.Exceptions.InvalidObjectTypeException">
            <summary>
            Represents exceptions that occur when specifying an object of a different object type than Object Manager expects.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.InvalidObjectTypeException.#ctor">
            <summary>
            Initializes a new instance of the InvalidObjectTypeException class.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.InvalidObjectTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the InvalidObjectTypeException class with an error message that describes the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.InvalidObjectTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the InvalidObjectTypeException class with a message that describes the exception and a reference to the inner exception that caused the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
            <param name="innerException">Gets the Exception instance that caused the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.InvalidObjectTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the InvalidObjectTypeException class with serialized data.
            </summary>
            <param name="info">Gets serialized object data about the current exception.</param>
            <param name="context">Gets information about the source or destination of the serialized stream and provides an additional caller-defined context.</param>
        </member>
        <member name="T:Relativity.Services.Objects.Exceptions.InvalidValueTypeException">
            <summary>
            Represents exceptions that occur when specifying the wrong type of value in Object Manager
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.InvalidValueTypeException.#ctor">
            <summary>
            Initializes a new instance of the InvalidValueTypeException class.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.InvalidValueTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the InvalidValueTypeException class with an error message that describes the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.InvalidValueTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the InvalidValueTypeException class with a message that describes the exception and a reference to the inner exception that caused the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
            <param name="innerException">Gets the Exception instance that caused the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.InvalidValueTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the InvalidValueTypeException class with serialized data.
            </summary>
            <param name="info">Gets serialized object data about the current exception.</param>
            <param name="context">Gets information about the source or destination of the serialized stream and provides an additional caller-defined context.</param>
        </member>
        <member name="T:Relativity.Services.Objects.Exceptions.MissingArgumentException">
            <summary>
            Represents exceptions that occur when missing required parameters in Object Manager
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.MissingArgumentException.#ctor">
            <summary>
            Initializes a new instance of the MissingArgumentException class.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.MissingArgumentException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MissingArgumentException class with an error message that describes the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.MissingArgumentException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the MissingArgumentException class with a message that describes the exception and a reference to the inner exception that caused the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
            <param name="innerException">Gets the Exception instance that caused the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.MissingArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the MissingArgumentException class with serialized data.
            </summary>
            <param name="info">Gets serialized object data about the current exception.</param>
            <param name="context">Gets information about the source or destination of the serialized stream and provides an additional caller-defined context.</param>
        </member>
        <member name="T:Relativity.Services.Objects.Exceptions.PermissionDeniedException">
            <summary>
            Represents exceptions that occur when trying to modify an object the user does not have permission to in Object Manager
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.PermissionDeniedException.#ctor">
            <summary>
            Initializes a new instance of the PermissionDeniedException class.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.PermissionDeniedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PermissionDeniedException class with an error message that describes the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.PermissionDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the PermissionDeniedException class with a message that describes the exception and a reference to the inner exception that caused the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
            <param name="innerException">Gets the Exception instance that caused the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.PermissionDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the PermissionDeniedException class with serialized data.
            </summary>
            <param name="info">Gets serialized object data about the current exception.</param>
            <param name="context">Gets information about the source or destination of the serialized stream and provides an additional caller-defined context.</param>
        </member>
        <member name="T:Relativity.Services.Objects.Exceptions.UnsupportedFieldTypeException">
            <summary>
            Represents exceptions that occur when specifying a field type that Object Manager does not support.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.UnsupportedFieldTypeException.#ctor">
            <summary>
            Initializes a new instance of the UnsupportedFieldTypeException class.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.UnsupportedFieldTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the UnsupportedFieldTypeException class with an error message that describes the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.UnsupportedFieldTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the UnsupportedFieldTypeException class with a message that describes the exception and a reference to the inner exception that caused the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
            <param name="innerException">Gets the Exception instance that caused the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.UnsupportedFieldTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the UnsupportedFieldTypeException class with serialized data.
            </summary>
            <param name="info">Gets serialized object data about the current exception.</param>
            <param name="context">Gets information about the source or destination of the serialized stream and provides an additional caller-defined context.</param>
        </member>
        <member name="T:Relativity.Services.Objects.Exceptions.UnsupportedObjectTypeException">
            <summary>
            Represents exceptions that occur when specifying an object type that Object Manager does not support.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.UnsupportedObjectTypeException.#ctor">
            <summary>
            Initializes a new instance of the UnsupportedObjectTypeException class.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.UnsupportedObjectTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the UnsupportedObjectTypeException class with an error message that describes the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.UnsupportedObjectTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the UnsupportedObjectTypeException class with a message that describes the exception and a reference to the inner exception that caused the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
            <param name="innerException">Gets the Exception instance that caused the current exception.</param>
        </member>
        <member name="M:Relativity.Services.Objects.Exceptions.UnsupportedObjectTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the UnsupportedObjectTypeException class with serialized data.
            </summary>
            <param name="info">Gets serialized object data about the current exception.</param>
            <param name="context">Gets information about the source or destination of the serialized stream and provides an additional caller-defined context.</param>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.CallingContext">
            <summary>
            Represents information about the web context from which the event handler is being called, such as the layout or page mode.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.CallingContext.Layout">
            <summary>
            Gets or set a <see cref="T:Relativity.Services.Objects.DataContracts.LayoutRef"/> containing the name and artifact ID of the layout associated with a call to an event handler.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.CallingContext.Referrer">
            <summary>
            Gets or sets a string indicating where the call to the event handler originates. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.CallingContext.PageMode">
            <summary>
            Gets or sets the information needed by the event handler about the step in the page workflow associated with a call, such as a layout, list, edit, or other.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.Choice">
            <summary>
            Represents the value for choice fields. 
            </summary>
            <remarks>
            A Choice object is returned for single choice fields, while a list of these objects is returned for multiple choice fields.
            </remarks>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Choice.Name">
            <summary>
            Gets or sets the user-friendly name of a Choice object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Choice.Guids">
            <summary>
            Gets or sets a list of GUIDs used to identify a Choice object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Choice.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of a Choice object. 
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.ChoiceRef">
            <summary>
            Represents a key or reference to a Choice object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ChoiceRef.Guid">
            <summary>
            Gets or sets a GUID used to identify a Choice object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ChoiceRef.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of a Choice object. 
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.CreateRequest">
            <summary>
            Represents a request to create a Relativity Dynamic Object (RDO). 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.CreateRequest.ParentObject">
            <summary>
            Gets or sets the parent <see cref="T:Relativity.Services.Objects.DataContracts.RelativityObjectRef"/> of the new object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.CreateRequest.ObjectType">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Objects.DataContracts.ObjectTypeRef"/> for the type of the new object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.CreateRequest.FieldValues">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Objects.DataContracts.FieldRefValuePair"/> collection, which each contain a <see cref="T:Relativity.Services.Objects.DataContracts.FieldRef"/> and corresponding value to set on the new object.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.CreateResult">
            <summary>
            Represents the results of a create operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.CreateResult.Object">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Objects.DataContracts.RelativityObject"/> containing the fields and their values constructed by a create operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.CreateResult.EventHandlerStatuses">
            <summary>
            Gets a collection of <see cref="T:Relativity.Services.Objects.DataContracts.EventHandlerStatus"/> objects containing information about event handler execution.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.DeleteItem">
            <summary>
            Provides information about each item that was deleted.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.DeleteItem.ObjectTypeName">
            <summary>
            Gets or sets a string indicating the type of the object the was deleted.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.DeleteItem.Action">
            <summary>
            Gets or sets a string indicating the action taken to remove an object, such as delete for child objects, and unlink for associative objects.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.DeleteItem.Count">
            <summary>
            Gets or sets the number of objects that were deleted.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.DeleteItem.Connection">
            <summary>
            Gets or sets a string indicating the relationship between the deleted dependent objects, such as parent, child, and associative object.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.DeleteProcessStateProgress">
            <summary>
            Represents the progress object for mass delete processes.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.DeleteProcessStateProgress.OperationsCompleted">
            <summary>
            Gets or sets the operations completed count.
            </summary>
            <value>
            The operations completed.
            </value>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.DeleteProcessStateProgress.TotalOperations">
            <summary>
            Gets or sets the total operations count.
            </summary>
            <value>
            The total operations.
            </value>
        </member>
        <member name="M:Relativity.Services.Objects.DataContracts.DeleteProcessStateProgress.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Relativity.Services.Objects.DataContracts.DeleteProcessStateProgress"/> class.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.DataContracts.DeleteProcessStateProgress.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Relativity.Services.Objects.DataContracts.DeleteProcessStateProgress"/> class with the total operations and operations completed counts.
            </summary>
            <param name="totalOperations">The total operations count.</param>
            <param name="operationsCompleted">The operations completed count.</param>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.DeleteReport">
            <summary>
            Contains information about deleted objects as a list of one or more deleted items.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.DeleteReport.DeletedItems">
            <summary>
            Gets or set a list of <see cref="T:Relativity.Services.Objects.DataContracts.DeleteItem"/> objects containing the number, object type, and other information about the deleted items.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.DeleteRequest">
            <summary>
            Represents a request to delete a Document or Relativity Dynamic Object (RDO). 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.DeleteRequest.Object">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Objects.DataContracts.RelativityObjectRef"/> for the Document or Relativity Dynamic Object (RDO) to be deleted.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.DeleteResult">
            <summary>
            Represents the results of a delete operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.DeleteResult.Report">
            <summary>
            Gets or sets a <see cref="T:Relativity.Services.Objects.DataContracts.DeleteReport"/> containing information about the deleted items.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.DependencyListByObjectIdentifiersRequest">
            <summary>
            Represents a request for information about objects dependent on one or more Relativity Objects.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.DependencyListByObjectIdentifiersRequest.Objects">
            <summary>
            Gets or sets a list of objects used to generate the dependency list.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.EventHandlerExecutionType">
            <summary>
             Specifies the execution type of the event handler.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.EventHandlerExecutionType.PostSave">
            <summary>
             Executes after a user changes field values and clicks the Save button.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.EventHandlerExecutionType.PreCascadeDelete">
            <summary>
             Executes before the delete process starts for an object that has dependant objects.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.EventHandlerExecutionType.PreDelete">
            <summary>
             Executes before an object is deleted.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.EventHandlerExecutionType.PreLoad">
            <summary>
             Executes on the an object's view and edit pages.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.EventHandlerExecutionType.PreMassDelete">
            <summary>
             Executes before the deletion of a large set of objects.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.EventHandlerExecutionType.PreSave">
            <summary>
             Executes after a user changes field values and clicks the Save button.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.EventHandlerRef">
            <summary>
            Describes an event handler's origin and execution type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.EventHandlerRef.ClassName">
            <summary>
             Gets the name of the class that defines the event handler.
            </summary>
            <remarks>Is null when consumer does not have permission to view the associated application.</remarks>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.EventHandlerRef.EventHandlerType">
            <summary>
            Gets the execution type of the event handler.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.EventHandlerRef.Application">
            <summary>
            Gets the application which the assembly containing the
            event handler is associated with.
            </summary>
            <remarks>Is null when consumer does not have permission to view the associated application.</remarks>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.EventHandlerStatus">
            <summary>
            Contains a message and operation status returned by an event handler.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.EventHandlerStatus.Success">
            <summary>
            Gets or sets a Boolean value indicating whether the event handler execution was successful.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.EventHandlerStatus.Message">
            <summary>
            Gets or sets a string returned by an event handler.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.EventHandlerStatus.FailingEventHandler">
            <summary>
            Gets or sets the identifying information for the event handler that failed.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.Field">
            <summary>
            Represents a field used to store metadata, choices, and other information in Relativity. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Field.FieldCategory">
            <summary>
            Gets or sets the FieldCategory enum used to indicate the specific functionality assigned to a field, such as stores descriptive text or acts as a relational field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Field.FieldType">
            <summary>
            Gets or sets the type of a Relativity field, such as fixed-length text, date, single object, or others. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Field.ViewFieldID">
            <summary>
            Gets or sets a unique identifier used to reference a view field. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Field.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of a Field object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Field.Guids">
            <summary>
            Gets or sets the GUIDs used to identify a Field object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Field.Name">
            <summary>
            Gets or sets the user-friendly name of a Field object. 
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.FieldCategory">
            <summary>
            Specifies the category of a field.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.Generic">
            <summary>
            The field doesn't fit in a more specific category.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.FullText">
            <summary>
            The field holds descriptive text.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.Identifier">
            <summary>
            The field identifies an item, such as a page.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.Reflected">
            <summary>
            The field is reflected.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.Comments">
            <summary>
            The field is used for a reviewer's comments.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.Relational">
            <summary>
            The field is relational, enabling the identification of duplicates and document families.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.ProductionMarker">
            <summary>
            The field describes an aspect of a production.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.AutoCreate">
            <summary>
            The field is automatically generated.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.FileSize">
            <summary>
            The field holds the size of a file in KB.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.FolderName">
            <summary>
            The field contains the name of a folder.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.FileInfo">
            <summary>
            The field contains metadata or information about a file.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.ParentArtifact">
            <summary>
            The field represents the Artifact ID of the parent object.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.MarkupSetMarker">
            <summary>
            The field contains the markup set for use in a production.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.GenericSystem">
            <summary>
            This field is the same as the Generic enum, except that it can't be deleted.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.MultiReflected">
            <summary>
            The field is multireflected.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldCategory.Batch">
            <summary>
            The field represents the grouping mechanism for a batch.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.FieldRef">
            <summary>
            Represents a key or reference to a Field object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.FieldRef.ViewFieldID">
            <summary>
            Gets or sets a unique identifier used to reference a view field. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.FieldRef.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of a Field object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.FieldRef.Guid">
            <summary>
            Gets or sets a GUID used to identify a Field object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.FieldRef.Name">
            <summary>
            Gets or sets the user-friendly name of a Field object. 
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.FieldRefValuePair">
             <summary>
             Represents a key or reference to a Field object and the value currently assigned to it.
             </summary>
             <remarks>
             <list type="table">
             <listheader>
             <term>FieldType</term>
             <term>Expected value type</term>
             </listheader>
            <item>
            <term >Fixed-Length Text</term>
            <term>string</term> 
            </item> 
            <item> 
            <term>Long Text</term> 
            <term>string</term> 
            </item>
            <item>
            <term >Date</term>
            <term >DateTime</term>
            </item>
            <item>
            <term>Whole Number</term> 
            <term >int?</term>
            </item>
            <item>
            <term >Decimal</term>
            <term >decimal?</term>
            </item> 
            <item> 
            <term>Currency</term>
            <term >decimal?</term> 
            </item> 
            <item> 
            <term >Yes/No</term>
            <term >bool?</term> 
            </item> 
            <item> 
            <term>Single Choice</term> 
            <term >ChoiceRef</term>
            </item> 
            <item> 
            <term >Multiple Choice</term> 
            <term >IEnumerable&lt; ChoiceRef&gt;</term> 
            </item> 
            <item> 
            <term>User</term> 
            <term >User(The ArtifactID must be set on this object.)</term> 
            </item> 
            <item> 
            <term >File</term> 
            <term >FileRef</term> 
            </item> 
            <item> 
            <term    >Single Object</term>
            <term >RelativityObjectRef</term>
            </item> 
            <item> 
            <term >Multiple Object</term> 
            <term >IEnumerable&lt; RelativityObjectRef&gt;</term> 
            </item> 
             </list>
             </remarks>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.FieldRefValuePair.Value">
            <summary>
            Gets or sets the value assigned to a field.  
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.FieldRefValuePair.Field">
            <summary>
            Gets or sets a <see cref="T:Relativity.Services.Objects.DataContracts.FieldRef"/> object.  
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.FieldType">
            <summary>
            Specifies the type of a Relativity field, such as fixed-length text, date, single object etc. 
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldType.Empty">
            <summary>
            Empty Field
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldType.FixedLengthText">
            <summary>
            Fixed-Length Text Field
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldType.WholeNumber">
            <summary>
            Whole Number Field
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldType.Date">
            <summary>
            Date Field
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldType.YesNo">
            <summary>
            Yes/No Field
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldType.LongText">
            <summary>
            Long-Text Field
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldType.SingleChoice">
            <summary>
            Single Choice Field
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldType.Decimal">
            <summary>
            Decimal Field
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldType.Currency">
            <summary>
            Currency Field
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldType.MultipleChoice">
            <summary>
            Multiple Choice Field
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldType.File">
            <summary>
            File Field
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldType.SingleObject">
            <summary>
            Single Object Field
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldType.User">
            <summary>
            User Field
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldType.MultipleObject">
            <summary>
            Multiple Object Field
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.FieldUpdateBehavior">
            <summary>
            Specifies how to update multiple choice and multiple object fields. 
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldUpdateBehavior.Replace">
            <summary>
            Overwrites the current values for the choice or object field with those passed into the service. 
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldUpdateBehavior.Merge">
            <summary>
            Merges the values passed into the service with the current values for the choice or object field. 
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.FieldUpdateBehavior.Remove">
            <summary>
            Removes the values passed into the service from the current values for the choice or object field.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.FieldValuePair">
             <summary>
             Represents a field and the value currently assigned to it.
             </summary>
             <remarks>
             <list type="table">
             <listheader>
             <term>FieldType</term>
             <term>Expected value type</term>
             </listheader>
            <item>
            <term >Fixed-Length Text</term>
            <term>string</term> 
            </item> 
            <item> 
            <term>Long Text</term> 
            <term>string</term> 
            </item>
            <item>
            <term >Date</term>
            <term >DateTime</term>
            </item>
            <item>
            <term>Whole Number</term> 
            <term >int?</term>
            </item>
            <item>
            <term >Decimal</term>
            <term >decimal?</term>
            </item> 
            <item> 
            <term>Currency</term>
            <term >decimal?</term> 
            </item> 
            <item> 
            <term >Yes/No</term>
            <term >bool?</term> 
            </item> 
            <item> 
            <term>Single Choice</term> 
            <term >ChoiceRef</term>
            </item> 
            <item> 
            <term >Multiple Choice</term> 
            <term >IEnumerable&lt; ChoiceRef&gt;</term> 
            </item> 
            <item> 
            <term>User</term> 
            <term >User(The ArtifactID must be set on this object.)</term> 
            </item> 
            <item> 
            <term >File</term> 
            <term >FileRef</term> 
            </item> 
            <item> 
            <term    >Single Object</term>
            <term >RelativityObjectValue</term>
            </item> 
            <item> 
            <term >Multiple Object</term> 
            <term >IEnumerable&lt; RelativityObjectValue&gt;</term> 
            </item> 
             </list>
             </remarks>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.FieldValuePair.Value">
            <summary>
            Gets or sets the value assigned to a field. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.FieldValuePair.Field">
            <summary>
            Gets or sets a Field object.  
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.FileObject">
            <summary>
            Represents a file used as a value for file fields in Relativity. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.FileObject.FileID">
            <summary>
            Gets or sets the File ID of a File object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.FileObject.FileFieldArtifactID">
            <summary>
            Gets or sets the File field ArtifactID of a File object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.FileObject.FileName">
            <summary>
            Gets or sets the user-friendly name of a File object. 
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.IHasArtifactID">
            <summary>
            Enables a class to return the Artifact ID of an object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.IHasArtifactID.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of an object.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.IHasArtifactTypeID">
            <summary>
            Enables a class to return the Artifact Type ID of an object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.IHasArtifactTypeID.ArtifactTypeID">
            <summary>
            Gets or sets the Artifact Type ID of an object.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.IHasGuid">
            <summary>
            Enables a class to return a GUID for an object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.IHasGuid.Guid">
            <summary>
            Gets or sets a GUID for an object.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.IHasGuids">
            <summary>
            Enables a class to return a list of GUIDs for an object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.IHasGuids.Guids">
            <summary>
            Gets or sets a list of GUIDs for an object.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.IHasIdentifyingInformation">
            <summary>
            Implemented by a class to indicate that it contains identifiers used for specifying a group of objects.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.IHasName">
            <summary>
            Enables a class to return the name of an object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.IHasName.Name">
            <summary>
            Gets or sets the name of an object.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.IHasViewFieldID">
            <summary>
            Enables a class to return the identifier of the view field associated with an object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.IHasViewFieldID.ViewFieldID">
            <summary>
            Gets or sets the identifier for a view field associated with an object.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.IRelativityObject">
            <summary>
            Enables a class to return field-value pairs.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.IRelativityObject.Item(System.Int32)">
            <summary>
            Gets a field-value pair by using the Artifact ID of the field to retrieve it.
            </summary>
            <param name="artifactId">The Artifact ID of a Field object.</param>
            <returns>A corresponding field-value pair.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.DataContracts.IRelativityObject.FieldValuePairExists(System.Int32)">
            <summary>
            Indicates whether the current object contains a <see cref="T:Relativity.Services.Objects.DataContracts.FieldValuePair"/> with the specified Artifact ID.
            </summary>
            <param name="artifactId">The Artifact ID of a FieldValuePair object.</param>
            <returns>Returns true if the FieldValuePair object has the specified Artifact ID.</returns>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.Layout">
            <summary>
            Represents a Layout that contains fields used for coding and other purposes in the Relativity UI. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Layout.Name">
            <summary>
            Gets or sets the user-friendly name of a Layout object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Layout.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of a Layout object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Layout.Guids">
            <summary>
            Gets or sets the GUIDs used to identify a Layout object. 
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.LayoutRef">
            <summary>
            Represents a key or reference to a Layout object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.LayoutRef.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of a Layout object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.LayoutRef.Guid">
            <summary>
            Gets or sets a GUID used to identify a Layout object. 
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.LongTextBehavior">
            <summary>
            Controls the behavior that is used when a Long Text field exceeds the configured character limit.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.LongTextBehavior.Default">
            <summary>
            Long Text field values will be truncated and followed by an ellipsis when the value exceeds the configured limit.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.LongTextBehavior.Tokenized">
            <summary>
            Long Text field values will return a default token when the value exceeds the configured limit.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.LongTextBehavior.DefaultWithErrors">
            <summary>
            Long Text field values will be truncated and followed by an ellipsis when the value exceeds the configured limit.
            If the field has errors, a <see cref="T:Relativity.Services.Objects.DataContracts.TextFieldError"/> object will be returned containing the error message.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.LongTextBehavior.TokenizedWithErrors">
            <summary>
            Long Text field values will return a default token when the value exceeds the configured limit.
            If the field has errors, a <see cref="T:Relativity.Services.Objects.DataContracts.TextFieldError"/> object will be returned containing the error message.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.MassCreateRequest">
            <summary>
            Represents a request to create a multiple Relativity Dynamic Objects (RDOs).
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassCreateRequest.ParentObject">
            <summary>
            Gets or sets the Artifact ID of the parent of the new objects.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassCreateRequest.ObjectType">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Objects.DataContracts.ObjectTypeRef"/> for the type of the new objects.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassCreateRequest.Fields">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Objects.DataContracts.FieldRef"/> objects to update when the new objects created.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassCreateRequest.ValueLists">
            <summary>
            Gets or sets a list of values used to populate the new objects. The order of the values corresponds to the order of the <see cref="P:Relativity.Services.Objects.DataContracts.MassCreateRequest.Fields"/>.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.MassCreateResult">
            <summary>
            Represents the results of a mass create operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassCreateResult.Objects">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Objects.DataContracts.RelativityObjectRef"/> instances containing the fields and their values 
            constructed by a mass create operation. The order of the objects corresponds to the 
            order of the values passed into the request.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassCreateResult.Success">
            <summary>
            Sets a Boolean value to true when no errors occurred while processing the request.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassCreateResult.Message">
            <summary>
            Sets explanatory information for an error when one occurs.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.MassDeleteByCriteriaRequest">
            <summary>
            Represents a request to perform a mass delete operation on all Documents or Relativity Dynamic Objects (RDOs) that meet a specified set of conditions.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassDeleteByCriteriaRequest.ObjectIdentificationCriteria">
            <summary>
            Gets or sets the conditions used to determine which objects should be deleted.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.MassDeleteByObjectIdentifiersRequest">
            <summary>
            Represents a request to delete multiple Documents or Relativity Dynamic Objects (RDOs).
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassDeleteByObjectIdentifiersRequest.Objects">
            <summary>
            Gets or sets a list of objects to be deleted.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.MassDeleteResult">
            <summary>
            Represents the results of a mass delete operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassDeleteResult.Report">
            <summary>
            Gets or sets a <see cref="T:Relativity.Services.Objects.DataContracts.DeleteReport"/> containing information about the deleted items.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassDeleteResult.Success">
            <summary>
            True if no errors occurred while processing the request
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassDeleteResult.Message">
            <summary>
            Set if an error occurs, providing more insight with what went wrong
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.MassOperationsStateProgress">
            <summary>
            Represents the progress object for mass operations processes.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassOperationsStateProgress.PercentageComplete">
            <summary>
            Gets or sets the percentage of operations complete.
            </summary>
            <value>
            The operations completed.
            </value>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest">
            <summary>
            Represents a request to perform a mass update operation on all Documents or Relativity Dynamic Objects (RDOs) that meet a specified set of conditions.
            </summary>
            <remarks>
            The MassUpdateByCriteriaRequest class specifies the view or search conditions used to select a list of objects 
            with the same type for updating. It also specifies same value for a specific field that is to be updated on the 
            objects. In the Relativity UI, this update operation is equivalent to the user selecting the All option in the 
            mass operations bar on a list page.
            </remarks>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest.FieldValues">
            <summary>
            Gets or sets the fields and values used for updating each object. The same value is used for updating a specific field on each object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest.ObjectIdentificationCriteria">
            <summary>
            Gets or sets specific view or search conditions used to select the objects for updating.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest">
            <summary>
            Represents a request to perform a mass update operation on a list of Documents or Relativity Dynamic Objects (RDOs) 
            by modifying each of the specified object fields with the same value.
            </summary>
            <remarks>
            The MassUpdateByObjectIdentifiersRequest class specifies the identifiers used 
            to select a list of objects with the same type for updating. It also includes 
            the same values for all object fields that are to be updated. In the Relativity UI, 
            this update operation is equivalent to the user selecting the Checked or 
            These option in the mass operations bar on a list page.
            </remarks>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest.Objects">
            <summary>
            Gets or sets a list of objects to be updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest.FieldValues">
            <summary>
            Gets or sets the fields and values used for updating each object. The same value is used for updating all object fields that are to be updated.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.MassUpdateOptions">
            <summary>
            Represents information about how a mass update request is performed by replacing or merging field values.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassUpdateOptions.UpdateBehavior">
            <summary>
            Gets or set the behavior used when mass updating multiple choice and multiple object fields by replacing or merging values. By default, values are replaced.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest">
            <summary>
            Represents a request to perform a mass update operation on a list of Documents or Relativity Dynamic Objects (RDOs) by 
            modifying each of the specified object fields with a distinct value.
            </summary>
            <remarks>
            The MassUpdatePerObjectsRequest class specifies identifiers for a list of objects 
            of the same type for updating. It also specifies a distinct value for each object 
            field that is to be updated. This action is like overlay behavior available through 
            the Relativity Desktop Client (RDC).
            </remarks>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest.Fields">
            <summary>
            Gets or sets a list fields for updating on the specified objects.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest.ObjectValues">
            <summary>
            Gets or sets the objects and their values to be updated. The values must be specified in the same order as the fields.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.MassUpdateResult">
            <summary>
            Represents the results of a mass update operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassUpdateResult.TotalObjectsUpdated">
            <summary>
            Sets the total number of objects successfully updated.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassUpdateResult.Success">
            <summary>
            Sets a Boolean value to true when no errors occurred while processing the request.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.MassUpdateResult.Message">
            <summary>
            Sets explanatory information for an error when one occurs.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.ObjectIdentificationCriteria">
            <summary>
            Represents a set of query conditions used to identify a <see cref="T:Relativity.Services.Objects.DataContracts.RelativityObjectRef"/> object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectIdentificationCriteria.ObjectType">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Objects.DataContracts.ObjectTypeRef"/> for the type of object to identify.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectIdentificationCriteria.Condition">
            <summary>
             Gets or sets the search criteria, which can be a simple, single-field condition or a complex expression made by combining conditions.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectIdentificationCriteria.RelationalField">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Objects.DataContracts.FieldRef"/> used to include related items.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectIdentificationCriteria.RowCondition">
            <summary>
            Gets or sets the row condition criteria.
            </summary>
            <remarks>
            The row condition can be a simple, single-field condition or a complex expression made by combining conditions. 
            It limits the result set returned after applying all other conditions and including the relational field.
            </remarks>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectIdentificationCriteria.SearchProviderCondition">
            <summary>
            Gets or sets the search provider search condition.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectIdentificationCriteria.QueryHint">
            <summary>
            Gets or sets the QueryHint of the currently executing search. A QueryHint is used to optimize the view.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectIdentificationCriteria.IsAdhocQuery">
            <summary>
            Gets or sets a Boolean value indicating whether the query engine should handle the search or view condition as a query type or simple condition.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectIdentificationCriteria.ExecutingSavedSearchID">
            <summary>
            Gets or sets the ID of the currently executing saved search.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectIdentificationCriteria.ExecutingViewID">
            <summary>
            Gets or sets the ID of the currently executing view.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.ObjectRefValuesPair">
            <summary>
            Represents a key or reference to a pair of RelativityObjectRefs objects and their associated field values.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectRefValuesPair.Object">
            <summary>
            Gets or sets an identifier for a RelativityObject.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectRefValuesPair.Values">
            <summary>
            Gets or sets a new field values for the RelativityObject.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.ObjectType">
            <summary>
            Represents a custom object type added to a workspace. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectType.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of an Object Type. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectType.Name">
            <summary>
            Gets or sets the user-friendly name of an Object Type. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectType.Guids">
            <summary>
            Gets or sets the GUIDs used to identify the Object Type.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectType.ArtifactTypeID">
            <summary>
            Gets or sets the Descriptor Artifact Type ID of the Object Type object. This ID also identifies an Object Type artifact as an ArtifactType.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.ObjectTypeRef">
            <summary>
            Represents a key or reference to an ObjectType object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectTypeRef.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of an Object Type. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectTypeRef.Name">
            <summary>
            Gets or sets the user-friendly name of an Object Type. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectTypeRef.Guid">
            <summary>
            Gets or sets a GUID used to identify the Object Type. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ObjectTypeRef.ArtifactTypeID">
            <summary>
            Gets or sets the Descriptor Artifact Type ID of the Object Type object. This ID also identifies an Object Type artifact as an ArtifactType.  
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.OperationOptions">
            <summary>
            Represents information about how an operation for a request is being called. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.OperationOptions.CallingContext">
            <summary>
            Gets or sets information about the web context from which the event handler is being called, such as the layout or page mode. 
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.PageMode">
            <summary>
            Indicates the step in the page workflow in which a call to the event handler originates.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.PageMode.Unknown">
            <summary>
            Indicates that the page mode is unknown. 
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.PageMode.View">
            <summary>
            Indicates the view page mode. 
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.PageMode.Edit">
            <summary>
            Indicates the edit page mode. 
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.PageMode.List">
            <summary>
            Indicates the list page mode. 
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.QueryRequest">
            <summary>
            Describes conditions, sorts and fields to be returned for a query.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.ObjectType">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Objects.DataContracts.ObjectTypeRef"/> for the type of object the query will run against.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.Condition">
            <summary>
            Gets or sets the search criteria. It can be a simple, single-field condition or a complex expression made by combining conditions.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.Sorts">
            <summary>
            Gets or sets the sort order for view results specified as a collection of <see cref="T:Relativity.Services.Objects.DataContracts.Sort"/> objects.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.RelationalField">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Objects.DataContracts.FieldRef"/> used to include related items in query result.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.RowCondition">
            <summary>
            Gets or sets the row condition criteria.
            </summary>
            <remarks>
            The row condition can be a simple, single-field condition or a complex expression made by combining conditions. 
            It limits the result set returned after applying all other conditions and including the relational field.
            </remarks>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.SearchProviderCondition">
            <summary>
            Gets or sets the search provider search condition.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.SampleParameters">
            <summary>
            Gets or sets the <see cref="P:Relativity.Services.Objects.DataContracts.QueryRequest.SampleParameters"/> used to take a sample of the query result set.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.IncludeIDWindow">
            <summary>
            Gets or sets Boolean value indicating whether the query results should include the IDs of the objects included in the current results set.
            </summary>
            <remarks>If a value isn't provided, the ID window will not be included.</remarks>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.RankSortOrder">
            <summary>
            Gets or sets the sorting direction of Rank column in the Relativity UI, as either ascending or descending. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.QueryHint">
            <summary>
            Gets or sets the QueryHint of the currently executing search. It is used to optimize the view.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.Fields">
            <summary>
            Gets or sets a collection of fields like a SELECT statement in an SQL query.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.IsAdhocQuery">
            <summary>
            Gets or sets a Boolean value indicating whether the query engine should handle the search or view condition as a query type or simple condition. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.ConvertNumberFieldValuesToString">
            <summary>
            Gets or sets a Boolean value indicating whether to convert the numbers returned in the query to text. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.IncludeNameInQueryResult">
            <summary>
            Gets or sets Boolean value indicating whether the Name property on the result objects is populated.
            </summary>
            <remarks>This option only applies to QueryAsync() method.</remarks>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.ExecutingSavedSearchID">
            <summary>
            Gets or sets the ID of the currently executing saved search. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.ExecutingViewID">
            <summary>
            Gets or sets the ID of the currently executing view. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.ActiveArtifactID">
            <summary>
            Gets or sets the Artifact ID of an item when available in the query results. This item is used to override the start position for the result page.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.MaxCharactersForLongTextValues">
            <summary>
            Gets or sets the maximum number of characters returned in the query results for long text fields.  
            </summary>
            <remarks>
            The MaximumNumberOfCharactersSupportedByLongText instance setting determines this number.
            If a number isnâ€™t specified, the default is 1,000 characters.
            </remarks>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryRequest.LongTextBehavior">
            <summary>
            Gets or sets the behavior used when a long text field exceeds the configured character limit.  
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.QueryResult">
            <summary>
            Represents the results of a <see cref="T:Relativity.Services.Objects.DataContracts.QueryRequest"/> returned by the QueryAsync() method.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResult.TotalCount">
            <summary>
            Gets or sets the total number of objects returned by the query.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResult.Objects">
            <summary>
            Gets or sets a list of objects in the read results from the query.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResult.IDWindow">
            <summary>
            Gets or sets the Window object containing the IDs of the objects included in the current results set.
            </summary>
            <remarks>This property is populated only when the <see cref="P:Relativity.Services.Objects.DataContracts.QueryRequest.IncludeIDWindow"/> property is set to true on the inbound query object.</remarks>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResult.CurrentStartIndex">
            <summary>
            Gets or sets the starting index for a result item in a query result set.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResult.ResultCount">
            <summary>
            Gets or sets the number of result items returned by the current query.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResult.ObjectType">
            <summary>
            Gets or sets the type of the objects returned from a query.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResult.SampleDetails">
            <summary>
            Gets or sets the token used to persist an existing sample from one call to the next. The sample includes the metadata from the sampling run. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResult.RankWindow">
            <summary>
            Gets or sets the set of ranks used to prime the review tool's session.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResult.RelationalField">
            <summary>
            Gets or sets the related items included in the result set based on this field.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.QueryResultSlim">
            <summary>
            Represents the results of a <see cref="T:Relativity.Services.Objects.DataContracts.QueryRequest"/> returned by the QuerySlimAsync() method.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResultSlim.TotalCount">
            <summary>
            Gets or sets the total number of objects returned by the query.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResultSlim.Objects">
            <summary>
            Gets a list of objects in read results from the query. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResultSlim.IDWindow">
            <summary>
            Gets or sets the Window object containing the IDs of the objects included in the current results set.
            </summary>
            <remarks>This property is populated only when the <see cref="P:Relativity.Services.Objects.DataContracts.QueryRequest.IncludeIDWindow"/> property is set to true on the inbound query object.</remarks>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResultSlim.CurrentStartIndex">
            <summary>
            Gets or sets the starting index for a result item in a query result set.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResultSlim.ResultCount">
            <summary>
            Gets or sets the number of result items returned by the current query.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResultSlim.ObjectType">
            <summary>
            Gets or sets the type of the objects returned from a query.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResultSlim.SampleDetails">
            <summary>
            Gets or sets the token used to persist an existing sample from one call to the next. The sample includes the metadata from the sampling run. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResultSlim.RankWindow">
            <summary>
            Gets or sets the set of ranks used to prime the review tool's session.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResultSlim.RelationalField">
            <summary>
            Gets or sets the related items included in the result set based on this field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.QueryResultSlim.Fields">
            <summary>
            Gets or sets a list of fields associated with the results.  
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.ReadOptions">
            <summary>
            Represents information about how long text fields are handled during read operations. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ReadOptions.MaxCharactersForLongTextValues">
            <summary>
            Gets or sets the maximum number of characters returned in the read results for long text fields. 
            </summary>
            <remarks>
            The MaximumNumberOfCharactersSupportedByLongText instance setting determines this number. 
            If a number isnâ€™t specified, the default is 100,000 characters.
            </remarks>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ReadOptions.LongTextBehavior">
            <summary>
            Gets or sets the behavior used when a long text field exceeds the configured character limit.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ReadOptions.FieldTypesToReturnAsString">
            <summary>
            Gets or sets list of field types which should be returned as string.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.ReadRequest">
            <summary>
            Represents the request for a read operation on Document objects and RDOs. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ReadRequest.Object">
            <summary>
            Gets or sets the RelativityObjectRef object to read. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ReadRequest.Fields">
            <summary>
            Gets or sets the fields to be read on the RelativityObject.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.ReadResult">
            <summary>
            Represents the results of a read operation performed through the Object Manager service.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ReadResult.Message">
            <summary>
            Gets a string returned by a Pre Load event handler.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ReadResult.FailingEventHandler">
            <summary>
            Gets or sets the identifying information for the event handler that failed.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ReadResult.Object">
            <summary>
            Gets a RelativityObject instance containing fields and their values that were read. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ReadResult.ObjectType">
            <summary>
            Gets or sets the Object Type for the RelativityObject.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.ReadResult.ObjectVersionToken">
            <summary>
            Gets or sets the version token of the RelativityObject. This value could be passed to the Update request to enable record overwrite protection.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.RelativityObject">
            <summary>
            Represents an object in Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObject.ParentObject">
            <summary>
            Gets or sets the Artifact ID of the parent of the current object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObject.Name">
            <summary>
            Gets or sets the user-friendly name of the object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObject.FieldValues">
            <summary>
            Gets or sets a list of fields and their values on the object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObject.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of the current object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObject.Guids">
            <summary>
            Gets or sets the GUIDs for the current object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObject.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Relativity.Services.Objects.DataContracts.FieldValuePair"/> on the object with the specified Artifact ID.
            </summary>
            <param name="artifactId">The Artifact ID of the Field you are referencing.</param>
            <returns>The FieldValuePair with the given ArtifactID.</returns>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObject.Item(System.String)">
            <summary>
            Gets the <see cref="T:Relativity.Services.Objects.DataContracts.FieldValuePair"/> on the object with the specified field name.
            </summary>
            <param name="fieldName">The Name of the Field you are referencing.</param>
            <returns>The FieldValuePair with the given Field Name.</returns>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObject.Item(System.Guid)">
            <summary>
            Gets the <see cref="T:Relativity.Services.Objects.DataContracts.FieldValuePair"/> on the object with the specified GUID.
            </summary>
            <param name="guid">The GUID of the Field you are referencing.</param>
            <returns>The FieldValuePair with the given GUID.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.DataContracts.RelativityObject.FieldValuePairExists(System.Int32)">
            <summary>
            Checks if this object contains a <see cref="T:Relativity.Services.Objects.DataContracts.FieldValuePair"/> with specified Artifact ID.
            </summary>
            <param name="artifactId"></param>
            <returns>True if a FieldValuePair has the artifact id</returns>
        </member>
        <member name="M:Relativity.Services.Objects.DataContracts.RelativityObject.FieldValuePairExists(System.String)">
            <summary>
            Checks if this object contains a <see cref="T:Relativity.Services.Objects.DataContracts.FieldValuePair"/> with specified field name (case-insensitive).
            </summary>
            <param name="fieldName"></param>
            <returns>True if a FieldValuePair has the field name</returns>
        </member>
        <member name="M:Relativity.Services.Objects.DataContracts.RelativityObject.FieldValuePairExists(System.Guid)">
            <summary>
            Checks if this object contains a <see cref="T:Relativity.Services.Objects.DataContracts.FieldValuePair"/> with specified GUID.
            </summary>
            <param name="guid"></param>
            <returns>True if a FieldValuePair has the guid</returns>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.RelativityObjectRef">
            <summary>
            Represents the minimal information needed to uniquely identify a RelativityObject.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObjectRef.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of the RelativityObject.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObjectRef.Guid">
            <summary>
            Gets or sets a GUID used to identify the RelativityObject.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.DataContracts.RelativityObjectRef.op_Explicit(Relativity.Services.Objects.DataContracts.RelativityObjectValue)~Relativity.Services.Objects.DataContracts.RelativityObjectRef">
            <summary>
            Allows explicit conversions from a RelativityObjectValue to a RelativityObjectRef
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.RelativityObjectSlim">
            <summary>
            Represents a streamlined <see cref="T:Relativity.Services.Objects.DataContracts.RelativityObject"/> with values that map to fields on a <see cref="T:Relativity.Services.Objects.DataContracts.QueryResultSlim"/> object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObjectSlim.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of the object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObjectSlim.Values">
            <summary>
            Gets or sets a list of values for the object. The order of the values corresponds to the order of the fields in the result set.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.RelativityObjectValue">
            <summary>
            Represents the value for an object field. 
            </summary>
            <remarks>
            A RelativityObjectValue object is returned for single object fields, while a list of these objects is returned for multiple object fields.
            </remarks>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObjectValue.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of the object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObjectValue.Guids">
            <summary>
            Gets or sets a list of GUIDs used to identify the object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObjectValue.Name">
            <summary>
            Gets or sets the user-friendly name of the object. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.RelativityObjectValue.ItemSecured">
            <summary>
            Indicates whether the item has been secured from the user
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.SampleDetails">
            <summary>
            Contains information used to define a sample set. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.SampleDetails.SampleSize">
            <summary>
            Gets or sets the number of Documents or Relativity Dynamic Objects (RDOs) in a sample. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.SampleDetails.UniverseSize">
            <summary>
            Gets or sets the number of Documents or Relativity Dynamic Objects (RDOs) in the results for sampling. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.SampleDetails.Token">
            <summary>
            Gets or sets the identifier for a sample set. 
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.SampleParameters">
            <summary>
            Contains information about how the sampling is performed. 
            </summary>
            <remarks><see cref="P:Relativity.Services.Objects.DataContracts.SampleParameters.MarginOfError"/> and <see cref="P:Relativity.Services.Objects.DataContracts.SampleParameters.ConfidenceLevel"/> must both be provided for a statistical sample.  If either is null, <see cref="P:Relativity.Services.Objects.DataContracts.SampleParameters.FixedSampleSize"/> will be checked. 
            If that is null, <see cref="P:Relativity.Services.Objects.DataContracts.SampleParameters.SamplingPercentage"/> will then be checked. If none of those conditions are met, an exception will be thrown.</remarks>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.SampleParameters.ExistingToken">
            <summary>
            Gets or sets the identifier for a sample set. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.SampleParameters.MarginOfError">
            <summary>
            Gets or sets a value for the margin of error allowable in sample results. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.SampleParameters.ConfidenceLevel">
            <summary>
            Gets or sets a value for confidence level required for a sample set. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.SampleParameters.FixedSampleSize">
            <summary>
            Gets or sets a value representing a specific number of items from a group used to create a randomized sample set. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.SampleParameters.SamplingPercentage">
            <summary>
            
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.SearchIndexRef">
            <summary>
            Represents a key or reference to a search provider. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.SearchIndexRef.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of a search provider. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.SearchIndexRef.Name">
            <summary>
            Gets or sets the user-friendly name of a search provider. 
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.SearchProviderCondition">
            <summary>
            Contains the parameters used to execute a query through a search provider.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.SearchProviderCondition.SearchIndex">
            <summary>
            Gets or sets the Artifact ID of the search provider. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.SearchProviderCondition.Input">
            <summary>
            Gets or sets a string containing the parameters used for a search provider, which were entered by a user.
            </summary>
            <remarks>
            The Input property gets a string returned by a registered JavaScript function of a search provider in the Relativity UI. 
            This string contains the parameters, which the user entered in HTML form provided for the search provider. 
            The value must be valid in order for it to be passed to the ISearchProviderGateway.HydrateInputData() function on the search provider.
            </remarks>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.SecuredReflectedFieldValue">
            <summary>
            Represents a value from a field reflected from a secured object relationship.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.Security">
            <summary>
            Represents information about inherited security settings and user permissions on a specific object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Security.OverwriteInheritedSecurity">
            <summary>
            Gets or sets a Boolean value indicating whether the current RelativityObject inherits item level security from another object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Security.UserCanEditSecurity">
            <summary>
            Gets or sets a Boolean value indicating whether the requesting user has permission to the current object.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.Sort">
            <summary>
            Represents sorting information for query results.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Sort.FieldIdentifier">
            <summary>
            Gets or sets the identifier for the field used to sort the results.
            </summary>
            <value>The field identifier.</value>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Sort.Order">
            <summary>
            Gets or sets an integer indicating precedence when more than one sort order is defined.
            </summary>
            <value>The order.</value>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.Sort.Direction">
            <summary>
            Gets or sets the sort order as either ascending or descending. 
            </summary>
            <value>The sorting direction.</value>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.SortEnum">
            <summary>
            Specifies whether query results are sorted in ascending or descending order. 
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.SortEnum.Ascending">
            <summary>
            Sorts results in ascending order.
            </summary>
        </member>
        <member name="F:Relativity.Services.Objects.DataContracts.SortEnum.Descending">
            <summary>
            Sorts results in descending order. 
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.TextFieldError">
            <summary>
            Represents a value for a text field that could not be properly returned.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.TextFieldError.ErrorMessage">
            <summary>
            The error message describing why the field value could not be returned.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.UpdateLongTextFromStreamRequest">
            <summary>
            Represents a request object which is used to update a field value from a stream.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.UpdateLongTextFromStreamRequest.Object">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Objects.DataContracts.RelativityObjectRef"/> for the object to update.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.UpdateLongTextFromStreamRequest.Field">
            <summary>
            Gets or sets the field to be updated on the object.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.UpdateOptions">
            <summary>
            Represents information about how an update request is performed. 
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.UpdateOptions.UpdateBehavior">
            <summary>
            Gets or set the behavior used when updating multiple choice and multiple object fields by replacing or merging values. By default, values are replaced.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.UpdateRequest">
            <summary>
            Represents an update request for a Document or Relativity Dynamic Object (RDO).
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.UpdateRequest.Object">
            <summary>
            Gets or sets the <see cref="T:Relativity.Services.Objects.DataContracts.RelativityObjectRef"/> for the object to update.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.UpdateRequest.FieldValues">
            <summary>
            Gets or sets the fields to be updated on the object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.UpdateRequest.ObjectVersionToken">
            <summary>
            Gets or sets version token of an object which, if set, will be used for record overwrite protection.
            It should be acquired from Read operation result.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.UpdateResult">
            <summary>
            Represents the results of an update operation.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.UpdateResult.EventHandlerStatuses">
            <summary>
            Gets a collection of <see cref="T:Relativity.Services.Objects.DataContracts.EventHandlerStatus"/> objects containing information about event handler execution.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.User">
            <summary>
            Represents the value of a user field.  
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.User.ArtifactID">
            <summary>
            Gets or sets the Artifact ID of a User object.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.User.EmailAddress">
            <summary>
            Gets or sets the email address of a user.
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.User.Name">
            <summary>
            Gets or sets the name of a user.
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.WordListCondition">
            <summary>
            Condition generated by Liquid Item List on Dictionary UI
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.WordListCondition.operator">
            <summary>
            Operator to compare field to value
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.WordListCondition.value">
            <summary>
            Value to be compared to field by operator
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.WordListCondition.displayValue">
            <summary>
            Display value for value
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.WordListFieldCondition">
            <summary>
            Filtering condition generated by Liquid Item List on Dictionary UI
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.WordListFieldCondition.condition">
            <summary>
            Condition for filtering specified field
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.WordListFieldCondition.field">
            <summary>
            Field name to be filtered
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.WordListFieldCondition.isAdvanced">
            <summary>
            Apply advanced filtering
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.DataContracts.WordListSort">
            <summary>
            Sort generated by Liquid Item List on Dictionary UI
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.WordListSort.column">
            <summary>
            Column name being sorted (keyword, totalwords, totaldocuments)
            </summary>
        </member>
        <member name="P:Relativity.Services.Objects.DataContracts.WordListSort.direction">
            <summary>
            Direction of sort (asc / desc)
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.Extensions.ChoiceExtensions">
            <summary>
            Provides a method for converting a fully hydrated <see cref="T:Relativity.Services.Objects.DataContracts.Choice"/> object into a <see cref="T:Relativity.Services.Objects.DataContracts.ChoiceRef"/> object. 
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Extensions.ChoiceExtensions.ToRef(Relativity.Services.Objects.DataContracts.Choice)">
            <summary>
            Converts a fully hydrated <see cref="T:Relativity.Services.Objects.DataContracts.Choice"/> object into a <see cref="T:Relativity.Services.Objects.DataContracts.ChoiceRef"/> object. 
            </summary>
            <param name="choice">The <see cref="T:Relativity.Services.Objects.DataContracts.Choice"/> object to convert.</param>
            <returns>The converted <see cref="T:Relativity.Services.Objects.DataContracts.ChoiceRef"/>.</returns>
        </member>
        <member name="T:Relativity.Services.Objects.Extensions.ExpandoObjectExtensions">
            <summary>
            Provides methods for retrieving a representation of an <see cref="T:System.Dynamic.ExpandoObject"/> or its properties based on a corresponding key.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Extensions.ExpandoObjectExtensions.FixCaseForKey(System.Dynamic.ExpandoObject,System.String)">
            <summary>
            Finds the case-sensitive representation of a key that a <see cref="T:System.Dynamic.ExpandoObject"/> is using.
            </summary>
            <param name="expando">The <see cref="T:System.Dynamic.ExpandoObject"/> to search.</param>
            <param name="key">The case-insensitive key to search for.</param>
            <returns>Returns the case-sensitive representation of an <see cref="T:System.Dynamic.ExpandoObject"/> corresponding to the key passed to this method.
            Returns null if the key is not found.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.Extensions.ExpandoObjectExtensions.GetPropertyWithKey``1(System.Dynamic.ExpandoObject,System.String,``0)">
            <summary>
            Returns the <see cref="T:System.Dynamic.ExpandoObject"/> property corresponding to the key passed in.
            </summary>
            <param name="expando">The <see cref="T:System.Dynamic.ExpandoObject"/> to search.</param>
            <param name="key">The case-insensitive key to search for.</param>
            <param name="defaultValue">A value to return if the key is not found.</param>
            <typeparam name="T">The type of the property.</typeparam>
            <returns>Returns a property of an <see cref="T:System.Dynamic.ExpandoObject"/> that corresponds to the case-insensitive key passed to this method.
            Returns <paramref name="defaultValue"/> if the key is not found.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.Extensions.ExpandoObjectExtensions.ToFileObject(System.Dynamic.ExpandoObject)">
             <summary>
             Converts an <see cref="T:System.Dynamic.ExpandoObject"/> that represents a file (such as that returned by query/queryslim for file fields) into a <see cref="T:Relativity.Services.Objects.DataContracts.FileObject"/> model.
             </summary>
             <param name="expando">An <see cref="T:System.Dynamic.ExpandoObject"/> with FileId, FileFieldArtifactId, and FileName properties.</param>
             <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.FileObject"/> populated with the data from <paramref name="expando"/></returns>
            <exception cref="T:Relativity.Services.Exceptions.ServiceSerializationException">Thrown when <paramref name="expando"/> does not contain the properties <see cref="T:Relativity.Services.Objects.DataContracts.FileObject"/> contains.</exception>
        </member>
        <member name="T:Relativity.Services.Objects.Extensions.FieldExtensions">
            <summary>
            Provides a method for converting a fully hydrated <see cref="T:Relativity.Services.Objects.DataContracts.Field"/> object into a <see cref="T:Relativity.Services.Objects.DataContracts.FieldRef"/> object. 
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Extensions.FieldExtensions.ToRef(Relativity.Services.Objects.DataContracts.Field)">
            <summary>
            Converts a fully hydrated <see cref="T:Relativity.Services.Objects.DataContracts.Field"/> object into a <see cref="T:Relativity.Services.Objects.DataContracts.FieldRef"/> object. 
            </summary>
            <param name="field">The <see cref="T:Relativity.Services.Objects.DataContracts.Field"/> to convert.</param>
            <returns>A converted  <see cref="T:Relativity.Services.Objects.DataContracts.FieldRef"/>.</returns>
        </member>
        <member name="T:Relativity.Services.Objects.Extensions.GuidListExtensions">
            <summary>
            Provides a method for retrieving the GUID from a collection of GUIDs.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Extensions.GuidListExtensions.GetOptionalGuid(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Retrieves a GUID from a collection of GUIDs.
            </summary>
            <param name="guids">A collection of GUIDs.</param>
            <returns>The first GUID found in <paramref name="guids"/> or null if there are none.</returns>
        </member>
        <member name="T:Relativity.Services.Objects.Extensions.IObjectTypeExtensions">
            <summary>
            Provides methods for working with GUIDs on <see cref="T:Relativity.Services.Objects.DataContracts.IObjectType"/> objects.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Extensions.IObjectTypeExtensions.IsIdentifiedByGuid(Relativity.Services.Objects.DataContracts.IObjectType)">
            <summary>
            Checks whether a <see cref="T:Relativity.Services.Objects.DataContracts.IObjectType"/> object contains any identifying GUIDs.
            </summary>
            <param name="objectType">The object type to check.</param>
            <returns>True if the object contains any identifying GUIDs; otherwise false.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.Extensions.IObjectTypeExtensions.GetGuid(Relativity.Services.Objects.DataContracts.IObjectType)">
            <summary>
            Obtains an identifying GUID from an <see cref="T:Relativity.Services.Objects.DataContracts.IObjectType"/> object.
            </summary>
            <param name="objectType">The object type to check.</param>
            <returns>The first or only identifying GUID found.
            If there are no Identifying GUIDs, it returns <see cref="F:System.Guid.Empty"/>.</returns>
        </member>
        <member name="T:Relativity.Services.Objects.Extensions.LayoutExtensions">
            <summary>
            Provides a method for converting a fully hydrated <see cref="T:Relativity.Services.Objects.DataContracts.Layout"/> object into a <see cref="T:Relativity.Services.Objects.DataContracts.LayoutRef"/> object. 
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Extensions.LayoutExtensions.ToRef(Relativity.Services.Objects.DataContracts.Layout)">
            <summary>
            Converts a fully hydrated <see cref="T:Relativity.Services.Objects.DataContracts.Layout"/> object into a <see cref="T:Relativity.Services.Objects.DataContracts.LayoutRef"/> object. 
            </summary>
            <param name="layout">The <see cref="T:Relativity.Services.Objects.DataContracts.Layout"/> to convert.</param>
            <returns>A Converted <see cref="T:Relativity.Services.Objects.DataContracts.LayoutRef"/>.</returns>
        </member>
        <member name="T:Relativity.Services.Objects.Extensions.RelativityObjectExtensions">
            <summary>
            Provides a method for converting a fully hydrated <see cref="T:Relativity.Services.Objects.DataContracts.RelativityObject"/> into a <see cref="T:Relativity.Services.Objects.DataContracts.RelativityObjectRef"/> object. 
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Extensions.RelativityObjectExtensions.ToRef(Relativity.Services.Objects.DataContracts.RelativityObject)">
            <summary>
            Converts a fully hydrated <see cref="T:Relativity.Services.Objects.DataContracts.RelativityObject"/> into a <see cref="T:Relativity.Services.Objects.DataContracts.RelativityObjectRef"/> object.
            </summary>
            <param name="relativityObject">The <see cref="T:Relativity.Services.Objects.DataContracts.RelativityObject"/> to convert.</param>
            <returns>A converted <see cref="T:Relativity.Services.Objects.DataContracts.RelativityObjectRef"/>.</returns>
        </member>
        <member name="T:Relativity.Services.Objects.Helpers.ObjectTypeRefHelper">
            <summary>
            Provides a method for deserializing a JSON response to <see cref="T:Relativity.Services.Objects.DataContracts.ObjectTypeRef"/> objects. 
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Helpers.ObjectTypeRefHelper.DeserializeObjectTypeRef(System.Object)">
            <summary>
            Deserializes a JSON response to an <see cref="T:Relativity.Services.Objects.DataContracts.ObjectTypeRef"/>. 
            </summary>
            <param name="objectTypeRef">The incoming value to be deserialized. May be either an <see cref="T:Relativity.Services.Objects.DataContracts.ObjectTypeRef"/> or an <see cref="T:System.Dynamic.ExpandoObject"/>.</param>
            <returns>A deserialized <see cref="T:Relativity.Services.Objects.DataContracts.ObjectTypeRef"/>.</returns>
        </member>
        <member name="T:Relativity.Services.Objects.IObjectManager">
            <summary>
            IObjectManager interface exposes methods on the Relativity Object Manager web service used for querying as well as reading and updating fields on Documents and Relativity Dynamic Objects (RDOs).
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.QueryAsync(System.Int32,Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32)">
            <summary>
            Searches for Workspaces, Documents, RDOs, and system types.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to query for. Pass -1 for admin artifacts.</param>
            <param name="request">A <see cref="T:Relativity.Services.Objects.DataContracts.QueryRequest"/> object containing conditions, sorting order, fields, and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned <see cref="T:Relativity.Services.Objects.DataContracts.QueryResult"/> object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <returns>Returns the results of the executed query.</returns>
            <remarks>The QueryAsync() methods support querying for the following system types: Application, Batch, Batch Sets, Choice, Client, Group, 
            Markup Set, User, Object Type, Tab, Folder, Layout, View, Workspace, Error, Field, Relativity Script, and Saved Search.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.QueryAsync(System.Int32,Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Searches for Workspaces, Documents, RDOs, and system types, and reports the query execution progress.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to query for. Pass -1 for admin artifacts.</param>
            <param name="request">A <see cref="T:Relativity.Services.Objects.DataContracts.QueryRequest"/> object containing conditions, sorting order, fields, and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned <see cref="T:Relativity.Services.Objects.DataContracts.QueryResult"/> object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="progress">Contains a callback that reports query execution progress.</param>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.QueryAsync(System.Int32,Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Searches for Workspaces, Documents, RDOs, and system types, reports the query execution progress, and provides a token used for canceling the query.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to query for. Pass -1 for admin artifacts.</param>
            <param name="request">A <see cref="T:Relativity.Services.Objects.DataContracts.QueryRequest"/> object containing conditions, sorting order, fields, and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned <see cref="T:Relativity.Services.Objects.DataContracts.QueryResult"/> object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="cancel">Used to request the cancellation of the object query.</param>
            <param name="progress">Contains a callback that reports query execution progress.</param>
            <returns>Returns the results of the executed query.</returns>
            <remarks>The QueryAsync() methods support querying for the following system types: Application, Batch, Batch Sets, Choice, Client, Group, Markup Set, User, 
            Object Type, Tab, Folder, Layout, View, Workspace, Error, Field, Relativity Script, and Saved Search.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.UpdateRequest)">
            <summary>
            Modifies all fields or a specified subset of fields on a Document or Relativity Dynamic Object (RDO). 
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifact to be updated.</param>
            <param name="request">A request to update a Document or Relativity Dynamic Object (RDO).</param>
            <returns>An <see cref="T:Relativity.Services.Objects.DataContracts.UpdateResult"/> with event handler statuses.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.UpdateRequest,Relativity.Services.Objects.DataContracts.UpdateOptions)">
            <summary>
            Modifies all fields or a specified subset of fields on a Document or Relativity Dynamic Object (RDO), and uses any specified update options.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifact to be updated.</param>
            <param name="request">A request to update a Document or Relativity Dynamic Object (RDO).</param>
            <param name="operationOptions">An options object containing a calling context property providing information used to populate data for event handlers.</param>
            <returns>An <see cref="T:Relativity.Services.Objects.DataContracts.UpdateResult"/> with event handler statuses.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.ReadAsync(System.Int32,Relativity.Services.Objects.DataContracts.ReadRequest)">
            <summary>
            Retrieves all fields or a specified subset of fields on a Document or Relativity Dynamic Object (RDO). 
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be read.</param>
            <param name="request">A <see cref="T:Relativity.Services.Objects.DataContracts.ReadRequest"/> object containing fields to read on a <see cref="T:Relativity.Services.Objects.DataContracts.RelativityObject"/>.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.ReadResult"/> returning the specified fields on the referenced Document or RDO.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.ReadAsync(System.Int32,Relativity.Services.Objects.DataContracts.ReadRequest,Relativity.Services.Objects.DataContracts.OperationOptions)">
            <summary>
            Retrieves all fields or a specified subset of fields on a Document or Relativity Dynamic Object (RDO). 
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be read.</param>
            <param name="request">A <see cref="T:Relativity.Services.Objects.DataContracts.ReadRequest"/> object containing fields to read on a <see cref="T:Relativity.Services.Objects.DataContracts.RelativityObject"/>.</param>
            <param name="operationOptions">An options object containing a calling context property providing information used to populate data for event handlers.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.ReadResult"/> returning the specified fields on the referenced Document or RDO.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.ReadAsync(System.Int32,Relativity.Services.Objects.DataContracts.ReadRequest,Relativity.Services.Objects.DataContracts.ReadOptions)">
            <summary>
            Retrieves all fields or a specified subset of fields on a Document or Relativity Dynamic Object (RDO). 
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be read.</param>
            <param name="request">A <see cref="T:Relativity.Services.Objects.DataContracts.ReadRequest"/> object containing fields to read on a <see cref="T:Relativity.Services.Objects.DataContracts.RelativityObject"/>.</param>
            <param name="readOptions">An options object containing a calling context property providing information used to populate data for event handlers
            as well additional options for handling long text fields.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.ReadResult"/> returning the specified fields on the referenced Document or RDO.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.DeleteAsync(System.Int32,Relativity.Services.Objects.DataContracts.DeleteRequest)">
            <summary>
            Deletes Documents or Relativity Dynamic Objects (RDOs) and their associated files.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be deleted.</param>
            <param name="request">A request to delete a Document or Relativity Dynamic Object (RDO).</param>
            <returns>Returns the results of a delete operation as a <see cref="T:Relativity.Services.Objects.DataContracts.DeleteResult"/> containing information about the deleted items.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.DeleteAsync(System.Int32,Relativity.Services.Objects.DataContracts.DeleteRequest,System.Threading.CancellationToken,System.IProgress{Relativity.Services.Objects.DataContracts.DeleteProcessStateProgress})">
            <summary>
            Deletes Documents or Relativity Dynamic Objects (RDOs) and their associated files, based on a list of identifiers, provides a token used for canceling the operation, and returns progress information.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be deleted.</param>
            <param name="request">A request to delete a Document or Relativity Dynamic Object (RDO).</param>
            <param name="cancel">Used to request cancel of the object delete execution.</param>
            <param name="progress">Contains a callback that reports query execution progress.</param>
            <returns>Returns the results of a delete operation as a <see cref="T:Relativity.Services.Objects.DataContracts.DeleteResult"/> containing information about the deleted items.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.DeleteAsync(System.Int32,Relativity.Services.Objects.DataContracts.DeleteRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes Documents or Relativity Dynamic Objects (RDOs) and their associated files, as well as reports the query execution progress, and provides a token used for canceling the operation.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be deleted.</param>
            <param name="request">A request to delete a Document or Relativity Dynamic Object (RDO).</param>
            <param name="cancel">Used to request cancel of the object delete execution.</param>
            <returns>Returns the results of a delete operation as a <see cref="T:Relativity.Services.Objects.DataContracts.DeleteResult"/> containing information about the deleted items.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.DeleteAsync(System.Int32,Relativity.Services.Objects.DataContracts.DeleteRequest,System.IProgress{Relativity.Services.Objects.DataContracts.DeleteProcessStateProgress})">
            <summary>
            Deletes Documents or Relativity Dynamic Objects (RDOs) and their associated files, as well as reports the query execution progress, and provides a token used for canceling the operation.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be deleted.</param>
            <param name="request">A request to delete a Document or Relativity Dynamic Object (RDO).</param>
            <param name="progress">Contains a callback that reports query execution progress.</param>
            <returns>Returns the results of a delete operation as a <see cref="T:Relativity.Services.Objects.DataContracts.DeleteResult"/> containing information about the deleted items.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.CreateAsync(System.Int32,Relativity.Services.Objects.DataContracts.CreateRequest)">
            <summary>
            Creates a Relativity Dynamic Object (RDO) with the specified fields.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be created.</param>
            <param name="request">A request to create a Relativity Dynamic Object (RDO).</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.CreateResult"/> containing event handler statuses, and a <see cref="T:Relativity.Services.Objects.DataContracts.RelativityObject"/>.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.CreateAsync(System.Int32,Relativity.Services.Objects.DataContracts.CreateRequest,Relativity.Services.Objects.DataContracts.OperationOptions)">
            <summary>
            Creates a Relativity Dynamic Object (RDO) with the specified fields using a calling context.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be created.</param>
            <param name="request">A request to create a Relativity Dynamic Object (RDO).</param>
            <param name="operationOptions">An object containing a calling context property providing information used to populate data for event handlers.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.CreateResult"/> containing event handler statuses, and a <see cref="T:Relativity.Services.Objects.DataContracts.RelativityObject"/>.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.QuerySlimAsync(System.Int32,Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32)">
            <summary>
            Query for Workspaces, Documents, RDOs, and system types. This returns a slimmer payload aimed towards display of the query results in a grid.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to query for. Pass -1 for admin artifacts.</param>
            <param name="request">A <see cref="T:Relativity.Services.Objects.DataContracts.QueryRequest"/> object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned <see cref="T:Relativity.Services.Objects.DataContracts.QueryResult"/> object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <returns>Returns the results of the executed query.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.QuerySlimAsync(System.Int32,Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Query for Workspaces, Documents, RDOs, and system types. This returns a slimmer payload aimed towards display of the query results in a grid.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to query for. Pass -1 for admin artifacts.</param>
            <param name="request">A <see cref="T:Relativity.Services.Objects.DataContracts.QueryRequest"/> object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned <see cref="T:Relativity.Services.Objects.DataContracts.QueryResult"/> object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="cancel">A request to cancel the execution of a create job for an object.</param>
            <param name="progress">A callback that reports create execution progress.</param>
            <returns>Returns the results of the executed query.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.QuerySlimAsync(System.Int32,Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Query for Workspaces, Documents, RDOs, and system types. This returns a slimmer payload aimed towards display of the query results in a grid.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to query for. Pass -1 for admin artifacts.</param>
            <param name="request">A <see cref="T:Relativity.Services.Objects.DataContracts.QueryRequest"/> object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned <see cref="T:Relativity.Services.Objects.DataContracts.QueryResult"/> object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="cancel">A request to cancel the execution of a create job for an object.</param>
            <returns>Returns the results of the executed query.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.QuerySlimAsync(System.Int32,Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32,System.Int32,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Query for Workspaces, Documents, RDOs, and system types. This returns a slimmer payload aimed towards display of the query results in a grid.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to query for. Pass -1 for admin artifacts.</param>
            <param name="request">A <see cref="T:Relativity.Services.Objects.DataContracts.QueryRequest"/> object containing conditions, sorting order, fields and other information for the query.</param>
            <param name="start">Index of the first artifact in the returned <see cref="T:Relativity.Services.Objects.DataContracts.QueryResult"/> object.</param>
            <param name="length">Number of items to return in the query result, starting with index in the start parameter.</param>
            <param name="progress">A callback that reports create execution progress.</param>
            <returns>Returns the results of the executed query.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.StreamLongTextAsync(System.Int32,Relativity.Services.Objects.DataContracts.RelativityObjectRef,Relativity.Services.Objects.DataContracts.FieldRef)">
            <summary>
            Retrieves the contents of a long text field on a Document or Relativity Dynamic Object (RDO) as a stream.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the object to be retrieved.</param>
            <param name="exportObject">A <see cref="T:Relativity.Services.Objects.DataContracts.RelativityObjectRef"/> of the Document or Relativity Dynamic Object (RDO) that contains the text to be streamed.</param>
            <param name="longTextField">A <see cref="T:Relativity.Services.Objects.DataContracts.FieldRef"/> of the long text field that contains the text to be streamed.</param>
            <returns>
            A <see cref="T:Relativity.Kepler.Transport.IKeplerStream"/> that contains the content of the selected long text field.
            This stream is the text encoded in either <see cref="P:System.Text.Encoding.Unicode"/> for unicode-enabled fields or <see cref="P:System.Text.Encoding.ASCII"/> otherwise.
            </returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.InitializeExportAsync(System.Int32,Relativity.Services.Objects.DataContracts.QueryRequest,System.Int32)">
            <summary>
            Initializes an export job, populated with the results of a <see cref="T:Relativity.Services.Objects.DataContracts.QueryRequest"/>. 
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the data to export.</param>
            <param name="queryRequest">Query that specifies the data set to export.
            Includes ObjectType and Fields to be exported, query information to determine the set of objects to export, and an optional maximum length to export inline.</param>
            <param name="start">The record index to begin exporting from.</param>
            <returns>An <see cref="T:Relativity.Services.DataContracts.DTOs.Results.ExportInitializationResults"/> containing an export run ID, and a count of records to be exported.</returns>
            <remarks>After initialization, results can be retrieved using <see cref="M:Relativity.Services.Objects.IObjectManager.RetrieveNextResultsBlockFromExportAsync(System.Int32,System.Guid,System.Int32)"/> or <see cref="M:Relativity.Services.Objects.IObjectManager.RetrieveResultsBlockFromExportAsync(System.Int32,System.Guid,System.Int32,System.Int32)"/>.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.InitializeExportAsync(System.Int32,Relativity.Services.Objects.DataContracts.QueryRequest,System.Guid,System.Int32)">
            <summary>
            Initializes an export job, populated with the results of a <see cref="T:Relativity.Services.Objects.DataContracts.QueryRequest"/> and ExportTableRequest key. 
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the data to export.</param>
            <param name="queryRequest">Query that specifies the data set to export.
            Includes ObjectType and Fields to be exported, query information to determine the set of objects to export, and an optional maximum length to export inline.</param>
            <param name="requestKey">GUID of an ExportTableRequest record that has been specified in SQL.</param>
            <param name="start">The record index to begin exporting from.</param>
            <returns>An <see cref="T:Relativity.Services.DataContracts.DTOs.Results.ExportInitializationResults"/> containing an export run ID, and a count of records to be exported.</returns>
            <remarks>After initialization, results can be retrieved using <see cref="M:Relativity.Services.Objects.IObjectManager.RetrieveNextResultsBlockFromExportAsync(System.Int32,System.Guid,System.Int32)"/> or <see cref="M:Relativity.Services.Objects.IObjectManager.RetrieveResultsBlockFromExportAsync(System.Int32,System.Guid,System.Int32,System.Int32)"/>.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.RetrieveNextResultsBlockFromExportAsync(System.Int32,System.Guid,System.Int32)">
            <summary>
            Retrieves a results block from a given export set. 
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the data to export.</param>
            <param name="runID">The run ID of the export generated from initialization.</param>
            <param name="batchSize">The desired number of results to return from the export set; note that this size may be capped by an internal limit.</param>
            <returns>The next block of export results, or null if the export is complete .</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.RetrieveResultsBlockFromExportAsync(System.Int32,System.Guid,System.Int32,System.Int32)">
            <summary>
            Retrieves a specified results block from a given export set.
            </summary>
            <param name="workspaceID">The ID of the workspace containing the data to export.</param>
            <param name="runID">The run ID of the export generated from initialization.</param>
            <param name="resultsBlockSize">The desired number of results to return from the export set; note that this size may be capped by an internal limit.</param>
            <param name="exportIndexID">The export index ID to start from in the export set.</param>
            <returns>The block of export results, or an empty array if the block is unavailable.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.DeleteAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassDeleteByObjectIdentifiersRequest)">
            <summary>
            Deletes a set of Documents or Relativity Dynamic Objects (RDOs) and their associated files, based on a list of identifiers.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be deleted.</param>
            <param name="massRequestByObjectIdentifiers">A request to delete multiple Documents or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassDeleteResult"/> containing information about the deleted items.</returns>
            <remarks>Process halts at first failure with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.DeleteAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassDeleteByObjectIdentifiersRequest,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Deletes a set of Documents or Relativity Dynamic Objects (RDOs) and their associated files, based on a list of identifiers, returns progress information.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be deleted.</param>
            <param name="massRequestByObjectIdentifiers">A request to delete multiple Documents or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="progress">A callback that reports delete execution progress.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassDeleteResult"/> containing information about the deleted items.</returns>
            <remarks>Process halts at first failure with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.DeleteAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassDeleteByObjectIdentifiersRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a set of Documents or Relativity Dynamic Objects (RDOs) and their associated files, based on a list of identifiers, and provides a token used for canceling the operation.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be deleted.</param>
            <param name="massRequestByObjectIdentifiers">A request to delete multiple Documents or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="cancel">A request to cancel the execution of a delete job for an object.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassDeleteResult"/> containing information about the deleted items.</returns>
            <remarks>Process halts at first failure or upon cancellation with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.DeleteAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassDeleteByObjectIdentifiersRequest,System.Threading.CancellationToken,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Deletes a set of Documents or Relativity Dynamic Objects (RDOs) and their associated files, based on a list of identifiers, provides a token used for canceling the operation, and returns progress information.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be deleted.</param>
            <param name="massRequestByObjectIdentifiers">A request to delete multiple Documents or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="cancel">A request to cancel the execution of a delete job for an object.</param>
            <param name="progress">A callback that reports delete execution progress.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassDeleteResult"/> containing information about the deleted items.</returns>
            <remarks>Process halts at first failure or upon cancellation with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.DeleteAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassDeleteByCriteriaRequest)">
            <summary>
            Deletes Documents or Relativity Dynamic Objects (RDOs) and their associated files, based on a set of search or view conditions.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be deleted.</param>
            <param name="massRequestByCriteria">A request to delete multiple Documents or Relativity Dynamic Objects (RDOs) that meet the specified search or view conditions.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassDeleteResult"/> containing information about the deleted items.</returns>
            <remarks>Process halts at first failure with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.DeleteAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassDeleteByCriteriaRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes Documents or Relativity Dynamic Objects (RDOs) and their associated files, based on a set of search or view conditions, and provides a token used for canceling the operation.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be deleted.</param>
            <param name="massRequestByCriteria">Information about the set of RDOs to be deleted.</param>
            <param name="cancel">A request to cancel the execution of a delete job for an object.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassDeleteResult"/> containing information about the deleted items.</returns>
            <remarks>Process halts at first failure or upon cancellation with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.DeleteAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassDeleteByCriteriaRequest,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Deletes Documents or Relativity Dynamic Objects (RDOs) and their associated files, based on a set of search or view conditions, and returns progress information.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be deleted.</param>
            <param name="massRequestByCriteria">Information about the set of RDOs to be deleted.</param>
            <param name="progress">A callback that reports delete execution progress.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassDeleteResult"/> containing information about the deleted items.</returns>
            <remarks>Process halts at first failure with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.DeleteAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassDeleteByCriteriaRequest,System.Threading.CancellationToken,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Deletes Documents or Relativity Dynamic Objects (RDOs) and their associated files, based on a set of search or view conditions, provides a token used for canceling the operation, and returns progress information.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be deleted.</param>
            <param name="massRequestByCriteria">Information about the set of RDOs to be deleted.</param>
            <param name="cancel">A request to cancel the execution of a delete job for an object.</param>
            <param name="progress">A callback that reports delete execution progress.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassDeleteResult"/> containing information about the deleted items.</returns>
            <remarks>Process halts at first failure or upon cancellation with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.CreateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassCreateRequest)">
            <summary>
            Creates a set of Relativity Dynamic Objects (RDOs) with the specified fields.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be created.</param>
            <param name="massRequest">A request to create multiple Relativity Dynamic Objects (RDOs).</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassCreateResult"/> containing a list of created RDOs and a message when an error occurs.</returns>
            <remarks>Process halts at first failure with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.CreateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a set of Relativity Dynamic Objects (RDOs) with the specified fields, and provides a token used for canceling the operation.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be created.</param>
            <param name="massRequest">A request to create multiple Relativity Dynamic Objects (RDOs).</param>
            <param name="cancel">A request to cancel the execution of a create job for an object.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassCreateResult"/> containing a list of created RDOs and a message when an error occurs.</returns>
            <remarks>Process halts at first failure or upon cancellation with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.CreateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassCreateRequest,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Creates a set of Relativity Dynamic Objects (RDOs) with the specified fields, and returns progress information.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be created.</param>
            <param name="massRequest">A request to create multiple Relativity Dynamic Objects (RDOs).</param>
            <param name="progress">A callback that reports create execution progress.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassCreateResult"/> containing a list of created RDOs and a message when an error occurs.</returns>
            <remarks>Process halts at first failure with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.CreateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassCreateRequest,System.Threading.CancellationToken,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Creates a set of Relativity Dynamic Objects (RDOs) with the specified fields, provides a token used for canceling the operation, and returns progress information.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be created.</param>
            <param name="massRequest">A request to create multiple Relativity Dynamic Objects (RDOs).</param>
            <param name="cancel">A request to cancel the execution of a create job for an object.</param>
            <param name="progress">A callback that reports create execution progress.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassCreateResult"/> containing a list of created RDOs and a message when an error occurs.</returns>
            <remarks>Process halts at first failure or upon cancellation with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest)">
            <summary>
            Updates specified fields on a list of Documents or Relativity Dynamic Objects (RDOs) that match a set of identifiers by setting the fields to the same value.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByObjectIdentifiers">A request to update multiple Documents or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateResult"/> with the number of updated objects and a message when any errors occur.</returns>
            <remarks>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest"/> object specifies the identifiers used to select a list of objects with the same type for updating. It also includes the same 
            values for all object fields that are to be updated. In the Relativity UI, this update operation is equivalent to the user selecting the Checked or These option in 
            the mass operations bar on a list page.
            Process halts at first failure with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest,Relativity.Services.Objects.DataContracts.MassUpdateOptions)">
            <summary>
            Updates specified fields on a list of Documents or Relativity Dynamic Objects (RDOs) that match a set of identifiers 
            by setting the fields to the same value. Also, uses any specified update options.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByObjectIdentifiers">A request to update multiple Documents or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="options">Specifies update behavior.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateResult"/> with the number of updated objects and a message when any errors occur.</returns>
            <remarks>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest"/> object specifies the identifiers used to select a list of objects with the same 
            type for updating. It also includes the same values for all object fields that are to be updated. In the Relativity UI, 
            this update operation is equivalent to the user selecting the Checked or These option in the mass operations bar on a list page.
            Process halts at first failure with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest,System.Threading.CancellationToken)">
            <summary>
            Updates specified fields on a list of Documents or Relativity Dynamic Objects (RDOs) that match a set of identifiers 
            by setting the fields to the same value. Also, provides a token used for canceling the operation.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByObjectIdentifiers">A request to update multiple Documents or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="cancel">A request to cancel the execution of a update job for an object.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateResult"/> with the number of updated objects and a message when any errors occur.</returns>
            <remarks>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest"/> object specifies the identifiers used to select a list of objects with the same type for updating. 
            It also includes the same values for all object fields that are to be updated. In the Relativity UI, this update operation is equivalent 
            to the user selecting the Checked or These option in the mass operations bar on a list page.
            Process halts at first failure or upon cancellation with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest,Relativity.Services.Objects.DataContracts.MassUpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates specified fields on a list of Documents or Relativity Dynamic Objects (RDOs) that match a set of identifiers 
            by setting the fields to the same value. Also, uses any specified update options and provides a token used for canceling the operation.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByObjectIdentifiers">A request to update multiple Documents or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="options">Specifies update behavior.</param>
            <param name="cancel">A request to cancel the execution of a update job for an object.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateResult"/> with the number of updated objects and a message when any errors occur.</returns>
            <remarks>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest"/> object specifies the identifiers used to select a list of objects with the same type for updating. 
            It also includes the same values for all object fields that are to be updated. In the Relativity UI, this update operation is equivalent 
            to the user selecting the Checked or These option in the mass operations bar on a list page.
            Process halts at first failure or upon cancellation with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Updates specified fields on a list of Documents or Relativity Dynamic Objects (RDOs) that match a set of 
            identifiers by setting the fields to the same value. Also, returns progress information.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByObjectIdentifiers">A request to update multiple Documents or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="progress">A callback that reports update execution progress.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateResult"/> with the number of updated objects and a message when any errors occur.</returns>
            <remarks>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest"/> object specifies the identifiers used to select a list of objects with the 
            same type for updating. It also includes the same values for all object fields that are to be updated. In the Relativity UI, 
            this update operation is equivalent to the user selecting the Checked or These option in the mass operations bar on a list page.
            Process halts at first failure with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest,Relativity.Services.Objects.DataContracts.MassUpdateOptions,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Updates specified fields on a list of Documents or Relativity Dynamic Objects (RDOs) that match a set of identifiers 
            by setting the fields to the same value. Also, uses any specified update options and returns progress information.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByObjectIdentifiers">A request to update multiple Documents or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="options">Specifies update behavior.</param>
            <param name="progress">A callback that reports update execution progress.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateResult"/> with the number of updated objects and a message when any errors occur.</returns>
            <remarks>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest"/> object specifies the identifiers used to select a list of objects with the same type for updating. 
            It also includes the same values for all object fields that are to be updated. In the Relativity UI, this update operation is equivalent 
            to the user selecting the Checked or These option in the mass operations bar on a list page.
            Process halts at first failure with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest,System.Threading.CancellationToken,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Updates specified fields on a list of Documents or Relativity Dynamic Objects (RDOs) that match a set of identifiers 
            by setting the fields to the same value. Also, provides a token used for canceling the operation, and returns progress information.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByObjectIdentifiers">A request to update multiple Documents or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="cancel">A request to cancel the execution of a update job for an object.</param>
            <param name="progress">A callback that reports update execution progress.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateResult"/> with the number of updated objects and a message when any errors occur.</returns>
            <remarks>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest"/> object specifies the identifiers used to select a list of objects with the same type for updating.
            It also includes the same values for all object fields that are to be updated. In the Relativity UI, this update operation is
            equivalent to the user selecting the Checked or These option in the mass operations bar on a list page.
            Process halts at first failure or upon cancellation with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest,Relativity.Services.Objects.DataContracts.MassUpdateOptions,System.Threading.CancellationToken,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Updates specified fields on a list of Documents or Relativity Dynamic Objects (RDOs) that match a set of identifiers 
            by setting the fields to the same value. Also, uses any specified update options, provides a token used for canceling the 
            operation, and returns progress information.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByObjectIdentifiers">A request to update multiple Documents or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="options">Specifies update behavior.</param>
            <param name="cancel">A request to cancel the execution of a update job for an object.</param>
            <param name="progress">A callback that reports update execution progress.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateResult"/> with the number of updated objects and a message when any errors occur.</returns>
            <remarks>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateByObjectIdentifiersRequest"/> object specifies the identifiers used to select a list of objects with the same type for updating. 
            It also includes the same values for all object fields that are to be updated. In the Relativity UI, this update operation is equivalent 
            to the user selecting the Checked or These option in the mass operations bar on a list page.
            Process halts at first failure or upon cancellation with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest)">
            <summary>
            Updates specified fields on a list of Documents or Relativity Dynamic Objects (RDOs) that match the search or view conditions by setting the fields to the same value.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByCriteria">A request to update multiple Documents or Relativity Dynamic Objects (RDOs) that meet the specified search or view conditions.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateResult"/> with the number of updated objects and a message when any errors occur.</returns>
            <remarks>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest"/> object specifies the view or search conditions used to select a list of objects with the same type for updating. 
            It also specifies the same values for all object fields that are to be updated. In the Relativity UI, this update operation is equivalent to 
            the user selecting the All option in the mass operations bar on a list page.
            Process halts at first failure with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest,Relativity.Services.Objects.DataContracts.MassUpdateOptions)">
            <summary>
            Updates specified fields on a list of Documents or Relativity Dynamic Objects (RDOs) that match the 
            search or view conditions by setting the fields to the same value. Also, uses any specified update options.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByCriteria">A request to update multiple Documents or Relativity Dynamic Objects (RDOs) that meet the specified search or view conditions.</param>
            <param name="options">Specifies update behavior.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateResult"/> with the number of updated objects and a message when any errors occur.</returns>
            <remarks>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest"/> object specifies the view or search conditions used to select a list of objects with the same type for updating. 
            It also specifies the same values for all object fields that are to be updated. In the Relativity UI, this update operation is equivalent to 
            the user selecting the All option in the mass operations bar on a list page.
            Process halts at first failure with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest,System.Threading.CancellationToken)">
            <summary>
            Updates specified fields on a list of Documents or Relativity Dynamic Objects (RDOs) that match the search 
            or view conditions by setting the fields to the same value. Also, provides a token used for canceling the operation.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByCriteria">A request to update multiple Documents or Relativity Dynamic Objects (RDOs) that meet the specified search or view conditions.</param>
            <param name="cancel">A request to cancel the execution of a update job for an object.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateResult"/> with the number of updated objects and a message when any errors occur.</returns>
            <remarks>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest"/> object specifies the view or search conditions used to select a list of objects with the same type 
            for updating. It also specifies the same values for all object fields that are to be updated. In the Relativity UI, this update 
            operation is equivalent to the user selecting the All option in the mass operations bar on a list page.
            Process halts at first failure or upon cancellation with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest,Relativity.Services.Objects.DataContracts.MassUpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates specified fields on a list of Documents or Relativity Dynamic Objects (RDOs) that match the search or view conditions 
            by setting the fields to the same value. Also, uses any specified update options and provides a token used for canceling the operation.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByCriteria">A request to update multiple Documents or Relativity Dynamic Objects (RDOs) that meet the specified search or view conditions.</param>
            <param name="options">Specifies update behavior.</param>
            <param name="cancel">A request to cancel the execution of a update job for an object.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateResult"/> with the number of updated objects and a message when any errors occur.</returns>
            <remarks>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest"/> object specifies the view or search conditions used to select a list of objects with the same type for updating. 
            It also specifies the same values for all object fields that are to be updated. In the Relativity UI, this update operation is equivalent to 
            the user selecting the All option in the mass operations bar on a list page.
            Process halts at first failure or upon cancellation with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Updates specified fields on a list of Documents or Relativity Dynamic Objects (RDOs) that match the search 
            or view conditions by setting the fields to the same value. Also, returns progress information.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByCriteria">A request to update multiple Documents or Relativity Dynamic Objects (RDOs) that meet the specified search or view conditions.</param>
            <param name="progress">A callback that reports update execution progress.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateResult"/> with the number of updated objects and a message when any errors occur.</returns>
            <remarks>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest"/> object specifies the view or search conditions used to select a list of objects with the same type for 
            updating. It also specifies the same values for all object fields that are to be updated. In the Relativity UI, this update operation 
            is equivalent to the user selecting the All option in the mass operations bar on a list page.
            Process halts at first failure with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest,Relativity.Services.Objects.DataContracts.MassUpdateOptions,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Updates specified fields on a list of Documents or Relativity Dynamic Objects (RDOs) that match the search or view conditions 
            by setting the fields to the same value. Also, uses any specified update options and returns progress information.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByCriteria">A request to update multiple Documents or Relativity Dynamic Objects (RDOs) that meet the specified search or view conditions.</param>
            <param name="options">Specifies update behavior.</param>
            <param name="progress">A callback that reports update execution progress.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateResult"/> with the number of updated objects and a message when any errors occur.</returns>
            <remarks>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest"/> object specifies the view or search conditions used to select a list of objects with the same type for updating. 
            It also specifies the same values for all object fields that are to be updated. In the Relativity UI, this update operation is equivalent 
            to the user selecting the All option in the mass operations bar on a list page.
            Process halts at first failure with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest,System.Threading.CancellationToken,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Updates specified fields on a list of Documents or Relativity Dynamic Objects (RDOs) that match the search or view conditions by 
            setting the fields to the same value. Also, provides a token used for canceling the operation, and returns progress information.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByCriteria">A request to update multiple Documents or Relativity Dynamic Objects (RDOs) that meet the specified search or view conditions.</param>
            <param name="cancel">A request to cancel the execution of a update job for an object.</param>
            <param name="progress">A callback that reports update execution progress.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateResult"/> with the number of updated objects and a message when any errors occur.</returns>
            <remarks>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest"/> object specifies the view or search conditions used to select a list of objects with the same type for updating. 
            It also specifies the same values for all object fields that are to be updated. In the Relativity UI, this update operation is equivalent to 
            the user selecting the All option in the mass operations bar on a list page.
            Process halts at first failure or upon cancellation with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest,Relativity.Services.Objects.DataContracts.MassUpdateOptions,System.Threading.CancellationToken,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Updates specified fields on a list of Documents or Relativity Dynamic Objects (RDOs) that match the search or view conditions 
            by setting the fields to the same value. Also, uses any specified update options, provides a token used for canceling the operation, 
            and returns progress information.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestByCriteria">A request to update multiple Documents or Relativity Dynamic Objects (RDOs) that meet the specified search or view conditions.</param>
            <param name="options">Specifies update behavior.</param>
            <param name="cancel">A request to cancel the execution of a update job for an object.</param>
            <param name="progress">A callback that reports update execution progress.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateResult"/> with the number of updated objects and a message when any errors occur.</returns>
            <remarks>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateByCriteriaRequest"/> object specifies the view or search conditions used to select a list of objects with the same type for 
            updating. It also specifies the same values for all object fields that are to be updated. In the Relativity UI, this update operation 
            is equivalent to the user selecting the All option in the mass operations bar on a list page.
            Process halts at first failure or upon cancellation with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest)">
            <summary>
            Updates specified fields on a list of Documents or Relativity Dynamic Objects (RDOs) that match a set of identifiers by setting the fields to distinct values.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestPerObjects">A request to update multiple Documents or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateResult"/> with the number of updated objects and a message when any errors occur.</returns>
            <remarks>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest"/> object specifies identifiers for a list of objects of the same type for updating. It also specifies a distinct value for each object 
            field that is to be updated. This action is like overlay behavior available through the Relativity Desktop Client (RDC).
            Process halts at first failure with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest,Relativity.Services.Objects.DataContracts.MassUpdateOptions)">
            <summary>
            Updates specified fields on a list of Documents or Relativity Dynamic Objects (RDOs) that match a set of identifiers 
            by setting the fields to distinct values. Also, uses any specified update options.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestPerObjects">A request to update multiple Documents or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="options">Specifies update behavior.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateResult"/> with the number of updated objects and a message when any errors occur.</returns>
            <remarks>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest"/> object specifies identifiers for a list of objects of the same type for updating. 
            It also specifies a distinct value for each object field that is to be updated. This action is like overlay 
            behavior available through the Relativity Desktop Client (RDC).
            Process halts at first failure with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest,System.Threading.CancellationToken)">
            <summary>
            Updates specified fields on a list of Documents or Relativity Dynamic Objects (RDOs) that match a set of identifiers 
            by setting the fields to distinct values. Also, provides a token used for canceling the operation.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestPerObjects">A request to update multiple Documents or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="cancel">A request to cancel the execution of a update job for an object.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateResult"/> with the number of updated objects and a message when any errors occur.</returns>
            <remarks>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest"/> object specifies identifiers for a list of objects of the same type for updating. 
            It also specifies a distinct value for each object field that is to be updated. This action is like overlay 
            behavior available through the Relativity Desktop Client (RDC).
            Process halts at first failure or upon cancellation with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest,Relativity.Services.Objects.DataContracts.MassUpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates specified fields on a list of Documents or Relativity Dynamic Objects (RDOs) that match a set of identifiers 
            by setting the fields to distinct values. Also, uses any specified update options and provides a token used for canceling the operation.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestPerObjects">A request to update multiple Documents or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="options">Specifies update behavior.</param>
            <param name="cancel">A request to cancel the execution of a update job for an object.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateResult"/> with the number of updated objects and a message when any errors occur.</returns>
            <remarks>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest"/> object specifies identifiers for a list of objects of the same type for updating. 
            It also specifies a distinct value for each object field that is to be updated. This action is like overlay 
            behavior available through the Relativity Desktop Client (RDC).
            Process halts at first failure or upon cancellation with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Updates specified fields on a list of Documents or Relativity Dynamic Objects (RDOs) that match a set of identifiers 
            by setting the fields to distinct values. Also, returns progress information.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestPerObjects">A request to update multiple Documents or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="progress">A callback that reports update execution progress.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateResult"/> with the number of updated objects and a message when any errors occur.</returns>
            <remarks>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest"/> object specifies identifiers for a list of objects of the same type for updating. 
            It also specifies a distinct value for each object field that is to be updated. This action is like overlay 
            behavior available through the Relativity Desktop Client (RDC).
            Process halts at first failure with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest,Relativity.Services.Objects.DataContracts.MassUpdateOptions,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Updates specified fields on a list of Documents or Relativity Dynamic Objects (RDOs) that match a set of identifiers 
            by setting the fields to distinct values. Also, uses any specified update options and returns progress information.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="options">Specifies update behavior.</param>
            <param name="massRequestPerObjects">A request to update multiple Documents or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="progress">A callback that reports update execution progress.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateResult"/> with the number of updated objects and a message when any errors occur.</returns>
            <remarks>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest"/> object specifies identifiers for a list of objects of the same type for updating. 
            It also specifies a distinct value for each object field that is to be updated. This action is like overlay 
            behavior available through the Relativity Desktop Client (RDC).
            Process halts at first failure with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest,System.Threading.CancellationToken,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Updates specified fields on a list of Documents or Relativity Dynamic Objects (RDOs) that match a set of identifiers 
            by setting the fields to distinct values. Also, provides a token used for canceling the operation, and returns progress information.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestPerObjects">A request to update multiple Documents or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="cancel">A request to cancel the execution of a update job for an object.</param>
            <param name="progress">A callback that reports update execution progress.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateResult"/> with the number of updated objects and a message when any errors occur.</returns>
            <remarks>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest"/> object specifies identifiers for a list of objects of the same type for updating. 
            It also specifies a distinct value for each object field that is to be updated. This action is like overlay 
            behavior available through the Relativity Desktop Client (RDC).
            Process halts at first failure or upon cancellation with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateLongTextFromStreamAsync(System.Int32,Relativity.Services.Objects.DataContracts.UpdateLongTextFromStreamRequest,Relativity.Kepler.Transport.IKeplerStream)">
            <summary>
            Updates a single long text field using a stream for input. This method will not trigger event handlers.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifact to be updated.</param>
            <param name="updateLongTextFromStreamRequest">A request to update the value of a single long text field.</param>
            <param name="keplerStream">A <see cref="T:Relativity.Kepler.Transport.IKeplerStream"/> will provide the new field value.
            This stream should contain text encoded in either <see cref="P:System.Text.Encoding.Unicode"/> for unicode-enabled fields or <see cref="P:System.Text.Encoding.ASCII"/> otherwise.</param>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.UpdateAsync(System.Int32,Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest,Relativity.Services.Objects.DataContracts.MassUpdateOptions,System.Threading.CancellationToken,System.IProgress{Relativity.Services.Objects.DataContracts.MassOperationsStateProgress})">
            <summary>
            Updates specified fields on a list of Documents or Relativity Dynamic Objects (RDOs) that match a set of identifiers 
            by setting the fields to distinct values. Also, uses any specified update options, provides a token used for canceling the 
            operation, and returns progress information.
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifacts to be updated.</param>
            <param name="massRequestPerObjects">A request to update multiple Documents or Relativity Dynamic Objects (RDOs) that have the specified identifiers.</param>
            <param name="options">Specifies update behavior.</param>
            <param name="cancel">A request to cancel the execution of a update job for an object.</param>
            <param name="progress">A callback that reports update execution progress.</param>
            <returns>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdateResult"/> with the number of updated objects and a message when any errors occur.</returns>
            <remarks>A <see cref="T:Relativity.Services.Objects.DataContracts.MassUpdatePerObjectsRequest"/> object specifies identifiers for a list of objects of the same type for updating. 
            It also specifies a distinct value for each object field that is to be updated. This action is like overlay 
            behavior available through the Relativity Desktop Client (RDC).
            Process halts at first failure or upon cancellation with no rollback.</remarks>
        </member>
        <member name="M:Relativity.Services.Objects.IObjectManager.GetDependencyListAsync(System.Int32,Relativity.Services.Objects.DataContracts.DependencyListByObjectIdentifiersRequest)">
            <summary>
            Retrieves a list of dependent objects for a set of Documents or Relativity Dynamic Objects (RDOs).
            </summary>
            <param name="workspaceID">Workspace ID of the workspace containing the artifact.</param>
            <param name="request">A request to get a dependency list for a set Documents or Relativity Dynamic Objects (RDO).</param>
            <returns>A list of <see cref="T:Relativity.Services.Interfaces.Shared.Dependency"/> objects.</returns>
            <remarks>The dependency results describe which actions would be taken if the set of requested objects were deleted. 
            Secured results indicate insufficient permissions for deleting the objects.</remarks>
        </member>
        <member name="T:Relativity.Services.Objects.IObjectModule">
            <summary>
            Object Manager Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.Objects.Serialization.FRSerializer">
            <summary>
            Provides method for serializing and deserializing <see cref="T:Relativity.Services.Objects.DataContracts.FieldRef"/> objects. 
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Serialization.FRSerializer.TransformForSerialize(Relativity.Services.Objects.DataContracts.FieldRef)">
            <summary>
            Converts the specified <see cref="T:Relativity.Services.Objects.DataContracts.FieldRef"/> object into an object. 
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Objects.Serialization.FRSerializer.TransformForDeserialize(System.Object)">
            <summary>
            Converts the specified object into a <see cref="T:Relativity.Services.Objects.DataContracts.FieldRef"/> object. 
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Objects.Serialization.FRVPSerializer">
            <summary>
            Provides method for serializing and deserializing <see cref="T:Relativity.Services.Objects.DataContracts.FieldRefValuePair"/> objects. 
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Serialization.FRVPSerializer.TransformForSerialize(Relativity.Services.Objects.DataContracts.FieldRefValuePair)">
            <summary>
            Converts the specified <see cref="T:Relativity.Services.Objects.DataContracts.FieldRefValuePair"/>into an object. 
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Objects.Serialization.FRVPSerializer.TransformForDeserialize(System.Object)">
            <summary>
            Converts the specified object into a <see cref="T:Relativity.Services.Objects.DataContracts.FieldRefValuePair"/>. 
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Objects.Serialization.FVPSerializer">
            <summary>
            Provides method for serializing and deserializing <see cref="T:Relativity.Services.Objects.DataContracts.FieldValuePair"/> objects.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Serialization.FVPSerializer.TransformForDeserialize(System.Object)">
            <summary>
            Converts the specified Object into a <see cref="T:Relativity.Services.Objects.DataContracts.FieldValuePair"/>.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Objects.Serialization.FVPSerializer.GetPropertyFromData``1(System.String,System.Object)">
            <summary>
            Retrieves a specified property from the object containing data.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Objects.Serialization.FVPSerializer.TransformForSerialize(Relativity.Services.Objects.DataContracts.FieldValuePair)">
            <summary>
            Converts the specified <see cref="T:Relativity.Services.Objects.DataContracts.FieldValuePair"/> into an object.
            </summary>
            <param name="fvp"></param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Objects.Serialization.QueryResultSlimSerializer">
            <summary>
            Serializes and Deserializes <see cref="T:Relativity.Services.Objects.DataContracts.QueryResultSlim"/> objects.
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Serialization.QueryResultSlimSerializer.#ctor">
            <summary>
            Initializes a <see cref="T:Relativity.Services.Objects.Serialization.QueryResultSlimSerializer"/>
            </summary>
        </member>
        <member name="M:Relativity.Services.Objects.Serialization.QueryResultSlimSerializer.TransformForSerialize(Relativity.Services.Objects.DataContracts.QueryResultSlim)">
            <summary>
            Transforms the outgoing <see cref="T:Relativity.Services.Objects.DataContracts.QueryResultSlim"/> model into a format for serialization.
            </summary>
            <param name="model">The outgoing model</param>
            <returns>An object ready to be serialized.</returns>
        </member>
        <member name="M:Relativity.Services.Objects.Serialization.QueryResultSlimSerializer.TransformForDeserialize(System.Object)">
            <summary>
            Transforms the incoming deserialized data into a <see cref="T:Relativity.Services.Objects.DataContracts.QueryResultSlim"/> model.
            </summary>
            <param name="data">The deserialized data.</param>
            <returns>The data transformed into the <see cref="T:Relativity.Services.Objects.DataContracts.QueryResultSlim"/> model.</returns>
        </member>
        <member name="T:Relativity.Services.ConditionExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Relativity.Services.ConditionExtensions.ToQueryString(Relativity.Services.Condition)">
            <summary>
            Translates a Query Condition object to a Query Condition string.
            </summary>
            <param name="condition">The Query Condition.</param>
            <returns>A string used as input to a Query Condition object.</returns>
        </member>
        <member name="T:Relativity.Services.DeleteProcessStateProgress">
            <summary>
            Represents the progress object for mass delete processes.
            </summary>
        </member>
        <member name="P:Relativity.Services.DeleteProcessStateProgress.OperationsCompleted">
            <summary>
            Gets or sets the operations completed count.
            </summary>
            <value>
            The operations completed.
            </value>
        </member>
        <member name="P:Relativity.Services.DeleteProcessStateProgress.TotalOperations">
            <summary>
            Gets or sets the total operations count.
            </summary>
            <value>
            The total operations.
            </value>
        </member>
        <member name="M:Relativity.Services.DeleteProcessStateProgress.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Relativity.Services.DeleteProcessStateProgress"/> class.
            </summary>
        </member>
        <member name="M:Relativity.Services.DeleteProcessStateProgress.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Relativity.Services.DeleteProcessStateProgress"/> class.
            </summary>
            <param name="totalOperations">The total operations count.</param>
            <param name="operationsCompleted">The operations completed count.</param>
        </member>
        <member name="T:Relativity.Services.MoveProcessStateProgress">
            <summary>
            Represents the progress object for mass move processes.
            </summary>
        </member>
        <member name="P:Relativity.Services.MoveProcessStateProgress.OperationsCompleted">
            <summary>
            Gets or sets the operations completed count.
            </summary>
            <value>
            The operations completed.
            </value>
        </member>
        <member name="P:Relativity.Services.MoveProcessStateProgress.TotalOperations">
            <summary>
            Gets or sets the total operations count.
            </summary>
            <value>
            The total operations.
            </value>
        </member>
        <member name="M:Relativity.Services.MoveProcessStateProgress.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Relativity.Services.MoveProcessStateProgress"/> class.
            </summary>
        </member>
        <member name="M:Relativity.Services.MoveProcessStateProgress.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Relativity.Services.MoveProcessStateProgress"/> class.
            </summary>
            <param name="totalOperations">The total operations count.</param>
            <param name="operationsCompleted">The operations completed count.</param>
        </member>
        <member name="T:Relativity.Services.ProcessStateProgress">
            <summary>
            Represents the progress object for mass processes.
            </summary>
        </member>
        <member name="P:Relativity.Services.ProcessStateProgress.TotalCount">
            <summary>
            Represents the total number of items that the mass operation needs to process.
            </summary>
        </member>
        <member name="T:Relativity.Services.DocumentPrintData.IDocumentPrintDataModule">
            <summary>
            Document Print Data Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.DocumentPrintData.IDocumentPrintDataManager">
            <summary>
            Exposes methods on the Document Print Data web service.
            </summary>
        </member>
        <member name="M:Relativity.Services.DocumentPrintData.IDocumentPrintDataManager.GetDocumentPrintDataAsync(System.String,System.Int32)">
            <summary>
            Retrieves document print data given specific print options. 
            </summary>
            <remarks>
            GetDocumentPrintDataAsync() retrieves document print data in JSON format for a given set of print options. 
            </remarks>
            <param name="printOptions"></param>
            <param name="workspaceId"></param>
            <returns>A JSON object containing data necessary for Save As PDF</returns>
        </member>
        <member name="T:Relativity.Services.EmailNotificationsManager.IEmailNotificationsManager">
            <summary>
                Allows sending email notifications.
            </summary>
        </member>
        <member name="M:Relativity.Services.EmailNotificationsManager.IEmailNotificationsManager.SendEmailNotificationAsync(Relativity.Services.DataContracts.DTOs.EmailNotifications.EmailNotificationRequest)">
            <summary>
                Sends an email notification using Relativity's SMTP server (configured in Instance Settings)
                with title, body (in HTML or text format) and an optional email address that represents the sender. 
            </summary>
            <param name="request">Object defining specifics about requested email notification.</param>
        </member>
        <member name="T:Relativity.Services.EmailNotificationsManager.IEmailNotificationsModule">
            <summary>
            Email Notifications Module
            </summary>
        </member>
        <member name="T:Relativity.Services.Exceptions.InvalidInputException">
            <summary>
            A ValidationException that includes validation errors to be displayed to the consumer
            </summary>
        </member>
        <member name="T:Relativity.Services.Exceptions.SearchProviderException">
            <summary>
            Indicates that a 500-level error occurred within the search provider.
            </summary>
        </member>
        <member name="T:Relativity.Services.Exceptions.SearchProviderInvalidSyntaxException">
            <summary>
            Exception type thrown by search providers when a query fails due to invalid syntax.
            </summary>
        </member>
        <member name="T:Relativity.Services.FieldManager.IFieldModule">
            <summary>
            Field interface
            </summary>
        </member>
        <member name="T:Relativity.Services.FieldManager.IFieldManager">
            <summary>
            Exposes methods on the Field Manager service used for setting overlay behavior, propagating field values, updating filter types, and performing other tasks with fields.
            </summary>
        </member>
        <member name="M:Relativity.Services.FieldManager.IFieldManager.RetrieveBeginBatesFieldsAsync(System.Int32)">
            <summary>
            Gets fields containing beginning Bates numbers.
            </summary>
            <param name="workspaceArtifactId">The Artifact ID of a workspace.</param>
            <returns>A list of FieldRef objects.</returns>
            <remarks>A beginning Bates number is the first number used in the sequence of page level numbers for a production.</remarks>
        </member>
        <member name="M:Relativity.Services.FieldManager.IFieldManager.RetrieveArtifactViewFieldIdAsync(System.Int32,System.Int32)">
            <summary>
            Gets the identifier for a ViewField object associated with a specified field.
            </summary>
            <param name="workspaceArtifactId">The Artifact ID of a workspace.</param>
            <param name="fieldArtifactId">The artifact ID of a field.</param>
            <returns>The Artifact ID of a ViewField object associated with the specified field.</returns>
        </member>
        <member name="M:Relativity.Services.FieldManager.IFieldManager.UpdateFilterTypeAsync(System.Int32,System.Int32,System.String)">
            <summary>
            Modify the filter type for a field.
            </summary>
            <param name="workspaceArtifactId">The Artifact ID of a workspace.</param>
            <param name="artifactViewFieldId">The Artifact ID of a ViewField object associated with the field.</param>
            <param name="filterType">The filter type to set.</param>
        </member>
        <member name="M:Relativity.Services.FieldManager.IFieldManager.SetOverlayBehaviorAsync(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Determines whether the overlay behavior replaces or merges a new value with the existing values in a field.
            </summary>
            <param name="workspaceArtifactId">The Artifact ID of a workspace.</param>
            <param name="fieldArtifactId">The Artifact ID of a field.</param>
            <param name="fieldOverlayBehavior">Set this field to true if you want to merge a new value with existing field values, or set it to false if you want to replace the existing values.</param>
        </member>
        <member name="M:Relativity.Services.FieldManager.IFieldManager.SetPropagateToAsync(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Updates values in a group of related fields using propagation.
            </summary>
            <param name="workspaceArtifactId">The Artifact ID of a workspace.</param>
            <param name="fieldArtifactId">The Artifact ID of a field.</param>
            <param name="relationalFieldArtifactIDs">List of Artifact IDs for the relational fields that a value should be propagated to.</param>
        </member>
        <member name="M:Relativity.Services.FieldManager.IFieldManager.RetrieveUniqueFieldValuesAsync(System.Int32,System.Int32,System.String)">
            <summary>
            Executes a query for unique values in stored in fixed-length text fields.
            </summary>
            <remarks>
            It is recommended that you create an index on the database fields that you want to query.
            </remarks>
            <param name="workspaceId">The Artifact ID of the workspace containing the fields that you want to query on. Pass -1 to query on admin fields.</param>
            <param name="artifactTypeId">The identifier for the Artifact Type of the object associated with the field. See ArtifactType enumeration.</param>
            <param name="fieldName">The name of the fixed-length text field to be queried.</param>
            <returns>A list of unique values for the queried field.</returns>
        </member>
        <member name="T:Relativity.Services.FieldMapping.IFieldMappingModule">
            <summary>
            Field Mapping Module Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.FieldMapping.IFieldMapping">
            <summary>
            Exposes methods used to store and retrieve data for field mapping, including fields available for mapping and fields already mapped.
            </summary>
        </member>
        <member name="M:Relativity.Services.FieldMapping.IFieldMapping.ClearCachedDataAsync">
            <summary>
            Clears all cached data for Invariant, Relativity, and the field catalog. Used for testing purposes, and for clearing corrupted data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.FieldMapping.IFieldMapping.GetAllMappedFieldsAsync(System.Int32,System.Guid[],System.Int32)">
            <summary>
            Returns a list of mapped Relativity fields.
            </summary>
            <param name="workspaceArtifactId">The workspace artifact identifier.</param>
            <param name="fieldsToAppend">An optional list of GUIDs corresponding to Relativity fields, which have field data returned for them regardless of whether 
            they are mapped to a data source. Only Invariant currently uses this field. For general use, send in the empty set ([]) for this parameter. </param>
            <param name="dataSourceId">The Artifact ID of the processing data source used to populate the mapped fields. Note: Set this value only if you want an 
            audit of the mapped fields added to the corresponding data source in Relativity. In all other cases, pass the integer 0 as the parameter.</param>
        </member>
        <member name="M:Relativity.Services.FieldMapping.IFieldMapping.GetAutomappedFieldGuidsAsync(System.Int32)">
            <summary>
            Returns an array of Guids corresponding to the Relativity fields that are automatically mapped by Invariant.
            </summary>
        </member>
        <member name="M:Relativity.Services.FieldMapping.IFieldMapping.IsFieldMappingAvailableAsync(System.Int32)">
            <summary>
            Returns a boolean flag indicating whether or not Field Mapping functionality is available.
            </summary>
            <param name="workspaceArtifactId">The workspace artifact identifier.</param>
            <returns>True if the Field Mapping service is available, false otherwise.</returns>
        </member>
        <member name="M:Relativity.Services.FieldMapping.IFieldMapping.GetInvariantFieldsAsync(System.Int32,System.Boolean)">
            <summary>
            Retrieves an array of fields from Invariant that are available for field mapping.
            </summary>
            <param name="workspaceArtifactId">The workspace artifact identifier.</param>
            <param name="catalogFieldsOnly">A flag indicating whether only Catalog fields should be returned.</param>
            <returns>An array of MappableSourceField objects.</returns>
        </member>
        <member name="M:Relativity.Services.FieldMapping.IFieldMapping.GetInvariantFieldsPaginatedAsync(Relativity.Services.FieldMapping.FieldMappingRequest)">
            <summary>
            Retrieves an array of fields from Invariant that are available for field mapping and then paginated for performance.
            </summary>
            <param name="fieldMappingRequest">A request object that contains the workspaceId and filtering/sorting options.</param>
            <returns>List of paginated fields and the total count.</returns>
        </member>
        <member name="M:Relativity.Services.FieldMapping.IFieldMapping.ReadExternalMappingAsync(System.Int32,System.Int32,System.String)">
            <summary>
            Retrieves an External Field Mapping for the given field artifact Id, if one exists.
            </summary>
            <param name="workspaceArtifactId">The workspace artifact identifier.</param>
            <param name="fieldArtifactId">The artifact identifier of the field to get mapping for.</param>
            <param name="fieldSource">The field source name (e.g. "Invariant").</param>
            <returns>An ExternalMapping object.</returns>
        </member>
        <member name="M:Relativity.Services.FieldMapping.IFieldMapping.UpdateExternalMappingAsync(System.Int32,Relativity.Services.FieldMapping.ExternalMapping)">
            <summary>
            Modifies or inserts a single field mapping record.
            </summary>
            <param name="workspaceArtifactId">The workspace artifact identifier.</param>
            <param name="model">An ExternalMapping object with the updated data.</param>
        </member>
        <member name="M:Relativity.Services.FieldMapping.IFieldMapping.UpdateExternalMappingWithoutValidationAsync(System.Int32,Relativity.Services.FieldMapping.ExternalMapping)">
            <summary>
            Inserts a single field mapping record without validation.
            </summary>
            <param name="workspaceArtifactId">The workspace artifact identifier.</param>
            <param name="model">An ExternalMapping object with the updated data.</param>
        </member>
        <member name="T:Relativity.Services.FieldMapping.CatalogInfo">
            <summary>
            This object contains the additional field information contained in the Field Catalog
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.CatalogInfo.FieldIdentifier">
            <summary>
            The Guid of the Catalog field
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.CatalogInfo.ExternalFieldName">
            <summary>
            The identifying name of the field in the Source (i.e. Invariant field name)
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.CatalogInfo.FriendlyName">
            <summary>
            The "friendly" (more readable) version of the field name
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.CatalogInfo.Description">
            <summary>
            A description of the nature of the information the field contains
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.CatalogInfo.DataType">
            <summary>
            The DataType of the field
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.CatalogInfo.Category">
            <summary>
            The Category of the field
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.CatalogInfo.Length">
            <summary>
            The Length of the field
            </summary>
        </member>
        <member name="T:Relativity.Services.FieldMapping.ExternalMapping">
            <summary>
            This object encapsulates a mapping between a Relativity field and an External (e.g. Invariant) field.
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.MappingId">
            <summary>
            The identifier of the database record containing the mapping between the Relativity Field and the data source field.
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.FieldArtifactId">
            <summary>
            The Artifact ID of the Relativity field being mapped.
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.FieldGuid">
            <summary>
            The Guid of the field in Relativity.
            </summary>
            <remarks>This property is only valid for a field that is part of a Relativity Application.</remarks>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.RelativityFieldName">
            <summary>
            The name of the field as it is displayed in Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.FieldTypeId">
            <summary>
            The ID of the Relativity Field Type.
            </summary>
            <remarks>
            Values correspond to the <a href="T_kCura_Relativity_Client_FieldType.htm">FieldType</a> enumeration.
            </remarks>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.EnableDataGrid">
            <summary>
            A flag indicating whether a field is enabled for Data Grid. This flag is only valid for text fields.
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.ExternalFieldName">
            <summary>
            The name of the field 
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.ExternalFieldSource">
            <summary>
            The name of the external data source (i.e. Invariant).
            </summary>
            <remarks>For calls to UpdateExternalMappingAsync, this property is required and must be non-null.</remarks>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.FriendlyName">
            <summary>
            The "user-friendly" name of the source field.
            </summary>
            <remarks>This will only be populated for members of the Field Catalog.</remarks>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.UseUnicodeEncoding">
            <summary>
            Indicates the field uses Unicode encoding.
            </summary>
            <remarks>This only applies to text fields, and a text field can only be mapped if this value is true.</remarks>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.CatalogLength">
            <summary>
            The maximum length for a fixed-length Catalog Field
            </summary>
            <remarks>This will only be populated for members of the Field Catalog.</remarks>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.CurrentLength">
            <summary>
            The current maximum length of a fixed-length field in the Relativity database.
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.ObjectType">
            <summary>
            Integer representing the fieldâ€™s object type.
            </summary>
            <remarks>
            Values correspond to the <a href="T_kCura_Relativity_Client_ArtifactType.htm">ArtifactType</a> enumeration.
            Used for validation; only artifact type 10, which corresponds to the Document object, is valid for Field Mapping.
            </remarks>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.IsArtifactBaseField">
            <summary>
            Boolean flag indicating if the field is a Base Field.
            </summary>
            <remarks>A Base field is a type of System field, and is not valid for Field Mapping.</remarks>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.FieldCategory">
            <summary>
            The Relativity-defined category of the field.
            </summary>
            <remarks>
            Values correspond to the <a href="T_kCura_Relativity_Client_FieldCategory.htm">FieldCategory</a> enumeration.
            The following categories are associated with system fields, and are therefor invalid for Field Mapping:
            AutoCreate, Batch, FolderName, FullText, GenericSystem, MarkupSetMarker, ParentArtifact, ProductionMarker, Reflected, MultiReflected
            </remarks>
        </member>
        <member name="P:Relativity.Services.FieldMapping.ExternalMapping.AssociativeArtifactTypeID">
            <summary>
            The Artifact Type ID an associated object
            </summary>
            <remarks>
            Values correspond to the <a href="T_kCura_Relativity_Client_ArtifactType.htm">ArtifactType</a> enumeration.
            If the associated ArtifactTypeID is equal to Batch (8), the field isn't valid for Field Mapping.
            </remarks>
        </member>
        <member name="T:Relativity.Services.FieldMapping.FieldFilter">
            <summary>
            Properties to filter Invariant fields.
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.FieldFilter.NameFilter">
            <summary>
            Filter for the name of mappable fields.
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.FieldFilter.DataTypeFilter">
            <summary>
            Filter for the data type of mappable fields.
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.FieldFilter.DescriptionFilter">
            <summary>
            Filter for the description of mappable fields.
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.FieldFilter.RelativityFieldNameFilter">
            <summary>
            Filter for the mapped Relativity field names.
            </summary>
        </member>
        <member name="T:Relativity.Services.FieldMapping.FieldMappingRequest">
            <summary>
            Request object to retrieve paginated Invariant fields.
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.FieldMappingRequest.WorkspaceId">
            <summary>
            Workspace Artifact Id to retrieve mappable fields from.
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.FieldMappingRequest.OffSet">
            <summary>
            The starting index to retrieve mappable fields.
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.FieldMappingRequest.Count">
            <summary>
            The number of mappable fields to retrieve.
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.FieldMappingRequest.Filter">
            <summary>
            Properties with which to filter the mappable fields.
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.FieldMappingRequest.SortingOption">
            <summary>
            The column and direction to sort the mappable fields on.
            </summary>
        </member>
        <member name="T:Relativity.Services.FieldMapping.FieldMappingResponse">
            <summary>
            Represents the result summary of retrieving Invariant field mappings.
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.FieldMappingResponse.TotalCount">
            <summary>
            The total count of mappable fields retrieved after filtering.
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.FieldMappingResponse.MappableFields">
            <summary>
            The mappable fields retrieved from Invariant after filtering and pagination.
            </summary>
        </member>
        <member name="T:Relativity.Services.FieldMapping.FieldSortingOption">
            <summary>
            Field properties and sorting options for sorting mappable fields.
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.FieldSortingOption.FieldName">
            <summary>
            The mappable field column to sort on.
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.FieldSortingOption.SortingDirection">
            <summary>
            The direction to sort, either ascending or descending.
            </summary>
        </member>
        <member name="T:Relativity.Services.FieldMapping.FieldName">
            <summary>
            Field property to sort mappings by.
            </summary>
        </member>
        <member name="F:Relativity.Services.FieldMapping.FieldName.Name">
            <summary>
            Name property.
            </summary>
        </member>
        <member name="F:Relativity.Services.FieldMapping.FieldName.DataType">
            <summary>
            Data Type property.
            </summary>
        </member>
        <member name="F:Relativity.Services.FieldMapping.FieldName.Description">
            <summary>
            Description property.
            </summary>
        </member>
        <member name="F:Relativity.Services.FieldMapping.FieldName.RelativityFieldName">
            <summary>
            Relativity Field Name property.
            </summary>
        </member>
        <member name="T:Relativity.Services.FieldMapping.SortingDirection">
            <summary>
            The direction to sort the field mapping data.
            </summary>
        </member>
        <member name="F:Relativity.Services.FieldMapping.SortingDirection.Asc">
            <summary>
            Ascending.
            </summary>
        </member>
        <member name="F:Relativity.Services.FieldMapping.SortingDirection.Desc">
            <summary>
            Descending.
            </summary>
        </member>
        <member name="T:Relativity.Services.FieldMapping.MappableSourceField">
            <summary>
            An object to represent a mappable field from an outside data source (e.g. Invariant)
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.MappableSourceField.Category">
            <summary>
            The category of the metadata stored in the field.
            </summary>
            <remarks>Examples are Email (for fields like From, To, CC, BCC, etc.), Image (Orientation, Resolution, Apeture Value), Matter (File Name, File Type, File Size).</remarks>
        </member>
        <member name="P:Relativity.Services.FieldMapping.MappableSourceField.SourceName">
            <summary>
            The name of the field used by the external data source.
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.MappableSourceField.FriendlyName">
            <summary>
            The "user-friendly" name of the source field.
            </summary>
            <remarks>This will only be populated for members of the Field Catalog.</remarks>
        </member>
        <member name="P:Relativity.Services.FieldMapping.MappableSourceField.Description">
            <summary>
            A verbose description of the data represented by the source field.
            </summary>
            <remarks>This will only be populated for members of the Field Catalog.</remarks>
        </member>
        <member name="P:Relativity.Services.FieldMapping.MappableSourceField.DataType">
            <summary>
            The type of data stored in the field.
            <remarks>Common data types are String, Int32, DateTime, Boolean, or Collection.</remarks>
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.MappableSourceField.MappedFields">
            <summary>
            A list of Relativity fields currently mapped to this field.
            </summary>
        </member>
        <member name="P:Relativity.Services.FieldMapping.MappableSourceField.Length">
            <summary>
            The minimum acceptable length for a fixed-length text source field.
            </summary>
            <remarks>This will only be populated for members of the Field Catalog.</remarks>
        </member>
        <member name="T:Relativity.Services.FileField.FileFieldConstants">
            <summary>
            Defines constants for routes used by the File Field Manager service.
            </summary>
        </member>
        <member name="F:Relativity.Services.FileField.FileFieldConstants.SERVICE_MODULE_NAME">
            <summary>
            File Field Manager service module identification name.
            </summary>
        </member>
        <member name="F:Relativity.Services.FileField.FileFieldConstants.SERVICE_NAME">
            <summary>
            File Field Manager Web service identification name.
            </summary>
        </member>
        <member name="F:Relativity.Services.FileField.FileFieldConstants.MODULE_PREFIX">
            <summary>
            File Field Manager service module identification prefix for Service route.
            </summary>
        </member>
        <member name="F:Relativity.Services.FileField.FileFieldConstants.BASE_SERVICE_ROUTE">
            <summary>
            The route prefix used for File Field Manager service module and Web Service.
            </summary>
        </member>
        <member name="T:Relativity.Services.FileField.IFileFieldManager">
            <summary>
            Exposes the methods for downloading and uploading files linked to file fields.
            </summary>
        </member>
        <member name="M:Relativity.Services.FileField.IFileFieldManager.GetFilesForDynamicObjectsAsync(System.Int32,System.Int32,System.Int32[])">
            <summary>
            Gets files for passed dynamic sourced objects ids.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the object exists.</param>
            <param name="fileFieldArtifactID">The ArtifactID of the file field.</param>
            <param name="objectIDs">The ArtifactIDs of the dynamic sourced objects.</param>
            <returns>Files for passed dynamic sourced objects ids.</returns>
        </member>
        <member name="M:Relativity.Services.FileField.IFileFieldManager.DownloadAsync(System.Int32,Relativity.Services.Objects.DataContracts.RelativityObjectRef,Relativity.Services.Objects.DataContracts.FieldRef)">
            <summary>
            Downloads a file.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the object exists. Use -1 to indicate the admin workspace.</param>
            <param name="field">A <see cref="T:Relativity.Services.Objects.DataContracts.FieldRef"/> of the file field that contains the file to be streamed.</param>
            <param name="objectRef">A <see cref="T:Relativity.Services.Objects.DataContracts.RelativityObjectRef"/> of the object that contains the file to be streamed.</param>
            <returns>A <see cref="T:Relativity.Kepler.Transport.IKeplerStream">kepler stream</see> that contains the content of the file.</returns>
        </member>
        <member name="M:Relativity.Services.FileField.IFileFieldManager.UploadAsync(System.Int32,Relativity.Services.Objects.DataContracts.FieldRef,Relativity.Services.Objects.DataContracts.RelativityObjectRef,System.String,Relativity.Kepler.Transport.IKeplerStream)">
            <summary>
            Uploads a file and stores it to temporary storage.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the object exists. Use -1 to indicate the admin workspace.</param>
            <param name="field">A <see cref="T:Relativity.Services.Objects.DataContracts.FieldRef"/> of the file field that contains the file to be streamed.</param>
            <param name="objectRef">A <see cref="T:Relativity.Services.Objects.DataContracts.RelativityObjectRef"/> of the object that contains the file to be streamed.</param>
            <param name="fileName">A string that contains the name of the file to be uploaded.</param>
            <param name="file">A <see cref="T:Relativity.Kepler.Transport.IKeplerStream">kepler stream</see> that contains the content of the uploaded file.</param>
            <returns>A <see cref="T:Relativity.Services.Files.FileRef"> File representation in Relativity</see> that contains name and GUID for the uploaded file.</returns>
        </member>
        <member name="M:Relativity.Services.FileField.IFileFieldManager.UploadAsync(System.Int32,Relativity.Services.Objects.DataContracts.FieldRef,Relativity.Services.Objects.DataContracts.RelativityObjectRef,System.String,Relativity.Kepler.Transport.IKeplerStream,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Uploads a file, stores it to temporary storage, and returns progress information.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the object exists. Use -1 to indicate the admin workspace.</param>
            <param name="field">A <see cref="T:Relativity.Services.Objects.DataContracts.FieldRef"/> of the file field that contains the file to be streamed.</param>
            <param name="objectRef">A <see cref="T:Relativity.Services.Objects.DataContracts.RelativityObjectRef"/> of the object that contains the file to be streamed.</param>
            <param name="fileName">A string that contains the name of the file to be uploaded.</param>
            <param name="file">A <see cref="T:Relativity.Kepler.Transport.IKeplerStream">kepler stream</see> that contains the content of the uploaded file.</param>
            <param name="progress">A callback that reports file upload execution progress.</param>
            <returns>A <see cref="T:Relativity.Services.Files.FileRef"> File representation in Relativity</see> that contains name and GUID for the uploaded file.</returns>
        </member>
        <member name="M:Relativity.Services.FileField.IFileFieldManager.UploadAsync(System.Int32,Relativity.Services.Objects.DataContracts.FieldRef,Relativity.Services.Objects.DataContracts.RelativityObjectRef,System.String,Relativity.Kepler.Transport.IKeplerStream,System.Threading.CancellationToken,System.IProgress{Relativity.Services.DataContracts.DTOs.ProgressReport})">
            <summary>
            Uploads a file, stores it to temporary storage, provides a token used for canceling the operation, and returns progress information.
            </summary>
            <param name="workspaceID">The ArtifactID of the workspace where the object exists. Use -1 to indicate the admin workspace.</param>
            <param name="field">A <see cref="T:Relativity.Services.Objects.DataContracts.FieldRef"/> of the file field that contains the file to be streamed.</param>
            <param name="objectRef">A <see cref="T:Relativity.Services.Objects.DataContracts.RelativityObjectRef"/> of the object that contains the file to be streamed.</param>
            <param name="fileName">A string that contains the name of the file to be uploaded.</param>
            <param name="file">A <see cref="T:Relativity.Kepler.Transport.IKeplerStream">kepler stream</see> that contains the content of the uploaded file.</param>
            <param name="cancel">A request to cancel the execution of a file streaming.</param>
            <param name="progress">A callback that reports file upload execution progress.</param>
            <returns>A <see cref="T:Relativity.Services.Files.FileRef"> File representation in Relativity</see> that contains name and GUID for the uploaded file.</returns>
        </member>
        <member name="T:Relativity.Services.FileField.IFileFieldModule">
            <summary>
            File field Module Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.KeyboardShortcuts.IKeyboardShortcutsModule">
            <summary>
            Keyboard Shortcuts Module Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.KeyboardShortcuts.IKeyboardShortcutsManager">
            <summary>
            IKeyboardShortcutsManager interface enables retrieval of Keyboard Shortcuts information.
            </summary>
        </member>
        <member name="T:Relativity.Services.KeyboardShortcuts.Models.KeyboardShortcutInformation">
            <summary>
            Represents keyboard shortcut information
            </summary>
        </member>
        <member name="P:Relativity.Services.KeyboardShortcuts.Models.KeyboardShortcutInformation.KeyboardShortcutID">
            <summary>
            ID of keyboard shortcut
            </summary>
        </member>
        <member name="P:Relativity.Services.KeyboardShortcuts.Models.KeyboardShortcutInformation.Type">
            <summary>
            Type of keyboard shortcut: System, Choice or Field
            </summary>
        </member>
        <member name="P:Relativity.Services.KeyboardShortcuts.Models.KeyboardShortcutInformation.ArtifactID">
            <summary>
            ID of associated Field or Choice
            </summary>
            <remarks>This property is only returned when Type is "Choice" or "Field"</remarks>  
        </member>
        <member name="P:Relativity.Services.KeyboardShortcuts.Models.KeyboardShortcutInformation.Action">
            <summary>
            Action type of shortcut
            </summary>
        </member>
        <member name="P:Relativity.Services.KeyboardShortcuts.Models.KeyboardShortcutInformation.KeyCombination">
            <summary>
            Representation of keyboard shortcut keys combination
            </summary>
        </member>
        <member name="T:Relativity.Services.KeyboardShortcuts.Models.KeyboardShortcutsRequest">
            <summary>
            Request object for GetKeyboardShortcuts
            </summary>
        </member>
        <member name="P:Relativity.Services.KeyboardShortcuts.Models.KeyboardShortcutsRequest.IncludeSystemShortcuts">
            <summary>
            Indicates whether or not system shortcuts to be excluded
            </summary>
        </member>
        <member name="P:Relativity.Services.KeyboardShortcuts.Models.KeyboardShortcutsRequest.IncludeChoiceShortcuts">
            <summary>
            Indicates whether or not choices shortcuts to be excluded
            </summary>
        </member>
        <member name="P:Relativity.Services.KeyboardShortcuts.Models.KeyboardShortcutsRequest.IncludeFieldShortcuts">
            <summary>
            Indicates whether or not fields shortcuts to be excluded
            </summary>
        </member>
        <member name="T:Relativity.Services.KeyboardShortcuts.Models.KeyCombination">
            <summary>
            Representation of keyboard shortcut key combination
            </summary>
        </member>
        <member name="M:Relativity.Services.KeyboardShortcuts.Models.KeyCombination.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Constructor of KeyCombination class
            </summary>
        </member>
        <member name="P:Relativity.Services.KeyboardShortcuts.Models.KeyCombination.Shift">
            <summary>
            Indicates whether or not Shift key should be pressed
            </summary>
        </member>
        <member name="P:Relativity.Services.KeyboardShortcuts.Models.KeyCombination.Ctrl">
            <summary>
            Indicates whether or not Ctrl key should be pressed
            </summary>
        </member>
        <member name="P:Relativity.Services.KeyboardShortcuts.Models.KeyCombination.Alt">
            <summary>
            Indicates whether or not Alt key should be pressed
            </summary>
        </member>
        <member name="P:Relativity.Services.KeyboardShortcuts.Models.KeyCombination.Key">
            <summary>
            Indicates number of additional key which should be pressed in combination
            </summary>
        </member>
        <member name="M:Relativity.Services.Serialization.Foundation.IObjectTypeRefHelper.DeserializeObjectTypeRef(System.Object)">
            <summary>
            Turn an object into an <see cref="T:Relativity.Services.Objects.DataContracts.ObjectTypeRef"/>.
            </summary>
            <param name="objectTypeRef">a serialized representation of an <see cref="T:Relativity.Services.Objects.DataContracts.ObjectTypeRef"/></param>
            <returns>An <see cref="T:Relativity.Services.Objects.DataContracts.ObjectTypeRef"/> based on the input parameter</returns>
        </member>
        <member name="T:Relativity.Services.Serialization.IChoiceRefHelper">
            <summary>
            An interface describing how to deserialize choices from untyped objects to ChoiceRef
            </summary>
        </member>
        <member name="M:Relativity.Services.Serialization.IChoiceRefHelper.DeserializeChoiceRef(System.Object)">
            <summary>
            Turn an object into a ChoiceRef.  An ArtifactID greater than 0 or at least 1 valid Guid are required or a ServiceSerializationException is thrown
            </summary>
            <param name="choiceObject">a serialized ChoiceRef</param>
            <returns>A ChoiceRef based on the input parameter</returns>
        </member>
        <member name="M:Relativity.Services.Serialization.IChoiceRefHelper.DeserializeChoiceRefEnumerable(System.Object)">
            <summary>
            Turn an object into an IEnumerable of ChoiceRefs.  If the object can't deserialize it will return an empty Enumerable.
            </summary>
            <param name="choiceListObjects">An untyped object that can be transformed into an IEnumerable of ChoiceRefs</param>
            <returns>An IEnumerable of ChoiceRefs</returns>
        </member>
        <member name="T:Relativity.Services.Serialization.ChoiceRefHelper">
            <summary>
            Utilities for deserializing ExpandoObjects into ChoiceRefs
            </summary>
        </member>
        <member name="T:Relativity.Services.Serialization.IDateHelper">
            <summary>
            An interface that can be used to deserialize date field values
            </summary>
        </member>
        <member name="M:Relativity.Services.Serialization.IDateHelper.DeserializeDate(System.Object)">
            <summary>
            Turn an object into a DateTime
            </summary>
            <param name="dateObject">A serialized DateTime</param>
            <returns>A DateTime based on the input parameter</returns>
        </member>
        <member name="M:Relativity.Services.Serialization.IDateHelper.IsValidDate(System.Object)">
            <summary>
            Implementations of this method should decide if an input parameter should be deserialized or throw a validation exception
            </summary>
            <param name="dateObject"></param>
            <returns>true if the dateObject should be deserialized</returns>
        </member>
        <member name="T:Relativity.Services.Serialization.DateHelper">
            <summary>
            Utilities for deserializing ExpandoObjects to DateTimes
            </summary>
        </member>
        <member name="T:Relativity.Services.Serialization.IFileRefHelper">
            <summary>
            An interface describing how to deserialize  files from untyped objects to FileRefs
            </summary>
        </member>
        <member name="M:Relativity.Services.Serialization.IFileRefHelper.DeserializeFileRef(System.Object)">
            <summary>
            Turn and object into a FileRef.  A FileId field is required, otherwise a ServiceSerializationException is thrown
            </summary>
            <param name="value">a serialized FielRef.</param>
            <returns>a FileRef based on the input parameter</returns>
        </member>
        <member name="T:Relativity.Services.Serialization.FileRefHelper">
            <summary>
            Utitlites for deserializeing ExpandoObjects into FileRefs
            </summary>
        </member>
        <member name="M:Relativity.Services.Serialization.IObjectTypeRefHelper.DeserializeObjectTypeRef(System.Object)">
            <summary>
            Turn an object into a ObjectTypeRef.
            </summary>
            <param name="objectTypeRef">a serialized ObjectTypeRef</param>
            <returns>A ObjectTypeRef based on the input parameter</returns>
        </member>
        <member name="T:Relativity.Services.Serialization.QuerySerializer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Relativity.Services.Serialization.QuerySerializer.TransformForSerialize(Relativity.Services.Query)">
            <summary>
            Transforms the model for serialization
            </summary>
            <param name="model">Model to transform</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Serialization.QuerySerializer.TransformForDeserialize(System.Object)">
            <summary>
            Transforms the data for deserialzation
            </summary>
            <param name="data">Data to transform</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Serialization.SortSerializer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Relativity.Services.Serialization.SortSerializer.TransformForSerialize(Relativity.Services.Sort)">
            <summary>
            Transforms the model for serialization
            </summary>
            <param name="model">Model to transform</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Serialization.SortSerializer.TransformForDeserialize(System.Object)">
            <summary>
            Transforms the data for deserialzation
            </summary>
            <param name="data">Data to transform</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Serialization.SortSerializer.GetSortEnum(System.Object)">
            <summary>
            Get a Sort Enum.
            </summary>
            <param name="value">Object Value</param>
            <returns>A Sort value.</returns>
        </member>
        <member name="T:Relativity.Services.Serialization.IUserRefHelper">
            <summary>
            An interface describing how to deserialize users from untyped objects to UserRefs
            </summary>
        </member>
        <member name="M:Relativity.Services.Serialization.IUserRefHelper.DeserializeUserRef(System.Object)">
            <summary>
            Turn an object into a UserRef.
            </summary>
            <param name="value">a serialized UserRef</param>
            <returns>a UserRef based on the input parameter</returns>
        </member>
        <member name="T:Relativity.Services.Serialization.UserRefHelper">
            <summary>
            Utilities for deserializing ExpandoObjects into UserRefs
            </summary>
        </member>
        <member name="T:Relativity.Services.PasswordBank.IPasswordBankManager">
            <summary>
            Exposes methods on the Password Bank Manager web service used for interacting with document passwords.
            </summary>
        </member>
        <member name="M:Relativity.Services.PasswordBank.IPasswordBankManager.GetAllPasswordsAsync(System.Int32)">
            <summary>
            Retrieves all document passwords stored in the password bank for a specific workspace.
            </summary>
            <remarks>
            The GetAllPasswordsAsync() method retrieves and parses the Passwords fields for all password entry types. Password entry types include Lotus Notes ,Â Email Encryption Certificates, and Passwords.
            </remarks>
            <param name="workspaceArtifactId">The workspace artifact identifier.</param>
            <returns>A list of document passwords stored in the password bank for a specific workspace.</returns>
        </member>
        <member name="T:Relativity.Services.PasswordBank.IPasswordBankModule">
            <summary>
            Password Bank Module Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.Permission.IPermissionManager">
            <summary>
            Permission Manager.
            </summary>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetAdminGroupSelectorAsync">
            <summary>
            Get Admin GroupSelector.
            </summary>
            <returns>GroupSelector</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.AddRemoveAdminGroupsAsync(Relativity.Services.Permission.GroupSelector)">
            <summary>
            Add and/or remove Admin groups.
            </summary>
            <param name="groupSelector">Collection of Groups to add and remove.</param>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetWorkspaceGroupSelectorAsync(System.Int32)">
            <summary>
            Get Workspace GroupSelector.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <returns>GroupSelector</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetWorkspaceAndWorkspaceAdminGroupSelectorAsync(System.Int32)">
            <summary>
            Get Workspace and Workspace Admin GroupSelector.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <returns>GroupSelector</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.AddRemoveWorkspaceGroupsAsync(System.Int32,Relativity.Services.Permission.GroupSelector)">
            <summary>
            Add and/or remove workspace groups.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="groupSelector">Collection of Groups to add and remove.</param>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetItemGroupSelectorAsync(System.Int32,System.Int32)">
            <summary>
            Get Item GroupSelector.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="artifactID">Item ArtifactID.</param>
            <returns>GroupSelector</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.AddRemoveItemGroupsAsync(System.Int32,System.Int32,Relativity.Services.Permission.GroupSelector)">
            <summary>
            Add and/or remove item groups.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="artifactID">Item ArtifactID.</param>
            <param name="groupSelector">Collection of Groups to add and remove.</param>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetAdminGroupPermissionsAsync(Relativity.Services.Group.GroupRef)">
            <summary>
            Get Admin Group Permissions.
            </summary>
            <param name="group">Group.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.SetAdminGroupPermissionsAsync(Relativity.Services.Permission.GroupPermissions)">
            <summary>
            Set Admin Group Permissions.
            </summary>
            <param name="groupPermissions">Group Permissions.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetWorkspaceGroupPermissionsAsync(System.Int32,Relativity.Services.Group.GroupRef)">
            <summary>
            Get Workspace Group Permissions.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="group">Group.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.SetWorkspaceGroupPermissionsAsync(System.Int32,Relativity.Services.Permission.GroupPermissions)">
            <summary>
            Set Workspace Group Permissions.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="groupPermissions">Group Permissions.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetItemGroupPermissionsAsync(System.Int32,System.Int32,Relativity.Services.Group.GroupRef)">
            <summary>
            Get Item Group Permissions.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="artifactID">Item ArtifactID.</param>
            <param name="group">Group.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.SetItemGroupPermissionsAsync(System.Int32,Relativity.Services.Permission.GroupPermissions)">
            <summary>
            Set Item Group Permissions.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="groupPermissions">Group Permissions.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetItemLevelSecurityAsync(System.Int32,System.Int32)">
            <summary>
            Get Item Level Security settings for a given ArtifactID.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="artifactID">Item ArtifactID.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetItemLevelSecurityListAsync(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Returns a dictionary of item-level security settings objects for the specified Relativity artifacts. 
            Inputs include the workspace ArtifactID and a collection of ArtifactIDs. 
            For admin artifacts, specify -1 as the workspace ArtifactID.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID</param>
            <param name="artifactIDs">Collection of ArtifactIDs</param>
            <returns>A collection of ItemLevelSecurity with current value for each specified artifact.</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.SetItemLevelSecurityAsync(System.Int32,Relativity.Services.Permission.ItemLevelSecurity)">
            <summary>
            Set Item Level Security settings for a given ArtifactID.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="itemLevelSecurity">ItemLevelSecurity.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetAdminGroupUsersAsync(Relativity.Services.Group.GroupRef)">
            <summary>
            Get Admin Group Users.
            </summary>
            <param name="group">Group.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetWorkspaceGroupUsersAsync(System.Int32,Relativity.Services.Group.GroupRef)">
            <summary>
            Get Workspace Group Users.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="group">Workspace or Admin group ref.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetWorkspaceGroupUsersByWorkspaceGroupAsync(System.Int32,Relativity.Services.Group.GroupRef)">
            <summary>
            Get Workspace Group Users.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="workspaceGroup">Specific workspace group ref.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.IsUserInWorkspaceGroupAsync(System.Int32,Relativity.Services.User.UserRef,Relativity.Services.Group.GroupRef)">
            <summary>
            Determines if the given user is a member of the given workspace group
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="user">User</param>
            <param name="group">Group</param>
            <returns>Returns true if user belongs to the workspace group, otherwise returns false </returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetItemGroupUsersAsync(System.Int32,System.Int32,Relativity.Services.Group.GroupRef)">
            <summary>
            Get Item Group Users.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            /// <param name="artifactID">Item ArtifactID</param>
            <param name="group">Group.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.CreateSingleAsync(System.Int32,Relativity.Services.Permission.Permission)">
            <summary>
            Asynchronously create a new permission.
            </summary>
            <param name="workspaceArtifactID">Workspace the new Permission belongs to.</param>
            <param name="permissionDTO">Permission DTO.</param>
            <returns>ID of the new Permission.</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.QueryAsync(System.Int32,Relativity.Services.Query)">
            <summary>
            Asynchronously queries for Permission.
            </summary>
            <param name="workspaceArtifactID">Workspace the Permission is under.</param>
            <param name="query">Query.</param>
            <returns>A PermissionQueryResultSet.</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.QueryAsync(System.Int32,Relativity.Services.Query,System.Int32)">
            <summary>
            Asynchronously queries for Permission.
            </summary>
            <param name="workspaceArtifactID">Workspace the Permission is under.</param>
            <param name="query">Query.</param>
            <param name="length">Number of results to return.</param>
            <returns>A PermissionQueryResultSet.</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.QuerySubsetAsync(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Asynchronously queries for a subset of a collection of Permission instances.
            </summary>
            <param name="workspaceArtifactID">Workspace the Permission is under.</param>
            <param name="queryToken">Search Query Token.</param>
            <param name="start">Starting index for this query.</param>
            <param name="length">Number of results to return.</param>
            <returns>A PermissionQueryResultSet.</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.ReadSingleAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously read a single Permission instance.
            </summary>
            <param name="workspaceArtifactID">Workspace the search Permission is under.</param>
            <param name="permissionID">ID of the Permission to Read.</param>
            <returns>A Permission</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.DeleteSingleAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously delets a Permission.
            </summary>
            <param name="workspaceArtifactID">Workspace the search Permission is under.</param>
            <param name="permissionID">ID of the Permission to delete.</param>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.UpdateSingleAsync(System.Int32,Relativity.Services.Permission.Permission)">
            <summary>
            Asynchronously updates a Permission.
            </summary>
            <param name="workspaceArtifactID">Workspace the search Permission is under.</param>
            <param name="permissionDTO">Permission DTO to update.</param>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetPermissionSelectedAsync(System.Int32,System.Collections.Generic.List{Relativity.Services.Permission.PermissionRef})">
            <summary>
            Indicates a given permission is selected. (ArtifactTypeID)
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="permissions">Collection of Permission references.</param>
            <returns>A collection of permissions and the current value.</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetPermissionSelectedAsync(System.Int32,System.Collections.Generic.List{Relativity.Services.Permission.PermissionRef},System.Int32)">
            <summary>
            Indicates a given permission is selected. (ItemLevelSecurity on an ArtifactID of a given permission ArtifactTypeID)
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="permissions">Collection of Permission references.</param>
            <param name="artifactID">Artifact ID.</param>
            <returns>A collection of permissions and the current value.</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetPermissionSelectedListAsync(System.Int32,System.Collections.Generic.List{Relativity.Services.Permission.PermissionRef},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Returns the current userâ€™s permission to the specified relativity artifacts as a dictionary that maps the ArtifactID to the permissions values. 
            Inputs include the workspace ArtifactID, a collection of PermissionRef objects, and a collection of ArtifactIDs. 
            To return admin-level artifact permissions, specify -1 as the workspace ArtifactID.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="permissions">Collection of Permission references.</param>
            <param name="artifactIDs">Collection of Artifact IDs.</param>
            <returns>A collection of permissions with current value for each specified artifact.</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetPermissionSelectedForGroupAsync(System.Int32,System.Collections.Generic.List{Relativity.Services.Permission.PermissionRef},Relativity.Services.Group.GroupRef)">
            <summary>
            Indicates a given permission is selected. (ArtifactTypeID for a given Group)
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="permissions">Collection of Permission references.</param>
            <param name="group">Group DTO.</param>
            <returns>A collection of permissions and the current value.</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetAdminOperationPermissionSelectedListAsync(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Indicates if a given admin permission is selected.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="permissionIds">Collection of Permission identifiers.</param>
            <returns>A collection of permissions and if it is selected.</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetPermissionSelectedForGroupAsync(System.Int32,System.Collections.Generic.List{Relativity.Services.Permission.PermissionRef},Relativity.Services.Group.GroupRef,System.Int32)">
            <summary>
            Indicates a given permission is selected. (ItemLevelSecurity on an ArtifactID of a given permission ArtifactTypeID for a given Group)
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="permissions">Collection of Permission references.</param>
            <param name="artifactID">Artifact ID.</param>
            <param name="group">Group DTO.</param>
            <returns>A collection of permissions and the current value.</returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.SetPermissionSelectedForGroupAsync(System.Int32,System.Collections.Generic.List{Relativity.Services.Permission.PermissionValue},Relativity.Services.Group.GroupRef)">
            <summary>
            Set the Selected value for a given group permission.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="permissionValues">A collection of PermissionValues with the value to be set for the permission.</param>
            <param name="group">Group DTO.</param>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.SetPermissionSelectedForGroupAsync(System.Int32,System.Collections.Generic.List{Relativity.Services.Permission.PermissionValue},Relativity.Services.Group.GroupRef,System.Int32)">
            <summary>
            Set the Selected value for a given group permission.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="permissionValues">A collection of PermissionValues with the value to be set for the permission.</param>
            <param name="group">Group DTO.</param>
            <param name="artifactID">Artifact ID.</param>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetAdminGroupTabVisibilityAsync(System.Int32)">
            <summary>
            Returns the tabs visibility state for an admin group.
            </summary>
            <param name="groupArtifactID">Group Artifact ID.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.SetAdminGroupTabVisibilityAsync(Relativity.Services.Permission.GroupTabVisibility)">
            <summary>
            Set the tabs visibility state for an admin group.
            </summary>
            <param name="tabVisibility">The tab visibility state.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.GetWorkspaceGroupTabVisibilityAsync(System.Int32,System.Int32)">
            <summary>
            Returns the tabs visibility state for a group in a workspace.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="groupArtifactID">Group ArtifactID.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Permission.IPermissionManager.SetWorkspaceGroupTabVisibilityAsync(System.Int32,Relativity.Services.Permission.GroupTabVisibility)">
            <summary>
            Set the tabs visibility state for a group in a workspace.
            </summary>
            <param name="workspaceArtifactID">Workspace ArtifactID.</param>
            <param name="tabVisibility">The tab visibility state.</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Permission.IPermissionModule">
            <summary>
            Permission Module Interface
            </summary>
        </member>
        <member name="T:Relativity.Services.PivotManager.Models.PivotExecutionFailureException">
            <summary>
            Represents exceptions that occur when a Pivot query fails during execution.
            </summary>
        </member>
        <member name="M:Relativity.Services.PivotManager.Models.PivotExecutionFailureException.#ctor">
            <summary>
            Initializes a new instance of the PivotExecutionFailureException class.
            </summary>
        </member>
        <member name="M:Relativity.Services.PivotManager.Models.PivotExecutionFailureException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PivotExecutionFailureException class with an error message that describes the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
        </member>
        <member name="M:Relativity.Services.PivotManager.Models.PivotExecutionFailureException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the PivotExecutionFailureException class with a message that describes the exception and a reference to the inner exception that caused the exception.
            </summary>
            <param name="message">Gets a message that describes the current exception.</param>
            <param name="innerException">Gets the Exception instance that caused the current exception.</param>
        </member>
        <member name="M:Relativity.Services.PivotManager.Models.PivotExecutionFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the PivotExecutionFailureException class with serialized data.
            </summary>
            <param name="info">Gets serialized object data about the current exception.</param>
            <param name="context">Gets information about the source or destination of the serialized stream and provides an additional caller-defined context.</param>
        </member>
        <member name="T:Relativity.Services.PivotManager.Models.PivotExecutionValidationException">
            <summary>
            Represents exceptions that occur when a request to run a Pivot query contains invalid parameters.
            </summary>
        </member>
        <member name="M:Relativity.Services.PivotManager.Models.PivotExecutionValidationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PivotExecutionValidationException class with an error message that describes the exception.
            </summary>
            <param name="reasonForInvalidation">Provides information about why the current exception occurred.</param>
        </member>
        <member name="T:Relativity.Services.ResourceServer.Models.Interfaces.IHaveBcpPath">
            <summary>
            Represents a request for a resource server that has BcpPath field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ResourceServer.Models.Interfaces.IHaveBcpPath.BcpPath">
            <summary>
            Gets or sets BCP of the distributed sql server.
            </summary>
        </member>
        <member name="T:Relativity.Services.ResourceServer.Models.Interfaces.IHaveCurrentUserCount">
            <summary>
            Represents a resource server model that has CurrentUserCount field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ResourceServer.Models.Interfaces.IHaveCurrentUserCount.CurrentUserCount">
            <summary>
            Gets or sets the amount of users that are currently being directed to the server.
            </summary>
        </member>
        <member name="T:Relativity.Services.ResourceServer.Models.Interfaces.IHaveDisplayableFileAccessCredentials">
            <summary>
            Represents a request for a resource server that has displayable FileAccessCredentials field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ResourceServer.Models.Interfaces.IHaveDisplayableFileAccessCredentials.FileAccessCredentials">
            <summary>
            Gets or sets information about file access credentials object.
            </summary>
        </member>
        <member name="T:Relativity.Services.ResourceServer.Models.Interfaces.IHaveDisplayableStatus">
            <summary>
            Represents a resource server model that has displayable Status field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ResourceServer.Models.Interfaces.IHaveDisplayableStatus.Status">
            <summary>
            Gets or sets the status of the resource server.
            </summary>
        </member>
        <member name="T:Relativity.Services.ResourceServer.Models.Interfaces.IHaveFailedRedirectionAttemptCount">
            <summary>
            Represents a request for a resource server that has FailedRedirectionAttemptCount field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ResourceServer.Models.Interfaces.IHaveFailedRedirectionAttemptCount.FailedRedirectionAttemptCount">
            <summary>
            Gets or sets amount of failed redirection attempts on the server.
            </summary>
        </member>
        <member name="T:Relativity.Services.ResourceServer.Models.Interfaces.IHaveFileAccessCredentials">
            <summary>
            Represents a request for a resource server that has FileAccessCredentials field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ResourceServer.Models.Interfaces.IHaveFileAccessCredentials.FileAccessCredentials">
            <summary>
            Gets or sets information about file access credentials object.
            </summary>
        </member>
        <member name="T:Relativity.Services.ResourceServer.Models.Interfaces.IHaveFriendlyName">
            <summary>
            Represents a resource server model that has Name field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ResourceServer.Models.Interfaces.IHaveFriendlyName.FriendlyName">
            <summary>
            Gets or sets the friendly name of the resource server.
            </summary>
        </member>
        <member name="T:Relativity.Services.ResourceServer.Models.Interfaces.IHaveIsUserLoadBalancingEnabled">
            <summary>
            Represents a request for a resource server that has IsUserLoadBalancingEnabled field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ResourceServer.Models.Interfaces.IHaveIsUserLoadBalancingEnabled.IsUserLoadBalancingEnabled">
            <summary>
            Gets or sets a boolean value representing whether user load balancing is enabled on the server.
            </summary>
        </member>
        <member name="T:Relativity.Services.ResourceServer.Models.Interfaces.IHaveIsVisible">
            <summary>
            Represents a request for a resource server that has IsVisible field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ResourceServer.Models.Interfaces.IHaveIsVisible.IsVisible">
            <summary>
            Gets or sets a boolean value representing whether this server should be available for selection while creating a workspace.
            </summary>
        </member>
        <member name="T:Relativity.Services.ResourceServer.Models.Interfaces.IHaveLastRedirectFailedOn">
            <summary>
            Represents a resource server model that has LastRedirectFailedOn field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ResourceServer.Models.Interfaces.IHaveLastRedirectFailedOn.LastRedirectFailedOn">
            <summary>
            Gets or sets the date and time of last failed redirect on the server.
            </summary>
        </member>
        <member name="T:Relativity.Services.ResourceServer.Models.Interfaces.IHaveName">
            <summary>
            Represents a resource server model that has Name field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ResourceServer.Models.Interfaces.IHaveName.Name">
            <summary>
            Gets or sets the name of the resource server.
            </summary>
        </member>
        <member name="T:Relativity.Services.ResourceServer.Models.Interfaces.IHaveStatus">
            <summary>
            Represents a resource server model that has Status field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ResourceServer.Models.Interfaces.IHaveStatus.Status">
            <summary>
            Gets or sets the status of the resource server.
            </summary>
        </member>
        <member name="T:Relativity.Services.ResourceServer.Models.Interfaces.IHaveTemporaryDirectory">
            <summary>
            Represents a resource server model that has Temporary Directory field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ResourceServer.Models.Interfaces.IHaveTemporaryDirectory.TemporaryDirectory">
            <summary>
            Gets or sets the temporary directory of the resource server.
            </summary>
        </member>
        <member name="T:Relativity.Services.ResourceServer.Models.Interfaces.IHaveType">
            <summary>
            Represents a request for a resource server that has Type field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ResourceServer.Models.Interfaces.IHaveType.Type">
            <summary>
            Gets or sets type of the server.
            </summary>
        </member>
        <member name="T:Relativity.Services.ResourceServer.Models.Interfaces.IHaveUncPath">
            <summary>
            Represents a request for a resource server that has UncPath field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ResourceServer.Models.Interfaces.IHaveUncPath.UncPath">
            <summary>
            Gets or sets UNC path of the server.
            </summary>
        </member>
        <member name="T:Relativity.Services.ResourceServer.Models.Interfaces.IHaveUrl">
            <summary>
            Represents a request for a resource server that has Url field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ResourceServer.Models.Interfaces.IHaveUrl.Url">
            <summary>
            Gets or sets URL of the server.
            </summary>
        </member>
        <member name="T:Relativity.Services.ResourceServer.Models.Interfaces.IHaveVersion">
            <summary>
            Represents a resource server model that has Version field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ResourceServer.Models.Interfaces.IHaveVersion.Version">
            <summary>
            Gets or sets version of the resource server.
            </summary>
        </member>
        <member name="T:Relativity.Services.ResourceServer.Models.Interfaces.IHaveWindowsServiceStatus">
            <summary>
            Represents a resource server model that has WindowsServiceStatus field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ResourceServer.Models.Interfaces.IHaveWindowsServiceStatus.WindowsServiceStatus">
            <summary>
            Gets or sets status of Windows service this server is hosting.
            </summary>
        </member>
        <member name="T:Relativity.Services.ResourceServer.Models.Interfaces.IHaveWorkspaceUpgradeLimit">
            <summary>
            Represents a request for a resource server that has WorkspaceUpgradeLimit field.
            </summary>
        </member>
        <member name="P:Relativity.Services.ResourceServer.Models.Interfaces.IHaveWorkspaceUpgradeLimit.WorkspaceUpgradeLimit">
            <summary>
            Gets or sets workspace upgrade limit.
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.Http.Exceptions.DuplicateSubjectException">
            <summary>
            Used to indicate an attempt to save a subject that is already in use by an authentication provider.
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.Http.Exceptions.DuplicateSubjectException.#ctor">
            <summary>
            Used to indicate an attempt to save a subject that is already in use by an authentication provider.
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.Http.Exceptions.DuplicateSubjectException.#ctor(System.String)">
            <summary>
            Used to indicate an attempt to save a subject that is already in use by an authentication provider.
            </summary>
            <param name="duplicateSubject">A comma delimited list of subjects</param>
        </member>
        <member name="M:Relativity.Services.Security.Http.Exceptions.DuplicateSubjectException.#ctor(System.String,System.Exception)">
            <summary>
            Used to indicate an attempt to save a subject that is already in use by an authentication provider.
            </summary>
            <param name="duplicateSubject">A comma delimited list of subjects</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Relativity.Services.Security.Http.Exceptions.DuplicateSubjectException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Used to indicate an attempt to save a subject that is already in use by an authentication provider.
            </summary>
            <param name="info">the serialization info</param>
            <param name="context">The streaming context</param>
        </member>
        <member name="P:Relativity.Services.Security.Http.Exceptions.DuplicateSubjectException.Message">
            <summary>
            The message indicating which subject is the problem.
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.IAuthProfileManager">
            <summary>
            Service for managing Authentication Profiles
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.IAuthProfileManager.GetGlobalProfileAsync">
            <summary>
            Read the Global Auth Profile from the system
            </summary>
            <returns>An Auth Profile</returns>
        </member>
        <member name="M:Relativity.Services.Security.IAuthProfileManager.SaveProfileAsync(Relativity.Services.Security.Models.AuthProfile)">
            <summary>
            Save an Auth Profile
            </summary>
            <param name="profile">The profile to save</param>
        </member>
        <member name="T:Relativity.Services.Security.IAuthProviderTypeManager">
            <summary>
            Web services for interacting with Authentication Provider Types
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.IAuthProviderTypeManager.ReadAllAsync">
            <summary>
            Retrieves all Provider Types
            </summary>
            <returns>A list of Provider Types</returns>
        </member>
        <member name="M:Relativity.Services.Security.IAuthProviderTypeManager.ReadAsync(System.String)">
            <summary>
            Retrieves a Provider Type
            </summary>
            <param name="name">The name of the Provider Type</param>
            <returns>The Provider Type</returns>
        </member>
        <member name="M:Relativity.Services.Security.IAuthProviderTypeManager.UpdateAsync(System.String,System.Boolean)">
            <summary>
            Updates a Provider Type, allowing you to enable or disable Provider Types
            in the environment.  Disabling a Provider Type prevents all users from
            using that protocol during login.
            </summary>
            <param name="name">The name of the Provider Type</param>
            <param name="isEnabled">Whether the provider is disabled or not</param>
        </member>
        <member name="T:Relativity.Services.Security.IFederatedInstanceManager">
            <summary>
            Connect this local Relativity instance to one or more remote Relativity instances for the
            purposes of navigation and data exchange.
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.IFederatedInstanceManager.ReadAllAsync">
            <summary>
            Read all Federated Instances
            </summary>
            <returns>A collection of all Federated Instances the caller has permission to see</returns>
        </member>
        <member name="M:Relativity.Services.Security.IFederatedInstanceManager.ReadAsync(System.String)">
            <summary>
            Read a Federated Instance
            </summary>
            <param name="name">The name of the Federated Instance to read</param>
            <returns>The request Federated Instance</returns>
        </member>
        <member name="M:Relativity.Services.Security.IFederatedInstanceManager.CreateAsync(Relativity.Services.Security.Models.FederatedInstance)">
            <summary>
            Create a new Federated Instance
            </summary>
            <param name="instance">The Federated Instance to create</param>
        </member>
        <member name="M:Relativity.Services.Security.IFederatedInstanceManager.UpdateAsync(Relativity.Services.Security.Models.FederatedInstance)">
            <summary>
            Update an existing Federated Instance
            </summary>
            <param name="instance">The instance to update</param>
        </member>
        <member name="M:Relativity.Services.Security.IFederatedInstanceManager.DeleteAsync(System.String)">
            <summary>
            Remove a Federated Instance from this Relativity instance
            </summary>
            <param name="name">The name of the Federated Instance to delete</param>
        </member>
        <member name="M:Relativity.Services.Security.IHomeMenuManager.GetHomeMenuAsync">
            <summary>
            Retrieves the data model for the Relativity Home Menu
            </summary>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Security.ILoginProfileManager">
            <summary>
            Service for managing login methods that are configured for individual users.
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.ILoginProfileManager.GetLoginProfileAsync(System.Int32)">
            <summary>
            Get a Login Method Profile for a given user.
            </summary>
            <param name="userId">The user id</param>
            <returns>The requested profile</returns>
        </member>
        <member name="M:Relativity.Services.Security.ILoginProfileManager.SaveLoginProfileAsync(Relativity.Services.Security.Models.LoginProfile)">
            <summary>
            Save a Login Method profile.
            </summary>
            <param name="profile">The profile to save</param>
        </member>
        <member name="M:Relativity.Services.Security.ILoginProfileManager.SetPasswordAsync(System.Int32,System.String)">
            <summary>
            Explicitly set a user's password.  Note that admins are not allowed to reset 
            Relativity users' passwords by default. (see Remarks for more information)
            </summary>
            <remarks>
            By default a user can only set their own password in Relativity.  Administrators
            are not allowed to set other users' passwords for security reasons.  Relativity 
            admins are encouraged to use the Invitation Email workflow instead of
            explicitly managing user passwords.
            
            If desired, Relativity can be configured to allow administrators to directly
            manage user passwords.  See the Relativity documentation for more information.
            </remarks>
            <param name="userId">The user id</param>
            <param name="password">The new password for the user.  Passwords must meet 
            the password complexity criteria configured for this environment.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Security.ILoginProfileManager.SendInvitationAsync(System.Int32)">
            <summary>
            Sends an Invitation Workflow e-mail to the specified user.
            </summary>
            <param name="userId">The user id</param>
        </member>
        <member name="M:Relativity.Services.Security.ILoginProfileManager.SendBulkInvitationAsync(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Sends an Invitation Workflow e-mail to each specified user.
            </summary>
            <param name="userIdList">The list of users</param>
            <returns>list of Invitation errors</returns>
        </member>
        <member name="M:Relativity.Services.Security.ILoginProfileManager.VerifyBulkInvitationAsync(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Verifies an Invitation Workflow without sending an email.
            </summary>
            <param name="userIdList">The list of users</param>
            <returns>list of Invitation errors</returns>
        </member>
        <member name="T:Relativity.Services.Security.IOAuth2ClientManager">
            <summary>
            Service for managing OAuth2 Clients
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.IOAuth2ClientManager.ReadAllAsync">
            <summary>
            Read all OAuth2 Clients
            </summary>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Security.IOAuth2ClientManager.ReadAsync(System.String)">
            <summary>
            Read an OAuth2 Client by Id.
            </summary>
            <param name="id">The Id of the OAuth2 Client to read.</param>
            <returns>The requested profile</returns>
        </member>
        <member name="M:Relativity.Services.Security.IOAuth2ClientManager.CreateAsync(System.String,Relativity.Services.Security.Models.OAuth2Flow,System.Collections.Generic.IEnumerable{System.Uri},System.Nullable{System.Int32})">
            <summary>
            Create a new OAuth2 Client.
            </summary>
            <param name="name">The Client's Name.</param>
            <param name="flow">The OAuth2 Flow for the Client.</param>
            <param name="redirectUris">The redirect Uris for the Client.</param>
            <param name="contextUser">The user that will be used in the context of this Client.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Security.IOAuth2ClientManager.CreateAsync(Relativity.Services.Security.Models.OAuth2Client)">
            <summary>
            Create a new OAuth2 Client
            </summary>
            <param name="newClient">the new Client to create</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Security.IOAuth2ClientManager.SaveAsync(Relativity.Services.Security.Models.OAuth2Client)">
            <summary>
            Save an OAuth2 Client.
            </summary>
            <param name="client">The OAuth2 Client to save.</param>
        </member>
        <member name="M:Relativity.Services.Security.IOAuth2ClientManager.DeleteAsync(System.String)">
            <summary>
            Delete an OAuth2 Client.
            </summary>
            <param name="id">The Id of the OAuth2 Client to delete.</param>
        </member>
        <member name="M:Relativity.Services.Security.IOAuth2ClientManager.RegenerateSecretAsync(System.String)">
            <summary>
            Generate a new secret for an OAuth2 Client.  All previous secrets are immediately invalidated.
            </summary>
            <param name="id">The Id of the OAuth2 Client.</param>
            <returns>The new secret.</returns>
        </member>
        <member name="P:Relativity.Services.Security.Models.ActiveDirectoryMethod.Account">
            <summary>
            The name of the user account in Active Directory.  Can be
            specified as a SAM Account (domain\username) or as a UPN
            (user@fully-qualified-domain)
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.ActiveDirectoryMethod.IsEnabled">
            <summary>
            Whether the login method is enabled
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.ActiveDirectoryProvider.Name">
            <summary>
            A name for this provider; must be unique within the profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.ActiveDirectoryProvider.IsEnabled">
            <summary>
            Whether this provider is enabled.
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.Models.AuthProfile">
            <summary>
            Represents an authentication profile within Relativity
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.AuthProfile.Id">
            <summary>
            The Id of the profile
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.AuthProfile.SiteUri">
            <summary>
            The uri to the Relativity instance.  This property is required if you are using
            an external identity provider (OpenId Connect, WS-Federation or SAML).
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.AuthProfile.IsGlobal">
            <summary>
            Whether this the Global auth profile for Relativity
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.AuthProfile.Description">
            <summary>
            A description for the profile
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.AuthProfile.Password">
            <summary>
            The Password Provider for this profile.  A null value means that password authentication is disabled for this profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.AuthProfile.IntegratedAuthentication">
            <summary>
            The Integrated Authentication Provider for this profile.  A null value means that Windows authentication is disabled for this profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.AuthProfile.ActiveDirectory">
            <summary>
            The Active Directory Provider for this profile.  A null value means that Active Directory authetnication is disabled for this profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.AuthProfile.ClientCertificate">
            <summary>
            The Client Certificate Provider for this profile.  A null value means that client certificate authentication is disabled for this profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.AuthProfile.RSA">
            <summary>
            The RSA Provider for this profile.  A null value means that client certificate authentication is disabled for this profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.AuthProfile.OpenIdConnectProviders">
            <summary>
            The list of OpenId Connect providers for this profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.AuthProfile.SAML2Providers">
            <summary>
            The list of SAML2P providers for this profile.
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.Models.BulkInvitationResponse">
            <summary>
            Response object representing the result of a bulk user invitation call.
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.Models.BulkInvitationResponse.#ctor(System.Boolean,System.Collections.Generic.List{Relativity.Services.Security.Models.UserInviteError})">
            <summary>
            Create a new <see cref="T:Relativity.Services.Security.Models.BulkInvitationResponse"/>.
            </summary>
            <param name="success"></param>
            <param name="errors"></param>
        </member>
        <member name="P:Relativity.Services.Security.Models.BulkInvitationResponse.Success">
            <summary>
             True if the entire bulk invitation succeeded, false otherwise.
             </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.BulkInvitationResponse.Errors">
            <summary>
            A list of failed invitation emails per user and corresponding errors.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.ClientCertificateMethod.Name">
            <summary>
            A name of the matching certificate provider from the
            corresponding Auth Profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.ClientCertificateMethod.Subject">
            <summary>
            The value to match against in the Common Name (CN) or 
            Subject Alternate Name (SAN) of the client certificate.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.ClientCertificateMethod.IsEnabled">
            <summary>
            Whether the login method is enabled
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.ClientCertificateProvider.Name">
            <summary>
            A name for this provider; must be unique within the profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.ClientCertificateProvider.Description">
            <summary>
            A description for this provider.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.ClientCertificateProvider.IsEnabled">
            <summary>
            Whether this provider is enabled.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.ClientCertificateProvider.DisplayOnLoginPage">
            <summary>
            Whether a button for this provider is displayed on the
            Relativity login page.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.ClientCertificateProvider.Caption">
            <summary>
            The caption text to be used for the button.
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.Models.FederatedInstance">
            <summary>
            A remote instance of Relativity that is connected to this local instance
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.FederatedInstance.Name">
            <summary>
            The unique name for the Federated Instance
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.FederatedInstance.InstanceUrl">
            <summary>
            The single sign-on url to the Federated Instance
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.Models.HomeMenuModel">
            <summary>
            The data model for the Home Menu
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.HomeMenuModel.Instances">
            <summary>
            The list of instance destinations
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.Models.HomeMenuModel.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.Models.InstanceDestination">
            <summary>
            An instance that the user can navigate to
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.InstanceDestination.Name">
            <summary>
            The instance name
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.InstanceDestination.IsHome">
            <summary>
            Is this the current instance?
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.InstanceDestination.InstanceUri">
            <summary>
            The single sign-on uri to the destination instance
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.IntegratedAuthenticationMethod.Account">
            <summary>
            The name of the user account in Active Directory.  Can be
            specified as a SAM Account (domain\username) or as a UPN
            (user@fully-qualified-domain)
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.IntegratedAuthenticationMethod.IsEnabled">
            <summary>
            Whether the login method is enabled
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.IntegratedAuthenticationProvider.Name">
            <summary>
            A name for this provider; must be unique within the profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.IntegratedAuthenticationProvider.IsEnabled">
            <summary>
            Whether this provider is enabled.
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.Models.LoginProfile">
            <summary>
            A collection of login methods that are configured for a given user
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.LoginProfile.UserId">
            <summary>
            The User Id for this profile
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.LoginProfile.Password">
            <summary>
            The Password Method for this profile.  A null value means that password authentication is disabled for this profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.LoginProfile.IntegratedAuthentication">
            <summary>
            The Integrated Authentication Method for this profile.  A null value means that Windows authentication is disabled for this profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.LoginProfile.ActiveDirectory">
            <summary>
            The Active Directory Method for this profile.  A null value means that Active Directory authetnication is disabled for this profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.LoginProfile.ClientCertificate">
            <summary>
            The Client Certificate Method for this profile.  A null value means that client certificate authentication is disabled for this profile..
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.LoginProfile.RSA">
            <summary>
            The RSA Method for this profile.  A null value means that client certificate authentication is disabled for this profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.LoginProfile.OpenIdConnectMethods">
            <summary>
            The OpenId Connect external login methods for the user.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.LoginProfile.SAML2Methods">
            <summary>
            The SAML2P external login methods for the user.
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.Models.LoginProfileSetupResponse">
            <summary>
            Object representing the result of validating whether a user's 
            login profile allows them to authenticate with Relativity.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.LoginProfileSetupResponse.Success">
            <summary>
            True if user has a method to authenticate with Relativity, false otherwise.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.LoginProfileSetupResponse.Errors">
            <summary>
            On failure, set to a list of messages explaining why the failure occurred.
            Set to the empty list otherwise.
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.Models.LoginProfileSetupResponse.Successful">
            <summary>
            Create a successful <see cref="T:Relativity.Services.Security.Models.LoginProfileSetupResponse"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Security.Models.LoginProfileSetupResponse.Failed(System.Collections.Generic.List{System.String})">
            <summary>
            Create a failed <see cref="T:Relativity.Services.Security.Models.LoginProfileSetupResponse"/> with the given error messages.
            </summary>
            <param name="errors">Error messages to set on the response.</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.Services.Security.Models.OAuth2Client">
            <summary>
            An OAuth2 Client that allows access to the environment
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.Models.OAuth2Client.#ctor">
            <summary>
            Constructor for the OAuth2 Client
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OAuth2Client.AccessTokenLifetimeInMinutes">
            <summary>
            How long the access token is valid in seconds
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OAuth2Client.Name">
            <summary>
            Unique name for the OAuth2 Client
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OAuth2Client.Description">
            <summary>
            Description for the OAuth2 Client
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OAuth2Client.Enabled">
            <summary>
            Determines if the client is allowed to be used for access
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OAuth2Client.Flow">
            <summary>
            The flow (grant type) supported by the OAuth2 Client
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OAuth2Client.Id">
            <summary>
            The Id of the OAuth2 Client
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OAuth2Client.IsSystem">
            <summary>
            Determines if the client is backend client and not shown on the UI
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OAuth2Client.RedirectUris">
            <summary>
            List of the Uris that the server will redirect to
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OAuth2Client.Secret">
            <summary>
            The current secret for the client
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OAuth2Client.Scopes">
            <summary>
            List of Scopes this Client is allowed to request
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OAuth2Client.ContextUser">
            <summary>
            The user that will be used for permissions and auditing
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.Models.OAuth2Client.Equals(System.Object)">
            <summary>
            Equals method for the OAuth2 Client
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.Models.OAuth2Client.GetHashCode">
            <summary>
            Equals method for the OAuth2 Client
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.Models.OAuth2Flow">
            <summary>
            Represents an OAuth2 flow.
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.Models.OpenIdConnectMethod">
            <summary>
            Represents a login method that is configured for a user
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OpenIdConnectMethod.ProviderName">
            <summary>
            The name of the OpenId Connect provider this login method belongs to
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OpenIdConnectMethod.Subject">
            <summary>
            The "subject" for the method - typically the username
            that is associated with this user
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OpenIdConnectMethod.IsEnabled">
            <summary>
            Whether the login method is enabled
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.Models.OpenIDConnectProvider">
            <summary>
            Represents an OpenId Connect external identity provider.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OpenIDConnectProvider.Name">
            <summary>
            A name for this provider; must be unique within the profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OpenIDConnectProvider.Description">
            <summary>
            A description for this provider.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OpenIDConnectProvider.IsEnabled">
            <summary>
            Whether this provider is enabled.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OpenIDConnectProvider.DisplayOnLoginPage">
            <summary>
            Whether a button for this provider is displayed on the
            Relativity login page.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OpenIDConnectProvider.Caption">
            <summary>
            The caption text to be used for the button.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OpenIDConnectProvider.ClientId">
            <summary>
            The client identifier registered at the provider.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OpenIDConnectProvider.ClientSecret">
            <summary>
            The client secret registered at the provider. Used only in code flow.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OpenIDConnectProvider.Authority">
            <summary>
            The uri to the external OpenID Connect provider.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OpenIDConnectProvider.Flow">
            <summary>
            The authentication flow used to communicate with the external provider.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OpenIDConnectProvider.RedirectUri">
            <summary>
            The redirect uri that needs to get set at the identity provider.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OpenIDConnectProvider.SubjectClaimType">
            <summary>
            The claim type to use for getting the user's subject mapping. Defaults to "sub".
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.OpenIDConnectProvider.Scopes">
            <summary>
            The list of OpenID Connect scopes to request. 'openid' is a default scope that is included in this list of scopes.
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.Models.OpenIDConnectProvider.#ctor">
            <summary>
            Represents an OpenId Connect external identity provider.
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.Models.OpenIDConnectProvider.AddScope(System.String)">
            <summary>
            Add a scope to the OIDC Provider. 'openid' exists as a scope on the provider by default.
            </summary>
            <param name="scope"></param>
        </member>
        <member name="M:Relativity.Services.Security.Models.OpenIDConnectProvider.AddScopesRange(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds a collection of scopes.
            </summary>
            <param name="scopes"></param>
        </member>
        <member name="M:Relativity.Services.Security.Models.OpenIDConnectProvider.ContainsScope(System.String)">
            <summary>
            Checks if the scope is already assigned to the provider.
            </summary>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Security.Models.OpenIDConnectProvider.RemoveScope(System.String)">
            <summary>
            Remove a scope from the Provider. 'openid' is a default scope and will not be removed.
            </summary>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Security.Models.OpenIDConnectProvider.GetScopes">
            <summary>
            Returns a clone of the scopes list.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.Security.Models.OpenIDConnectProvider.SetScopes(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets the scopes based on an existing collection.
            </summary>
            <param name="scopes"></param>
        </member>
        <member name="M:Relativity.Services.Security.Models.OpenIDConnectProvider.ClearScopes">
            <summary>
            Clears the scopes. 'openid' is a default scope and will not be removed.
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.Models.OpenIDConnectProvider.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Used with deserializing an OpenIDConnectProvider object.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Relativity.Services.Security.Models.OpenIDConnectProvider.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Used with serializing an OpenIDConnectProvider object.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordMethod.Email">
            <summary>
            The e-mail address of the user
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordMethod.InvalidLoginAttempts">
            <summary>
            Number of attempts to login that have not succeded.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordMethod.IsEnabled">
            <summary>
            Whether the login method is enabled
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordMethod.MustResetPasswordOnNextLogin">
            <summary>
            Controls whether the user is forced to reset their password after the next
            successful login
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordMethod.UserCanChangePassword">
            <summary>
            Whether the user can change their own password
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordMethod.PasswordExpirationInDays">
            <summary>
            The number of days a new password will be valid for until it expires.
            Setting this property to zero will cause the password never to expire.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordMethod.PasswordExpires">
            <summary>
            The date and time that the current password will expire.  This is a calcualted field.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordMethod.TwoFactorInfo">
            <summary>
            Information used for two factor authenticaiton
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordMethod.TwoFactorMode">
            <summary>
            Determines when twofactor authentication will be used.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordProvider.Name">
            <summary>
            A name for this provider; must be unique within the profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordProvider.IsEnabled">
            <summary>
            Whether this provider is enabled.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordProvider.MinimumPasswordLength">
            <summary>
            The minimum password length allowed.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordProvider.MaximumPasswordLength">
            <summary>
            The maximum password length allowed.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordProvider.MaximumPasswordAgeInDaysDefaultValue">
            <summary>
            The default number of days until a user is forced to change their
            password.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordProvider.UsersCanChangePasswordDefaultValue">
            <summary>
            The default setting for whether users are allowed to change their
            password.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordProvider.AllowEmailPasswordRecovery">
            <summary>
            Determines whether e-mail password recovery is available for users.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordProvider.PasswordRecoveryRequestLimit">
            <summary>
            The maximm number of e-mail password recovery requests that 
            can be outstanding at one time for a given user.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordProvider.MaximumPasswordHistory">
            <summary>
            The number of passwords to remember when setting a new password.  A
            user cannot set their password to any previous password within the
            defined window size.  Setting this value to zero disabled password
            history checking.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordProvider.MaximumInvalidLoginAttempts">
            <summary>
            The number of attempts a user is allowed to use before
            locking thier password method.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.PasswordProvider.AdditionalWorkFactor">
            <summary>
            A measure of the amount of time required to verify a password when
            a user logs into Relativity.
            </summary>
            <remarks>
            The work factor determines how robust your stored passwords hashes 
            are against brute-force attack.  Increasing this number will improve 
            the robustness of your password hashes.  However, increasing the work 
            factor by one will also double the amount of time needed to log in to 
            Relativity.  Adjusting the work factor allows you to choose the proper
            balance between security and usability.
            
            The value of this setting is added to the work factor for the Relativity
            environment.  Set this value to zero in order to use the default work 
            factor for the Relativity environment.  In most cases this will be 
            sufficient.
            </remarks>
        </member>
        <member name="T:Relativity.Services.Security.Models.ProtocolType">
            <summary>
            The type of Auth Provider, i.e. whether it is a local or external
            provider.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.RSAMethod.Subject">
            <summary>
            The RSA Login Name or E-mail Address to match against
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.RSAMethod.IsEnabled">
            <summary>
            Whether the login method is enabled
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.RSAProvider.Name">
            <summary>
            A name for this provider; must be unique within the profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.RSAProvider.IsEnabled">
            <summary>
            Whether this provider is enabled.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.SAML2Method.ProviderName">
            <summary>
            The name of the SAML2 provider this login method belongs to
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.SAML2Method.Subject">
            <summary>
            The "subject" for the method - typically the username
            that is associated with this user
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.SAML2Method.IsEnabled">
            <summary>
            Whether the login method is enabled
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.Models.SAML2Provider">
            <summary>
            Represents a SAML2P external identity provider.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.SAML2Provider.Name">
            <summary>
            A name for this provider; must be unique within the profile.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.SAML2Provider.Description">
            <summary>
            A description for this provider.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.SAML2Provider.IsEnabled">
            <summary>
            Whether this provider is enabled.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.SAML2Provider.Issuer">
            <summary>
            The Issuer of the Assertion.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.SAML2Provider.Audience">
            <summary>
            The target that will receive the Assertion.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.SAML2Provider.RedirectUri">
            <summary>
            The redirect uri that needs to get set at the identity provider.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.SAML2Provider.Certificate">
            <summary>
            The X.509 certificate in PEM format that contains the public key of the SAML identity provider
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.SAML2Provider.SubjectClaimType">
            <summary>
            The claim type to use for getting the user's subject mapping. Defaults to "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier".
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.Models.TwoFactorMode">
            <summary>
            Sets when two factor authenticaiton will be used.
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.Models.UserInviteError">
            <summary>
            Invitation email error for a user and the status code of the error.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.UserInviteError.UserId">
            <summary>
            ID of the user.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.UserInviteError.Exception">
            <summary>
            Exception thrown when attempting to send the user an invitation email.
            </summary>
        </member>
        <member name="P:Relativity.Services.Security.Models.UserInviteError.StatusCode">
            <summary>
            Status code for the error: 404 if the user doesn't exist or 
            isn't viewable by the caller, 403 if the caller doesn't have
            the necessary permissions to invite the user.
            </summary>
        </member>
        <member name="T:Relativity.Services.User.IUserManager">
            <summary>
            IPivotManager interface enables interaction with Relativity Pivot. 
            </summary>
        </member>
        <member name="M:Relativity.Services.User.IUserManager.RetrieveCurrentAsync(System.Int32)">
            <summary>
            Asynchronously retrieves the current user.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.User.IUserManager.RetrieveCurrentAclUserIdAsync(System.Int32)">
            <summary>
            Asynchronously retrieves the current acl user.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.Services.User.IUserManager.RetrieveAllAndDeletedAsync(System.Int32)">
            <summary>
            Asynchronously retrieves a list of users in a workspace including administrators and deleted users.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query.</param>
        </member>
        <member name="M:Relativity.Services.User.IUserManager.RetrieveAllAsync(System.Int32)">
            <summary>
            Asynchronously retrieves a list of users in a workspace including administrators.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query.</param>
        </member>
        <member name="M:Relativity.Services.User.IUserManager.RetrieveAllActiveAsync(System.Int32)">
            <summary>
            Asynchronously retrieves a list of users in a workspace.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query.</param>
        </member>
        <member name="M:Relativity.Services.User.IUserManager.RetrieveAllActiveAsync(System.Int32,System.Boolean)">
            <summary>
            Asynchronously retrieves a list of users in a workspace
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query</param>
            <param name="includeCurrentUser">Whether the current user should be included in the results; False would be for instances like coding docs</param>
        </member>
        <member name="M:Relativity.Services.User.IUserManager.RetrieveAllWithRelativityAccessAsync">
            <summary>
            Asynchronously retrieves a list of users from EDDS that have Relativity access.
            </summary>
        </member>
        <member name="M:Relativity.Services.User.IUserManager.RetrieveAllWithRelativityAccessAsync(System.Int32)">
            <summary>
            Asynchronously retrieves a list of users in a workspace that have Relativity access. 
            </summary>
        </member>
        <member name="M:Relativity.Services.User.IUserManager.RetrieveAllActiveWithLimitAsync(System.Int32)">
            <summary>
            Asynchronously retrieves a list of users in a workspace. If the list exceeds configured limit of users, no users will be returned.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query.</param>
        </member>
        <member name="M:Relativity.Services.User.IUserManager.RetrieveAllActiveWithLimitAsync(System.Int32,System.Boolean)">
            <summary>
            Asynchronously retrieves a list of users in a workspace. If the list exceeds configured limit of users, no users will be returned.
            </summary>
            <param name="workspaceId">The Artifact identifier of the workspace to query.</param>
            <param name="includeCurrentUser">Whether the current user should be included in the results; False would be for instances like coding docs</param>
        </member>
        <member name="T:Relativity.Services.User.IUserModule">
            <summary>
            User Manager Interface
            </summary>
        </member>
    </members>
</doc>
